// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="predict_ensemble,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.578100,HLS_SYN_LAT=7176,HLS_SYN_TPT=none,HLS_SYN_MEM=32,HLS_SYN_DSP=2,HLS_SYN_FF=1087,HLS_SYN_LUT=1215,HLS_VERSION=2019_1}" *)

module predict_ensemble (
        ap_clk,
        ap_rst_n,
        feature_stream_V_TDATA,
        feature_stream_V_TVALID,
        feature_stream_V_TREADY,
        prediction_sbp_V_TDATA,
        prediction_sbp_V_TVALID,
        prediction_sbp_V_TREADY,
        prediction_dbp_V_TDATA,
        prediction_dbp_V_TVALID,
        prediction_dbp_V_TREADY,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_pp0_stage0 = 23'd8;
parameter    ap_ST_fsm_pp0_stage1 = 23'd16;
parameter    ap_ST_fsm_pp0_stage2 = 23'd32;
parameter    ap_ST_fsm_state8 = 23'd64;
parameter    ap_ST_fsm_state9 = 23'd128;
parameter    ap_ST_fsm_state10 = 23'd256;
parameter    ap_ST_fsm_state11 = 23'd512;
parameter    ap_ST_fsm_state12 = 23'd1024;
parameter    ap_ST_fsm_state13 = 23'd2048;
parameter    ap_ST_fsm_state14 = 23'd4096;
parameter    ap_ST_fsm_pp1_stage0 = 23'd8192;
parameter    ap_ST_fsm_pp1_stage1 = 23'd16384;
parameter    ap_ST_fsm_pp1_stage2 = 23'd32768;
parameter    ap_ST_fsm_state19 = 23'd65536;
parameter    ap_ST_fsm_state20 = 23'd131072;
parameter    ap_ST_fsm_state21 = 23'd262144;
parameter    ap_ST_fsm_state22 = 23'd524288;
parameter    ap_ST_fsm_state23 = 23'd1048576;
parameter    ap_ST_fsm_state24 = 23'd2097152;
parameter    ap_ST_fsm_state25 = 23'd4194304;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] feature_stream_V_TDATA;
input   feature_stream_V_TVALID;
output   feature_stream_V_TREADY;
output  [31:0] prediction_sbp_V_TDATA;
output   prediction_sbp_V_TVALID;
input   prediction_sbp_V_TREADY;
output  [31:0] prediction_dbp_V_TDATA;
output   prediction_dbp_V_TVALID;
input   prediction_dbp_V_TREADY;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] feature_stream_V_0_data_out;
wire    feature_stream_V_0_vld_in;
wire    feature_stream_V_0_vld_out;
wire    feature_stream_V_0_ack_in;
reg    feature_stream_V_0_ack_out;
reg   [31:0] feature_stream_V_0_payload_A;
reg   [31:0] feature_stream_V_0_payload_B;
reg    feature_stream_V_0_sel_rd;
reg    feature_stream_V_0_sel_wr;
wire    feature_stream_V_0_sel;
wire    feature_stream_V_0_load_A;
wire    feature_stream_V_0_load_B;
reg   [1:0] feature_stream_V_0_state;
wire    feature_stream_V_0_state_cmp_full;
reg   [31:0] prediction_sbp_V_1_data_out;
reg    prediction_sbp_V_1_vld_in;
wire    prediction_sbp_V_1_vld_out;
wire    prediction_sbp_V_1_ack_in;
wire    prediction_sbp_V_1_ack_out;
reg   [31:0] prediction_sbp_V_1_payload_A;
reg   [31:0] prediction_sbp_V_1_payload_B;
reg    prediction_sbp_V_1_sel_rd;
reg    prediction_sbp_V_1_sel_wr;
wire    prediction_sbp_V_1_sel;
wire    prediction_sbp_V_1_load_A;
wire    prediction_sbp_V_1_load_B;
reg   [1:0] prediction_sbp_V_1_state;
wire    prediction_sbp_V_1_state_cmp_full;
reg   [31:0] prediction_dbp_V_1_data_out;
reg    prediction_dbp_V_1_vld_in;
wire    prediction_dbp_V_1_vld_out;
wire    prediction_dbp_V_1_ack_in;
wire    prediction_dbp_V_1_ack_out;
reg   [31:0] prediction_dbp_V_1_payload_A;
reg   [31:0] prediction_dbp_V_1_payload_B;
reg    prediction_dbp_V_1_sel_rd;
reg    prediction_dbp_V_1_sel_wr;
wire    prediction_dbp_V_1_sel;
wire    prediction_dbp_V_1_load_A;
wire    prediction_dbp_V_1_load_B;
reg   [1:0] prediction_dbp_V_1_state;
wire    prediction_dbp_V_1_state_cmp_full;
wire   [8:0] LBoostTree1_is_leaf_s_address0;
reg    LBoostTree1_is_leaf_s_ce0;
wire   [0:0] LBoostTree1_is_leaf_s_q0;
wire   [8:0] LBoostTree1_is_leaf_1_address0;
reg    LBoostTree1_is_leaf_1_ce0;
wire   [0:0] LBoostTree1_is_leaf_1_q0;
wire   [8:0] LBoostTree1_is_leaf_2_address0;
reg    LBoostTree1_is_leaf_2_ce0;
wire   [0:0] LBoostTree1_is_leaf_2_q0;
wire   [8:0] LBoostTree1_is_leaf_3_address0;
reg    LBoostTree1_is_leaf_3_ce0;
wire   [0:0] LBoostTree1_is_leaf_3_q0;
wire   [8:0] LBoostTree1_feature_3_address0;
reg    LBoostTree1_feature_3_ce0;
wire   [2:0] LBoostTree1_feature_3_q0;
wire   [8:0] LBoostTree1_feature_2_address0;
reg    LBoostTree1_feature_2_ce0;
wire   [2:0] LBoostTree1_feature_2_q0;
wire   [8:0] LBoostTree1_feature_1_address0;
reg    LBoostTree1_feature_1_ce0;
wire   [2:0] LBoostTree1_feature_1_q0;
wire   [8:0] LBoostTree1_feature_s_address0;
reg    LBoostTree1_feature_s_ce0;
wire   [2:0] LBoostTree1_feature_s_q0;
wire   [8:0] LBoostTree1_value_0_address0;
reg    LBoostTree1_value_0_ce0;
wire   [31:0] LBoostTree1_value_0_q0;
wire   [8:0] LBoostTree1_value_1_address0;
reg    LBoostTree1_value_1_ce0;
wire   [31:0] LBoostTree1_value_1_q0;
wire   [8:0] LBoostTree1_value_2_address0;
reg    LBoostTree1_value_2_ce0;
wire   [31:0] LBoostTree1_value_2_q0;
wire   [8:0] LBoostTree1_value_3_address0;
reg    LBoostTree1_value_3_ce0;
wire   [31:0] LBoostTree1_value_3_q0;
wire   [8:0] LBoostTree1_left_chi_3_address0;
reg    LBoostTree1_left_chi_3_ce0;
wire   [4:0] LBoostTree1_left_chi_3_q0;
wire   [8:0] LBoostTree1_left_chi_2_address0;
reg    LBoostTree1_left_chi_2_ce0;
wire   [4:0] LBoostTree1_left_chi_2_q0;
wire   [8:0] LBoostTree1_left_chi_1_address0;
reg    LBoostTree1_left_chi_1_ce0;
wire   [4:0] LBoostTree1_left_chi_1_q0;
wire   [8:0] LBoostTree1_left_chi_address0;
reg    LBoostTree1_left_chi_ce0;
wire   [4:0] LBoostTree1_left_chi_q0;
wire   [8:0] LBoostTree1_right_ch_3_address0;
reg    LBoostTree1_right_ch_3_ce0;
wire   [4:0] LBoostTree1_right_ch_3_q0;
wire   [8:0] LBoostTree1_right_ch_2_address0;
reg    LBoostTree1_right_ch_2_ce0;
wire   [4:0] LBoostTree1_right_ch_2_q0;
wire   [8:0] LBoostTree1_right_ch_1_address0;
reg    LBoostTree1_right_ch_1_ce0;
wire   [4:0] LBoostTree1_right_ch_1_q0;
wire   [8:0] LBoostTree1_right_ch_address0;
reg    LBoostTree1_right_ch_ce0;
wire   [4:0] LBoostTree1_right_ch_q0;
wire   [8:0] LBoostTree2_is_leaf_s_address0;
reg    LBoostTree2_is_leaf_s_ce0;
wire   [0:0] LBoostTree2_is_leaf_s_q0;
wire   [8:0] LBoostTree2_is_leaf_1_address0;
reg    LBoostTree2_is_leaf_1_ce0;
wire   [0:0] LBoostTree2_is_leaf_1_q0;
wire   [8:0] LBoostTree2_is_leaf_2_address0;
reg    LBoostTree2_is_leaf_2_ce0;
wire   [0:0] LBoostTree2_is_leaf_2_q0;
wire   [8:0] LBoostTree2_is_leaf_3_address0;
reg    LBoostTree2_is_leaf_3_ce0;
wire   [0:0] LBoostTree2_is_leaf_3_q0;
wire   [8:0] LBoostTree2_feature_3_address0;
reg    LBoostTree2_feature_3_ce0;
wire   [2:0] LBoostTree2_feature_3_q0;
wire   [8:0] LBoostTree2_feature_2_address0;
reg    LBoostTree2_feature_2_ce0;
wire   [2:0] LBoostTree2_feature_2_q0;
wire   [8:0] LBoostTree2_feature_1_address0;
reg    LBoostTree2_feature_1_ce0;
wire   [2:0] LBoostTree2_feature_1_q0;
wire   [8:0] LBoostTree2_feature_s_address0;
reg    LBoostTree2_feature_s_ce0;
wire   [2:0] LBoostTree2_feature_s_q0;
wire   [8:0] LBoostTree2_value_0_address0;
reg    LBoostTree2_value_0_ce0;
wire   [31:0] LBoostTree2_value_0_q0;
wire   [8:0] LBoostTree2_value_1_address0;
reg    LBoostTree2_value_1_ce0;
wire   [31:0] LBoostTree2_value_1_q0;
wire   [8:0] LBoostTree2_value_2_address0;
reg    LBoostTree2_value_2_ce0;
wire   [31:0] LBoostTree2_value_2_q0;
wire   [8:0] LBoostTree2_value_3_address0;
reg    LBoostTree2_value_3_ce0;
wire   [31:0] LBoostTree2_value_3_q0;
wire   [8:0] LBoostTree2_left_chi_3_address0;
reg    LBoostTree2_left_chi_3_ce0;
wire   [4:0] LBoostTree2_left_chi_3_q0;
wire   [8:0] LBoostTree2_left_chi_2_address0;
reg    LBoostTree2_left_chi_2_ce0;
wire   [4:0] LBoostTree2_left_chi_2_q0;
wire   [8:0] LBoostTree2_left_chi_1_address0;
reg    LBoostTree2_left_chi_1_ce0;
wire   [4:0] LBoostTree2_left_chi_1_q0;
wire   [8:0] LBoostTree2_left_chi_address0;
reg    LBoostTree2_left_chi_ce0;
wire   [4:0] LBoostTree2_left_chi_q0;
wire   [8:0] LBoostTree2_right_ch_3_address0;
reg    LBoostTree2_right_ch_3_ce0;
wire   [4:0] LBoostTree2_right_ch_3_q0;
wire   [8:0] LBoostTree2_right_ch_2_address0;
reg    LBoostTree2_right_ch_2_ce0;
wire   [4:0] LBoostTree2_right_ch_2_q0;
wire   [8:0] LBoostTree2_right_ch_1_address0;
reg    LBoostTree2_right_ch_1_ce0;
wire   [4:0] LBoostTree2_right_ch_1_q0;
wire   [8:0] LBoostTree2_right_ch_address0;
reg    LBoostTree2_right_ch_ce0;
wire   [4:0] LBoostTree2_right_ch_q0;
reg    feature_stream_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln23_fu_893_p2;
reg    prediction_sbp_V_TDATA_blk_n;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln51_fu_1227_p2;
wire    ap_CS_fsm_state25;
reg    prediction_dbp_V_TDATA_blk_n;
reg   [7:0] current_addr1_0_reg_792;
reg   [5:0] depth_0_reg_803;
reg   [7:0] curren_0_reg_825;
reg   [5:0] depth3_0_reg_836;
wire    ap_CS_fsm_state8;
reg    ap_block_state14_io;
wire   [31:0] grp_fu_847_p2;
reg   [31:0] reg_883;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state19;
wire   [2:0] i_fu_899_p2;
reg    ap_block_state2;
wire   [0:0] icmp_ln32_fu_934_p2;
wire    ap_CS_fsm_state3;
wire   [6:0] i_1_fu_940_p2;
reg   [6:0] i_1_reg_1561;
wire   [31:0] zext_ln6_fu_956_p1;
reg   [31:0] zext_ln6_reg_1566;
wire   [9:0] zext_ln36_fu_972_p1;
reg   [9:0] zext_ln36_reg_1575;
wire   [0:0] icmp_ln36_fu_981_p2;
reg   [0:0] icmp_ln36_reg_1587;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] depth_fu_987_p2;
reg   [5:0] depth_reg_1591;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln321_1_fu_1002_p1;
reg   [63:0] zext_ln321_1_reg_1596;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [2:0] node1_feature_index_s_fu_1022_p6;
reg   [2:0] node1_feature_index_s_reg_1704;
wire   [31:0] node1_value_fu_1035_p6;
reg   [31:0] node1_value_reg_1709;
reg   [4:0] LBoostTree1_left_chi_8_reg_1716;
reg   [4:0] LBoostTree1_left_chi_9_reg_1721;
reg   [4:0] LBoostTree1_left_chi_10_reg_1726;
reg   [4:0] LBoostTree1_left_chi_11_reg_1731;
reg   [4:0] LBoostTree1_right_ch_8_reg_1736;
reg   [4:0] LBoostTree1_right_ch_9_reg_1741;
reg   [4:0] LBoostTree1_right_ch_10_reg_1746;
reg   [4:0] LBoostTree1_right_ch_11_reg_1751;
wire   [0:0] node1_is_leaf_fu_1048_p6;
reg   [0:0] node1_is_leaf_reg_1756;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [7:0] node1_left_child_V_fu_1073_p6;
reg   [7:0] node1_left_child_V_reg_1760;
wire   [7:0] node1_right_child_V_fu_1098_p6;
reg   [7:0] node1_right_child_V_reg_1765;
wire   [31:0] fval1_fu_1120_p6;
wire   [0:0] icmp_ln46_fu_1153_p2;
reg   [0:0] icmp_ln46_reg_1775;
wire   [0:0] icmp_ln46_1_fu_1159_p2;
reg   [0:0] icmp_ln46_1_reg_1780;
wire   [7:0] select_ln46_fu_1216_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [6:0] i_2_fu_1233_p2;
reg   [6:0] i_2_reg_1794;
wire   [31:0] zext_ln6_1_fu_1249_p1;
reg   [31:0] zext_ln6_1_reg_1799;
wire   [9:0] zext_ln54_fu_1265_p1;
reg   [9:0] zext_ln54_reg_1808;
wire   [0:0] icmp_ln54_fu_1269_p2;
reg   [0:0] icmp_ln54_reg_1813;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state18_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [5:0] depth_1_fu_1275_p2;
reg   [5:0] depth_1_reg_1817;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln321_11_fu_1290_p1;
reg   [63:0] zext_ln321_11_reg_1822;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state16_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [2:0] node_feature_index_V_fu_1310_p6;
reg   [2:0] node_feature_index_V_reg_1930;
wire   [31:0] node_value_fu_1323_p6;
reg   [31:0] node_value_reg_1935;
reg   [4:0] LBoostTree2_left_chi_8_reg_1942;
reg   [4:0] LBoostTree2_left_chi_9_reg_1947;
reg   [4:0] LBoostTree2_left_chi_10_reg_1952;
reg   [4:0] LBoostTree2_left_chi_11_reg_1957;
reg   [4:0] LBoostTree2_right_ch_8_reg_1962;
reg   [4:0] LBoostTree2_right_ch_9_reg_1967;
reg   [4:0] LBoostTree2_right_ch_10_reg_1972;
reg   [4:0] LBoostTree2_right_ch_11_reg_1977;
wire   [0:0] node_is_leaf_fu_1336_p6;
reg   [0:0] node_is_leaf_reg_1982;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state17_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [7:0] node_left_child_V_fu_1361_p6;
reg   [7:0] node_left_child_V_reg_1986;
wire   [7:0] node_right_child_V_fu_1386_p6;
reg   [7:0] node_right_child_V_reg_1991;
wire   [31:0] fval_fu_1408_p6;
wire   [0:0] icmp_ln63_fu_1441_p2;
reg   [0:0] icmp_ln63_reg_2001;
wire   [0:0] icmp_ln63_1_fu_1447_p2;
reg   [0:0] icmp_ln63_1_reg_2006;
wire   [7:0] select_ln63_fu_1504_p3;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp0_stage2_subdone;
reg    ap_predicate_tran6to8_state6;
reg    ap_condition_pp0_exit_iter0_state6;
wire    ap_block_pp1_stage2_subdone;
reg    ap_predicate_tran17to19_state17;
reg    ap_condition_pp1_exit_iter0_state17;
reg   [2:0] i_0_reg_770;
reg   [6:0] i1_0_reg_781;
wire    ap_CS_fsm_state12;
reg   [7:0] ap_phi_mux_current_addr1_0_phi_fu_796_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_depth_0_phi_fu_807_p4;
reg   [6:0] i2_0_reg_814;
wire    ap_CS_fsm_state23;
reg   [7:0] ap_phi_mux_curren_0_phi_fu_829_p4;
wire    ap_block_pp1_stage0;
reg   [5:0] ap_phi_mux_depth3_0_phi_fu_840_p4;
wire    ap_block_pp0_stage1;
wire    ap_block_pp1_stage1;
reg   [31:0] tmp_fu_206;
wire   [1:0] trunc_ln25_fu_905_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp1_stage2;
reg   [31:0] tmp_2_fu_210;
reg   [31:0] tmp_3_fu_214;
reg   [31:0] tmp_4_fu_218;
reg   [31:0] tmp_5_fu_222;
reg   [31:0] tmp_18_fu_226;
reg   [31:0] grp_fu_847_p0;
reg   [31:0] grp_fu_847_p1;
reg   [31:0] grp_fu_851_p0;
reg   [31:0] grp_fu_851_p1;
wire   [2:0] lshr_ln6_fu_946_p4;
wire   [3:0] trunc_ln321_fu_960_p1;
wire   [8:0] tmp_9_fu_964_p3;
wire   [9:0] zext_ln321_fu_993_p1;
wire   [9:0] add_ln321_fu_997_p2;
wire   [7:0] node1_left_child_V_fu_1073_p1;
wire   [7:0] node1_left_child_V_fu_1073_p2;
wire   [7:0] node1_left_child_V_fu_1073_p3;
wire   [7:0] node1_left_child_V_fu_1073_p4;
wire   [7:0] node1_right_child_V_fu_1098_p1;
wire   [7:0] node1_right_child_V_fu_1098_p2;
wire   [7:0] node1_right_child_V_fu_1098_p3;
wire   [7:0] node1_right_child_V_fu_1098_p4;
wire   [1:0] trunc_ln45_fu_1111_p1;
wire   [1:0] fval1_fu_1120_p5;
wire   [31:0] bitcast_ln46_fu_1135_p1;
wire   [7:0] tmp_7_fu_1139_p4;
wire   [22:0] trunc_ln46_fu_1149_p1;
wire   [31:0] bitcast_ln46_1_fu_1165_p1;
wire   [7:0] tmp_11_fu_1168_p4;
wire   [22:0] trunc_ln46_1_fu_1178_p1;
wire   [0:0] icmp_ln46_3_fu_1192_p2;
wire   [0:0] icmp_ln46_2_fu_1186_p2;
wire   [0:0] or_ln46_fu_1182_p2;
wire   [0:0] or_ln46_1_fu_1198_p2;
wire   [0:0] and_ln46_fu_1204_p2;
wire   [0:0] grp_fu_851_p2;
wire   [0:0] and_ln46_1_fu_1210_p2;
wire   [2:0] lshr_ln6_1_fu_1239_p4;
wire   [3:0] trunc_ln321_1_fu_1253_p1;
wire   [8:0] tmp_10_fu_1257_p3;
wire   [9:0] zext_ln321_10_fu_1281_p1;
wire   [9:0] add_ln321_1_fu_1285_p2;
wire   [7:0] node_left_child_V_fu_1361_p1;
wire   [7:0] node_left_child_V_fu_1361_p2;
wire   [7:0] node_left_child_V_fu_1361_p3;
wire   [7:0] node_left_child_V_fu_1361_p4;
wire   [7:0] node_right_child_V_fu_1386_p1;
wire   [7:0] node_right_child_V_fu_1386_p2;
wire   [7:0] node_right_child_V_fu_1386_p3;
wire   [7:0] node_right_child_V_fu_1386_p4;
wire   [1:0] trunc_ln62_fu_1399_p1;
wire   [1:0] fval_fu_1408_p5;
wire   [31:0] bitcast_ln63_fu_1423_p1;
wire   [7:0] tmp_13_fu_1427_p4;
wire   [22:0] trunc_ln63_fu_1437_p1;
wire   [31:0] bitcast_ln63_1_fu_1453_p1;
wire   [7:0] tmp_14_fu_1456_p4;
wire   [22:0] trunc_ln63_1_fu_1466_p1;
wire   [0:0] icmp_ln63_3_fu_1480_p2;
wire   [0:0] icmp_ln63_2_fu_1474_p2;
wire   [0:0] or_ln63_fu_1470_p2;
wire   [0:0] or_ln63_1_fu_1486_p2;
wire   [0:0] and_ln63_fu_1492_p2;
wire   [0:0] and_ln63_1_fu_1498_p2;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp1_stage2_00001;
reg    ap_block_state25;
reg    ap_block_state25_io;
reg   [22:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp1_stage0_subdone;
wire    ap_block_pp1_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 feature_stream_V_0_sel_rd = 1'b0;
#0 feature_stream_V_0_sel_wr = 1'b0;
#0 feature_stream_V_0_state = 2'd0;
#0 prediction_sbp_V_1_sel_rd = 1'b0;
#0 prediction_sbp_V_1_sel_wr = 1'b0;
#0 prediction_sbp_V_1_state = 2'd0;
#0 prediction_dbp_V_1_sel_rd = 1'b0;
#0 prediction_dbp_V_1_sel_wr = 1'b0;
#0 prediction_dbp_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

predict_ensemble_bkb #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_is_leaf_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_is_leaf_s_address0),
    .ce0(LBoostTree1_is_leaf_s_ce0),
    .q0(LBoostTree1_is_leaf_s_q0)
);

predict_ensemble_cud #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_is_leaf_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_is_leaf_1_address0),
    .ce0(LBoostTree1_is_leaf_1_ce0),
    .q0(LBoostTree1_is_leaf_1_q0)
);

predict_ensemble_dEe #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_is_leaf_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_is_leaf_2_address0),
    .ce0(LBoostTree1_is_leaf_2_ce0),
    .q0(LBoostTree1_is_leaf_2_q0)
);

predict_ensemble_eOg #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_is_leaf_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_is_leaf_3_address0),
    .ce0(LBoostTree1_is_leaf_3_ce0),
    .q0(LBoostTree1_is_leaf_3_q0)
);

predict_ensemble_fYi #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_feature_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_feature_3_address0),
    .ce0(LBoostTree1_feature_3_ce0),
    .q0(LBoostTree1_feature_3_q0)
);

predict_ensemble_g8j #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_feature_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_feature_2_address0),
    .ce0(LBoostTree1_feature_2_ce0),
    .q0(LBoostTree1_feature_2_q0)
);

predict_ensemble_hbi #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_feature_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_feature_1_address0),
    .ce0(LBoostTree1_feature_1_ce0),
    .q0(LBoostTree1_feature_1_q0)
);

predict_ensemble_ibs #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_feature_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_feature_s_address0),
    .ce0(LBoostTree1_feature_s_ce0),
    .q0(LBoostTree1_feature_s_q0)
);

predict_ensemble_jbC #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_value_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_value_0_address0),
    .ce0(LBoostTree1_value_0_ce0),
    .q0(LBoostTree1_value_0_q0)
);

predict_ensemble_kbM #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_value_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_value_1_address0),
    .ce0(LBoostTree1_value_1_ce0),
    .q0(LBoostTree1_value_1_q0)
);

predict_ensemble_lbW #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_value_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_value_2_address0),
    .ce0(LBoostTree1_value_2_ce0),
    .q0(LBoostTree1_value_2_q0)
);

predict_ensemble_mb6 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_value_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_value_3_address0),
    .ce0(LBoostTree1_value_3_ce0),
    .q0(LBoostTree1_value_3_q0)
);

predict_ensemble_ncg #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_left_chi_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_left_chi_3_address0),
    .ce0(LBoostTree1_left_chi_3_ce0),
    .q0(LBoostTree1_left_chi_3_q0)
);

predict_ensemble_ocq #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_left_chi_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_left_chi_2_address0),
    .ce0(LBoostTree1_left_chi_2_ce0),
    .q0(LBoostTree1_left_chi_2_q0)
);

predict_ensemble_pcA #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_left_chi_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_left_chi_1_address0),
    .ce0(LBoostTree1_left_chi_1_ce0),
    .q0(LBoostTree1_left_chi_1_q0)
);

predict_ensemble_qcK #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_left_chi_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_left_chi_address0),
    .ce0(LBoostTree1_left_chi_ce0),
    .q0(LBoostTree1_left_chi_q0)
);

predict_ensemble_rcU #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_right_ch_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_right_ch_3_address0),
    .ce0(LBoostTree1_right_ch_3_ce0),
    .q0(LBoostTree1_right_ch_3_q0)
);

predict_ensemble_sc4 #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_right_ch_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_right_ch_2_address0),
    .ce0(LBoostTree1_right_ch_2_ce0),
    .q0(LBoostTree1_right_ch_2_q0)
);

predict_ensemble_tde #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_right_ch_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_right_ch_1_address0),
    .ce0(LBoostTree1_right_ch_1_ce0),
    .q0(LBoostTree1_right_ch_1_q0)
);

predict_ensemble_udo #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree1_right_ch_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree1_right_ch_address0),
    .ce0(LBoostTree1_right_ch_ce0),
    .q0(LBoostTree1_right_ch_q0)
);

predict_ensemble_vdy #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_is_leaf_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_is_leaf_s_address0),
    .ce0(LBoostTree2_is_leaf_s_ce0),
    .q0(LBoostTree2_is_leaf_s_q0)
);

predict_ensemble_wdI #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_is_leaf_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_is_leaf_1_address0),
    .ce0(LBoostTree2_is_leaf_1_ce0),
    .q0(LBoostTree2_is_leaf_1_q0)
);

predict_ensemble_xdS #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_is_leaf_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_is_leaf_2_address0),
    .ce0(LBoostTree2_is_leaf_2_ce0),
    .q0(LBoostTree2_is_leaf_2_q0)
);

predict_ensemble_yd2 #(
    .DataWidth( 1 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_is_leaf_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_is_leaf_3_address0),
    .ce0(LBoostTree2_is_leaf_3_ce0),
    .q0(LBoostTree2_is_leaf_3_q0)
);

predict_ensemble_zec #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_feature_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_feature_3_address0),
    .ce0(LBoostTree2_feature_3_ce0),
    .q0(LBoostTree2_feature_3_q0)
);

predict_ensemble_Aem #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_feature_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_feature_2_address0),
    .ce0(LBoostTree2_feature_2_ce0),
    .q0(LBoostTree2_feature_2_q0)
);

predict_ensemble_Bew #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_feature_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_feature_1_address0),
    .ce0(LBoostTree2_feature_1_ce0),
    .q0(LBoostTree2_feature_1_q0)
);

predict_ensemble_CeG #(
    .DataWidth( 3 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_feature_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_feature_s_address0),
    .ce0(LBoostTree2_feature_s_ce0),
    .q0(LBoostTree2_feature_s_q0)
);

predict_ensemble_DeQ #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_value_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_value_0_address0),
    .ce0(LBoostTree2_value_0_ce0),
    .q0(LBoostTree2_value_0_q0)
);

predict_ensemble_Ee0 #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_value_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_value_1_address0),
    .ce0(LBoostTree2_value_1_ce0),
    .q0(LBoostTree2_value_1_q0)
);

predict_ensemble_Ffa #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_value_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_value_2_address0),
    .ce0(LBoostTree2_value_2_ce0),
    .q0(LBoostTree2_value_2_q0)
);

predict_ensemble_Gfk #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_value_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_value_3_address0),
    .ce0(LBoostTree2_value_3_ce0),
    .q0(LBoostTree2_value_3_q0)
);

predict_ensemble_Hfu #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_left_chi_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_left_chi_3_address0),
    .ce0(LBoostTree2_left_chi_3_ce0),
    .q0(LBoostTree2_left_chi_3_q0)
);

predict_ensemble_IfE #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_left_chi_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_left_chi_2_address0),
    .ce0(LBoostTree2_left_chi_2_ce0),
    .q0(LBoostTree2_left_chi_2_q0)
);

predict_ensemble_JfO #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_left_chi_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_left_chi_1_address0),
    .ce0(LBoostTree2_left_chi_1_ce0),
    .q0(LBoostTree2_left_chi_1_q0)
);

predict_ensemble_KfY #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_left_chi_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_left_chi_address0),
    .ce0(LBoostTree2_left_chi_ce0),
    .q0(LBoostTree2_left_chi_q0)
);

predict_ensemble_Lf8 #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_right_ch_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_right_ch_3_address0),
    .ce0(LBoostTree2_right_ch_3_ce0),
    .q0(LBoostTree2_right_ch_3_q0)
);

predict_ensemble_Mgi #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_right_ch_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_right_ch_2_address0),
    .ce0(LBoostTree2_right_ch_2_ce0),
    .q0(LBoostTree2_right_ch_2_q0)
);

predict_ensemble_Ngs #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_right_ch_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_right_ch_1_address0),
    .ce0(LBoostTree2_right_ch_1_ce0),
    .q0(LBoostTree2_right_ch_1_q0)
);

predict_ensemble_OgC #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
LBoostTree2_right_ch_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LBoostTree2_right_ch_address0),
    .ce0(LBoostTree2_right_ch_ce0),
    .q0(LBoostTree2_right_ch_q0)
);

predict_ensemble_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
predict_ensemble_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

predict_ensemble_PgM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predict_ensemble_PgM_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_847_p0),
    .din1(grp_fu_847_p1),
    .ce(1'b1),
    .dout(grp_fu_847_p2)
);

predict_ensemble_QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predict_ensemble_QgW_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_851_p0),
    .din1(grp_fu_851_p1),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_851_p2)
);

predict_ensemble_Rg6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 3 ),
    .din3_WIDTH( 3 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 3 ))
predict_ensemble_Rg6_U3(
    .din0(LBoostTree1_feature_3_q0),
    .din1(LBoostTree1_feature_2_q0),
    .din2(LBoostTree1_feature_1_q0),
    .din3(LBoostTree1_feature_s_q0),
    .din4(zext_ln6_reg_1566),
    .dout(node1_feature_index_s_fu_1022_p6)
);

predict_ensemble_Shg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predict_ensemble_Shg_U4(
    .din0(LBoostTree1_value_0_q0),
    .din1(LBoostTree1_value_1_q0),
    .din2(LBoostTree1_value_2_q0),
    .din3(LBoostTree1_value_3_q0),
    .din4(zext_ln6_reg_1566),
    .dout(node1_value_fu_1035_p6)
);

predict_ensemble_Thq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predict_ensemble_Thq_U5(
    .din0(LBoostTree1_is_leaf_s_q0),
    .din1(LBoostTree1_is_leaf_1_q0),
    .din2(LBoostTree1_is_leaf_2_q0),
    .din3(LBoostTree1_is_leaf_3_q0),
    .din4(zext_ln6_reg_1566),
    .dout(node1_is_leaf_fu_1048_p6)
);

predict_ensemble_UhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
predict_ensemble_UhA_U6(
    .din0(node1_left_child_V_fu_1073_p1),
    .din1(node1_left_child_V_fu_1073_p2),
    .din2(node1_left_child_V_fu_1073_p3),
    .din3(node1_left_child_V_fu_1073_p4),
    .din4(zext_ln6_reg_1566),
    .dout(node1_left_child_V_fu_1073_p6)
);

predict_ensemble_UhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
predict_ensemble_UhA_U7(
    .din0(node1_right_child_V_fu_1098_p1),
    .din1(node1_right_child_V_fu_1098_p2),
    .din2(node1_right_child_V_fu_1098_p3),
    .din3(node1_right_child_V_fu_1098_p4),
    .din4(zext_ln6_reg_1566),
    .dout(node1_right_child_V_fu_1098_p6)
);

predict_ensemble_VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
predict_ensemble_VhK_U8(
    .din0(tmp_fu_206),
    .din1(tmp_2_fu_210),
    .din2(tmp_3_fu_214),
    .din3(tmp_4_fu_218),
    .din4(fval1_fu_1120_p5),
    .dout(fval1_fu_1120_p6)
);

predict_ensemble_Rg6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 3 ),
    .din3_WIDTH( 3 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 3 ))
predict_ensemble_Rg6_U9(
    .din0(LBoostTree2_feature_3_q0),
    .din1(LBoostTree2_feature_2_q0),
    .din2(LBoostTree2_feature_1_q0),
    .din3(LBoostTree2_feature_s_q0),
    .din4(zext_ln6_1_reg_1799),
    .dout(node_feature_index_V_fu_1310_p6)
);

predict_ensemble_Shg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predict_ensemble_Shg_U10(
    .din0(LBoostTree2_value_0_q0),
    .din1(LBoostTree2_value_1_q0),
    .din2(LBoostTree2_value_2_q0),
    .din3(LBoostTree2_value_3_q0),
    .din4(zext_ln6_1_reg_1799),
    .dout(node_value_fu_1323_p6)
);

predict_ensemble_Thq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predict_ensemble_Thq_U11(
    .din0(LBoostTree2_is_leaf_s_q0),
    .din1(LBoostTree2_is_leaf_1_q0),
    .din2(LBoostTree2_is_leaf_2_q0),
    .din3(LBoostTree2_is_leaf_3_q0),
    .din4(zext_ln6_1_reg_1799),
    .dout(node_is_leaf_fu_1336_p6)
);

predict_ensemble_UhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
predict_ensemble_UhA_U12(
    .din0(node_left_child_V_fu_1361_p1),
    .din1(node_left_child_V_fu_1361_p2),
    .din2(node_left_child_V_fu_1361_p3),
    .din3(node_left_child_V_fu_1361_p4),
    .din4(zext_ln6_1_reg_1799),
    .dout(node_left_child_V_fu_1361_p6)
);

predict_ensemble_UhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
predict_ensemble_UhA_U13(
    .din0(node_right_child_V_fu_1386_p1),
    .din1(node_right_child_V_fu_1386_p2),
    .din2(node_right_child_V_fu_1386_p3),
    .din3(node_right_child_V_fu_1386_p4),
    .din4(zext_ln6_1_reg_1799),
    .dout(node_right_child_V_fu_1386_p6)
);

predict_ensemble_VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
predict_ensemble_VhK_U14(
    .din0(tmp_fu_206),
    .din1(tmp_2_fu_210),
    .din2(tmp_3_fu_214),
    .din3(tmp_4_fu_218),
    .din4(fval_fu_1408_p5),
    .dout(fval_fu_1408_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln32_fu_934_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln32_fu_934_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln51_fu_1227_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state17);
        end else if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln51_fu_1227_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        feature_stream_V_0_sel_rd <= 1'b0;
    end else begin
        if (((feature_stream_V_0_ack_out == 1'b1) & (feature_stream_V_0_vld_out == 1'b1))) begin
            feature_stream_V_0_sel_rd <= ~feature_stream_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        feature_stream_V_0_sel_wr <= 1'b0;
    end else begin
        if (((feature_stream_V_0_ack_in == 1'b1) & (feature_stream_V_0_vld_in == 1'b1))) begin
            feature_stream_V_0_sel_wr <= ~feature_stream_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        feature_stream_V_0_state <= 2'd0;
    end else begin
        if ((((feature_stream_V_0_state == 2'd2) & (feature_stream_V_0_vld_in == 1'b0)) | ((feature_stream_V_0_state == 2'd3) & (feature_stream_V_0_vld_in == 1'b0) & (feature_stream_V_0_ack_out == 1'b1)))) begin
            feature_stream_V_0_state <= 2'd2;
        end else if ((((feature_stream_V_0_state == 2'd1) & (feature_stream_V_0_ack_out == 1'b0)) | ((feature_stream_V_0_state == 2'd3) & (feature_stream_V_0_ack_out == 1'b0) & (feature_stream_V_0_vld_in == 1'b1)))) begin
            feature_stream_V_0_state <= 2'd1;
        end else if (((~((feature_stream_V_0_vld_in == 1'b0) & (feature_stream_V_0_ack_out == 1'b1)) & ~((feature_stream_V_0_ack_out == 1'b0) & (feature_stream_V_0_vld_in == 1'b1)) & (feature_stream_V_0_state == 2'd3)) | ((feature_stream_V_0_state == 2'd1) & (feature_stream_V_0_ack_out == 1'b1)) | ((feature_stream_V_0_state == 2'd2) & (feature_stream_V_0_vld_in == 1'b1)))) begin
            feature_stream_V_0_state <= 2'd3;
        end else begin
            feature_stream_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prediction_dbp_V_1_sel_rd <= 1'b0;
    end else begin
        if (((prediction_dbp_V_1_ack_out == 1'b1) & (prediction_dbp_V_1_vld_out == 1'b1))) begin
            prediction_dbp_V_1_sel_rd <= ~prediction_dbp_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prediction_dbp_V_1_sel_wr <= 1'b0;
    end else begin
        if (((prediction_dbp_V_1_ack_in == 1'b1) & (prediction_dbp_V_1_vld_in == 1'b1))) begin
            prediction_dbp_V_1_sel_wr <= ~prediction_dbp_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prediction_dbp_V_1_state <= 2'd0;
    end else begin
        if ((((prediction_dbp_V_1_state == 2'd2) & (prediction_dbp_V_1_vld_in == 1'b0)) | ((prediction_dbp_V_1_state == 2'd3) & (prediction_dbp_V_1_vld_in == 1'b0) & (prediction_dbp_V_1_ack_out == 1'b1)))) begin
            prediction_dbp_V_1_state <= 2'd2;
        end else if ((((prediction_dbp_V_1_state == 2'd1) & (prediction_dbp_V_TREADY == 1'b0)) | ((prediction_dbp_V_1_state == 2'd3) & (prediction_dbp_V_TREADY == 1'b0) & (prediction_dbp_V_1_vld_in == 1'b1)))) begin
            prediction_dbp_V_1_state <= 2'd1;
        end else if (((~((prediction_dbp_V_1_vld_in == 1'b0) & (prediction_dbp_V_1_ack_out == 1'b1)) & ~((prediction_dbp_V_TREADY == 1'b0) & (prediction_dbp_V_1_vld_in == 1'b1)) & (prediction_dbp_V_1_state == 2'd3)) | ((prediction_dbp_V_1_state == 2'd1) & (prediction_dbp_V_1_ack_out == 1'b1)) | ((prediction_dbp_V_1_state == 2'd2) & (prediction_dbp_V_1_vld_in == 1'b1)))) begin
            prediction_dbp_V_1_state <= 2'd3;
        end else begin
            prediction_dbp_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prediction_sbp_V_1_sel_rd <= 1'b0;
    end else begin
        if (((prediction_sbp_V_1_ack_out == 1'b1) & (prediction_sbp_V_1_vld_out == 1'b1))) begin
            prediction_sbp_V_1_sel_rd <= ~prediction_sbp_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prediction_sbp_V_1_sel_wr <= 1'b0;
    end else begin
        if (((prediction_sbp_V_1_ack_in == 1'b1) & (prediction_sbp_V_1_vld_in == 1'b1))) begin
            prediction_sbp_V_1_sel_wr <= ~prediction_sbp_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prediction_sbp_V_1_state <= 2'd0;
    end else begin
        if ((((prediction_sbp_V_1_state == 2'd2) & (prediction_sbp_V_1_vld_in == 1'b0)) | ((prediction_sbp_V_1_state == 2'd3) & (prediction_sbp_V_1_vld_in == 1'b0) & (prediction_sbp_V_1_ack_out == 1'b1)))) begin
            prediction_sbp_V_1_state <= 2'd2;
        end else if ((((prediction_sbp_V_1_state == 2'd1) & (prediction_sbp_V_TREADY == 1'b0)) | ((prediction_sbp_V_1_state == 2'd3) & (prediction_sbp_V_TREADY == 1'b0) & (prediction_sbp_V_1_vld_in == 1'b1)))) begin
            prediction_sbp_V_1_state <= 2'd1;
        end else if (((~((prediction_sbp_V_1_vld_in == 1'b0) & (prediction_sbp_V_1_ack_out == 1'b1)) & ~((prediction_sbp_V_TREADY == 1'b0) & (prediction_sbp_V_1_vld_in == 1'b1)) & (prediction_sbp_V_1_state == 2'd3)) | ((prediction_sbp_V_1_state == 2'd1) & (prediction_sbp_V_1_ack_out == 1'b1)) | ((prediction_sbp_V_1_state == 2'd2) & (prediction_sbp_V_1_vld_in == 1'b1)))) begin
            prediction_sbp_V_1_state <= 2'd3;
        end else begin
            prediction_sbp_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (node_is_leaf_reg_1982 == 1'd0) & (icmp_ln54_reg_1813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        curren_0_reg_825 <= select_ln63_fu_1504_p3;
    end else if (((icmp_ln51_fu_1227_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        curren_0_reg_825 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((node1_is_leaf_reg_1756 == 1'd0) & (icmp_ln36_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_addr1_0_reg_792 <= select_ln46_fu_1216_p3;
    end else if (((icmp_ln32_fu_934_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        current_addr1_0_reg_792 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (node_is_leaf_reg_1982 == 1'd0) & (icmp_ln54_reg_1813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        depth3_0_reg_836 <= depth_1_reg_1817;
    end else if (((icmp_ln51_fu_1227_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        depth3_0_reg_836 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((node1_is_leaf_reg_1756 == 1'd0) & (icmp_ln36_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        depth_0_reg_803 <= depth_reg_1591;
    end else if (((icmp_ln32_fu_934_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        depth_0_reg_803 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (icmp_ln23_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_reg_781 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_0_reg_781 <= i_1_reg_1561;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_934_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i2_0_reg_814 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i2_0_reg_814 <= i_2_reg_1794;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_770 <= i_fu_899_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_770 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_1813 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_18_fu_226 <= reg_883;
    end else if (((icmp_ln32_fu_934_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_18_fu_226 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_5_fu_222 <= reg_883;
    end else if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (icmp_ln23_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_5_fu_222 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln36_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        LBoostTree1_left_chi_10_reg_1726 <= LBoostTree1_left_chi_1_q0;
        LBoostTree1_left_chi_11_reg_1731 <= LBoostTree1_left_chi_q0;
        LBoostTree1_left_chi_8_reg_1716 <= LBoostTree1_left_chi_3_q0;
        LBoostTree1_left_chi_9_reg_1721 <= LBoostTree1_left_chi_2_q0;
        LBoostTree1_right_ch_10_reg_1746 <= LBoostTree1_right_ch_1_q0;
        LBoostTree1_right_ch_11_reg_1751 <= LBoostTree1_right_ch_q0;
        LBoostTree1_right_ch_8_reg_1736 <= LBoostTree1_right_ch_3_q0;
        LBoostTree1_right_ch_9_reg_1741 <= LBoostTree1_right_ch_2_q0;
        node1_feature_index_s_reg_1704 <= node1_feature_index_s_fu_1022_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln54_reg_1813 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        LBoostTree2_left_chi_10_reg_1952 <= LBoostTree2_left_chi_1_q0;
        LBoostTree2_left_chi_11_reg_1957 <= LBoostTree2_left_chi_q0;
        LBoostTree2_left_chi_8_reg_1942 <= LBoostTree2_left_chi_3_q0;
        LBoostTree2_left_chi_9_reg_1947 <= LBoostTree2_left_chi_2_q0;
        LBoostTree2_right_ch_10_reg_1972 <= LBoostTree2_right_ch_1_q0;
        LBoostTree2_right_ch_11_reg_1977 <= LBoostTree2_right_ch_q0;
        LBoostTree2_right_ch_8_reg_1962 <= LBoostTree2_right_ch_3_q0;
        LBoostTree2_right_ch_9_reg_1967 <= LBoostTree2_right_ch_2_q0;
        node_feature_index_V_reg_1930 <= node_feature_index_V_fu_1310_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        depth_1_reg_1817 <= depth_1_fu_1275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        depth_reg_1591 <= depth_fu_987_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((feature_stream_V_0_load_A == 1'b1)) begin
        feature_stream_V_0_payload_A <= feature_stream_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((feature_stream_V_0_load_B == 1'b1)) begin
        feature_stream_V_0_payload_B <= feature_stream_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_1561 <= i_1_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        i_2_reg_1794 <= i_2_fu_1233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln36_reg_1587 <= icmp_ln36_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (node1_is_leaf_fu_1048_p6 == 1'd0) & (icmp_ln36_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln46_1_reg_1780 <= icmp_ln46_1_fu_1159_p2;
        icmp_ln46_reg_1775 <= icmp_ln46_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln54_reg_1813 <= icmp_ln54_fu_1269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (node_is_leaf_fu_1336_p6 == 1'd0) & (icmp_ln54_reg_1813 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        icmp_ln63_1_reg_2006 <= icmp_ln63_1_fu_1447_p2;
        icmp_ln63_reg_2001 <= icmp_ln63_fu_1441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln36_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        node1_is_leaf_reg_1756 <= node1_is_leaf_fu_1048_p6;
        node1_left_child_V_reg_1760 <= node1_left_child_V_fu_1073_p6;
        node1_right_child_V_reg_1765 <= node1_right_child_V_fu_1098_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln36_reg_1587 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        node1_value_reg_1709 <= node1_value_fu_1035_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln54_reg_1813 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        node_is_leaf_reg_1982 <= node_is_leaf_fu_1336_p6;
        node_left_child_V_reg_1986 <= node_left_child_V_fu_1361_p6;
        node_right_child_V_reg_1991 <= node_right_child_V_fu_1386_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln54_reg_1813 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        node_value_reg_1935 <= node_value_fu_1323_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((prediction_dbp_V_1_load_A == 1'b1)) begin
        prediction_dbp_V_1_payload_A <= tmp_18_fu_226;
    end
end

always @ (posedge ap_clk) begin
    if ((prediction_dbp_V_1_load_B == 1'b1)) begin
        prediction_dbp_V_1_payload_B <= tmp_18_fu_226;
    end
end

always @ (posedge ap_clk) begin
    if ((prediction_sbp_V_1_load_A == 1'b1)) begin
        prediction_sbp_V_1_payload_A <= tmp_5_fu_222;
    end
end

always @ (posedge ap_clk) begin
    if ((prediction_sbp_V_1_load_B == 1'b1)) begin
        prediction_sbp_V_1_payload_B <= tmp_5_fu_222;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_883 <= grp_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (trunc_ln25_fu_905_p1 == 2'd1) & (icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_2_fu_210 <= feature_stream_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (trunc_ln25_fu_905_p1 == 2'd2) & (icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_3_fu_214 <= feature_stream_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (trunc_ln25_fu_905_p1 == 2'd3) & (icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_4_fu_218 <= feature_stream_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (trunc_ln25_fu_905_p1 == 2'd0) & (icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_fu_206 <= feature_stream_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln54_fu_1269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        zext_ln321_11_reg_1822[9 : 0] <= zext_ln321_11_fu_1290_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_981_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln321_1_reg_1596[9 : 0] <= zext_ln321_1_fu_1002_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_934_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln36_reg_1575[8 : 5] <= zext_ln36_fu_972_p1[8 : 5];
        zext_ln6_reg_1566[2 : 0] <= zext_ln6_fu_956_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1227_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        zext_ln54_reg_1808[8 : 5] <= zext_ln54_fu_1265_p1[8 : 5];
        zext_ln6_1_reg_1799[2 : 0] <= zext_ln6_1_fu_1249_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_feature_1_ce0 = 1'b1;
    end else begin
        LBoostTree1_feature_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_feature_2_ce0 = 1'b1;
    end else begin
        LBoostTree1_feature_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_feature_3_ce0 = 1'b1;
    end else begin
        LBoostTree1_feature_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_feature_s_ce0 = 1'b1;
    end else begin
        LBoostTree1_feature_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        LBoostTree1_is_leaf_1_ce0 = 1'b1;
    end else begin
        LBoostTree1_is_leaf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        LBoostTree1_is_leaf_2_ce0 = 1'b1;
    end else begin
        LBoostTree1_is_leaf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        LBoostTree1_is_leaf_3_ce0 = 1'b1;
    end else begin
        LBoostTree1_is_leaf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        LBoostTree1_is_leaf_s_ce0 = 1'b1;
    end else begin
        LBoostTree1_is_leaf_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_left_chi_1_ce0 = 1'b1;
    end else begin
        LBoostTree1_left_chi_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_left_chi_2_ce0 = 1'b1;
    end else begin
        LBoostTree1_left_chi_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_left_chi_3_ce0 = 1'b1;
    end else begin
        LBoostTree1_left_chi_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_left_chi_ce0 = 1'b1;
    end else begin
        LBoostTree1_left_chi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_right_ch_1_ce0 = 1'b1;
    end else begin
        LBoostTree1_right_ch_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_right_ch_2_ce0 = 1'b1;
    end else begin
        LBoostTree1_right_ch_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_right_ch_3_ce0 = 1'b1;
    end else begin
        LBoostTree1_right_ch_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_right_ch_ce0 = 1'b1;
    end else begin
        LBoostTree1_right_ch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_value_0_ce0 = 1'b1;
    end else begin
        LBoostTree1_value_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_value_1_ce0 = 1'b1;
    end else begin
        LBoostTree1_value_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_value_2_ce0 = 1'b1;
    end else begin
        LBoostTree1_value_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LBoostTree1_value_3_ce0 = 1'b1;
    end else begin
        LBoostTree1_value_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_feature_1_ce0 = 1'b1;
    end else begin
        LBoostTree2_feature_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_feature_2_ce0 = 1'b1;
    end else begin
        LBoostTree2_feature_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_feature_3_ce0 = 1'b1;
    end else begin
        LBoostTree2_feature_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_feature_s_ce0 = 1'b1;
    end else begin
        LBoostTree2_feature_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        LBoostTree2_is_leaf_1_ce0 = 1'b1;
    end else begin
        LBoostTree2_is_leaf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        LBoostTree2_is_leaf_2_ce0 = 1'b1;
    end else begin
        LBoostTree2_is_leaf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        LBoostTree2_is_leaf_3_ce0 = 1'b1;
    end else begin
        LBoostTree2_is_leaf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        LBoostTree2_is_leaf_s_ce0 = 1'b1;
    end else begin
        LBoostTree2_is_leaf_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_left_chi_1_ce0 = 1'b1;
    end else begin
        LBoostTree2_left_chi_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_left_chi_2_ce0 = 1'b1;
    end else begin
        LBoostTree2_left_chi_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_left_chi_3_ce0 = 1'b1;
    end else begin
        LBoostTree2_left_chi_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_left_chi_ce0 = 1'b1;
    end else begin
        LBoostTree2_left_chi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_right_ch_1_ce0 = 1'b1;
    end else begin
        LBoostTree2_right_ch_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_right_ch_2_ce0 = 1'b1;
    end else begin
        LBoostTree2_right_ch_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_right_ch_3_ce0 = 1'b1;
    end else begin
        LBoostTree2_right_ch_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_right_ch_ce0 = 1'b1;
    end else begin
        LBoostTree2_right_ch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_value_0_ce0 = 1'b1;
    end else begin
        LBoostTree2_value_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_value_1_ce0 = 1'b1;
    end else begin
        LBoostTree2_value_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_value_2_ce0 = 1'b1;
    end else begin
        LBoostTree2_value_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LBoostTree2_value_3_ce0 = 1'b1;
    end else begin
        LBoostTree2_value_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_reg_1587 == 1'd1) | (ap_predicate_tran6to8_state6 == 1'b1))) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_1813 == 1'd1) | (ap_predicate_tran17to19_state17 == 1'b1))) begin
        ap_condition_pp1_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((~((prediction_dbp_V_1_state == 2'd1) | (prediction_sbp_V_1_state == 2'd1) | (1'b1 == ap_block_state25_io) | ((prediction_dbp_V_1_state == 2'd3) & (prediction_dbp_V_TREADY == 1'b0)) | ((prediction_sbp_V_1_state == 2'd3) & (prediction_sbp_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state25))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (node_is_leaf_reg_1982 == 1'd0) & (icmp_ln54_reg_1813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_curren_0_phi_fu_829_p4 = select_ln63_fu_1504_p3;
    end else begin
        ap_phi_mux_curren_0_phi_fu_829_p4 = curren_0_reg_825;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (node1_is_leaf_reg_1756 == 1'd0) & (icmp_ln36_reg_1587 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_current_addr1_0_phi_fu_796_p4 = select_ln46_fu_1216_p3;
    end else begin
        ap_phi_mux_current_addr1_0_phi_fu_796_p4 = current_addr1_0_reg_792;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (node_is_leaf_reg_1982 == 1'd0) & (icmp_ln54_reg_1813 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_depth3_0_phi_fu_840_p4 = depth_1_reg_1817;
    end else begin
        ap_phi_mux_depth3_0_phi_fu_840_p4 = depth3_0_reg_836;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (node1_is_leaf_reg_1756 == 1'd0) & (icmp_ln36_reg_1587 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_depth_0_phi_fu_807_p4 = depth_reg_1591;
    end else begin
        ap_phi_mux_depth_0_phi_fu_807_p4 = depth_0_reg_803;
    end
end

always @ (*) begin
    if ((~((prediction_dbp_V_1_state == 2'd1) | (prediction_sbp_V_1_state == 2'd1) | (1'b1 == ap_block_state25_io) | ((prediction_dbp_V_1_state == 2'd3) & (prediction_dbp_V_TREADY == 1'b0)) | ((prediction_sbp_V_1_state == 2'd3) & (prediction_sbp_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state25))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        feature_stream_V_0_ack_out = 1'b1;
    end else begin
        feature_stream_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((feature_stream_V_0_sel == 1'b1)) begin
        feature_stream_V_0_data_out = feature_stream_V_0_payload_B;
    end else begin
        feature_stream_V_0_data_out = feature_stream_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        feature_stream_V_TDATA_blk_n = feature_stream_V_0_state[1'd0];
    end else begin
        feature_stream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_847_p0 = tmp_18_fu_226;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_847_p0 = tmp_5_fu_222;
    end else begin
        grp_fu_847_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_847_p1 = node_value_reg_1935;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_847_p1 = node1_value_reg_1709;
    end else begin
        grp_fu_847_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_851_p0 = fval_fu_1408_p6;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_851_p0 = fval1_fu_1120_p6;
    end else begin
        grp_fu_851_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_851_p1 = node_value_reg_1935;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_851_p1 = node1_value_reg_1709;
    end else begin
        grp_fu_851_p1 = 'bx;
    end
end

always @ (*) begin
    if ((prediction_dbp_V_1_sel == 1'b1)) begin
        prediction_dbp_V_1_data_out = prediction_dbp_V_1_payload_B;
    end else begin
        prediction_dbp_V_1_data_out = prediction_dbp_V_1_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln51_fu_1227_p2 == 1'd1) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        prediction_dbp_V_1_vld_in = 1'b1;
    end else begin
        prediction_dbp_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln51_fu_1227_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14)))) begin
        prediction_dbp_V_TDATA_blk_n = prediction_dbp_V_1_state[1'd1];
    end else begin
        prediction_dbp_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((prediction_sbp_V_1_sel == 1'b1)) begin
        prediction_sbp_V_1_data_out = prediction_sbp_V_1_payload_B;
    end else begin
        prediction_sbp_V_1_data_out = prediction_sbp_V_1_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln51_fu_1227_p2 == 1'd1) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        prediction_sbp_V_1_vld_in = 1'b1;
    end else begin
        prediction_sbp_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln51_fu_1227_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14)))) begin
        prediction_sbp_V_TDATA_blk_n = prediction_sbp_V_1_state[1'd1];
    end else begin
        prediction_sbp_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (icmp_ln23_fu_893_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0)) & (icmp_ln23_fu_893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln32_fu_934_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~(((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln36_reg_1587 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_predicate_tran6to8_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln36_reg_1587 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_predicate_tran6to8_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln51_fu_1227_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln51_fu_1227_p2 == 1'd1) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((~(((1'b0 == ap_block_pp1_stage2_subdone) & (icmp_ln54_reg_1813 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_subdone) & (ap_predicate_tran17to19_state17 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1))) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage2_subdone) & (icmp_ln54_reg_1813 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((1'b0 == ap_block_pp1_stage2_subdone) & (ap_predicate_tran17to19_state17 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state25 : begin
            if ((~((prediction_dbp_V_1_state == 2'd1) | (prediction_sbp_V_1_state == 2'd1) | (1'b1 == ap_block_state25_io) | ((prediction_dbp_V_1_state == 2'd3) & (prediction_dbp_V_TREADY == 1'b0)) | ((prediction_sbp_V_1_state == 2'd3) & (prediction_sbp_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LBoostTree1_feature_1_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_feature_2_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_feature_3_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_feature_s_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_is_leaf_1_address0 = zext_ln321_1_reg_1596;

assign LBoostTree1_is_leaf_2_address0 = zext_ln321_1_reg_1596;

assign LBoostTree1_is_leaf_3_address0 = zext_ln321_1_reg_1596;

assign LBoostTree1_is_leaf_s_address0 = zext_ln321_1_reg_1596;

assign LBoostTree1_left_chi_1_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_left_chi_2_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_left_chi_3_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_left_chi_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_right_ch_1_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_right_ch_2_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_right_ch_3_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_right_ch_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_value_0_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_value_1_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_value_2_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree1_value_3_address0 = zext_ln321_1_fu_1002_p1;

assign LBoostTree2_feature_1_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_feature_2_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_feature_3_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_feature_s_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_is_leaf_1_address0 = zext_ln321_11_reg_1822;

assign LBoostTree2_is_leaf_2_address0 = zext_ln321_11_reg_1822;

assign LBoostTree2_is_leaf_3_address0 = zext_ln321_11_reg_1822;

assign LBoostTree2_is_leaf_s_address0 = zext_ln321_11_reg_1822;

assign LBoostTree2_left_chi_1_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_left_chi_2_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_left_chi_3_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_left_chi_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_right_ch_1_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_right_ch_2_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_right_ch_3_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_right_ch_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_value_0_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_value_1_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_value_2_address0 = zext_ln321_11_fu_1290_p1;

assign LBoostTree2_value_3_address0 = zext_ln321_11_fu_1290_p1;

assign add_ln321_1_fu_1285_p2 = (zext_ln54_reg_1808 + zext_ln321_10_fu_1281_p1);

assign add_ln321_fu_997_p2 = (zext_ln36_reg_1575 + zext_ln321_fu_993_p1);

assign and_ln46_1_fu_1210_p2 = (grp_fu_851_p2 & and_ln46_fu_1204_p2);

assign and_ln46_fu_1204_p2 = (or_ln46_fu_1182_p2 & or_ln46_1_fu_1198_p2);

assign and_ln63_1_fu_1498_p2 = (grp_fu_851_p2 & and_ln63_fu_1492_p2);

assign and_ln63_fu_1492_p2 = (or_ln63_fu_1470_p2 & or_ln63_1_fu_1486_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = (((icmp_ln51_fu_1227_p2 == 1'd1) & (prediction_dbp_V_1_ack_in == 1'b0)) | ((icmp_ln51_fu_1227_p2 == 1'd1) & (prediction_sbp_V_1_ack_in == 1'b0)));
end

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((icmp_ln23_fu_893_p2 == 1'd0) & (feature_stream_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state25 = ((prediction_dbp_V_1_state == 2'd1) | (prediction_sbp_V_1_state == 2'd1) | ((prediction_dbp_V_1_state == 2'd3) & (prediction_dbp_V_TREADY == 1'b0)) | ((prediction_sbp_V_1_state == 2'd3) & (prediction_sbp_V_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state25_io = ((prediction_dbp_V_1_ack_in == 1'b0) | (prediction_sbp_V_1_ack_in == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran17to19_state17 = ((node_is_leaf_fu_1336_p6 == 1'd1) & (icmp_ln54_reg_1813 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran6to8_state6 = ((node1_is_leaf_fu_1048_p6 == 1'd1) & (icmp_ln36_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln46_1_fu_1165_p1 = node1_value_reg_1709;

assign bitcast_ln46_fu_1135_p1 = fval1_fu_1120_p6;

assign bitcast_ln63_1_fu_1453_p1 = node_value_reg_1935;

assign bitcast_ln63_fu_1423_p1 = fval_fu_1408_p6;

assign depth_1_fu_1275_p2 = (ap_phi_mux_depth3_0_phi_fu_840_p4 + 6'd1);

assign depth_fu_987_p2 = (ap_phi_mux_depth_0_phi_fu_807_p4 + 6'd1);

assign feature_stream_V_0_ack_in = feature_stream_V_0_state[1'd1];

assign feature_stream_V_0_load_A = (feature_stream_V_0_state_cmp_full & ~feature_stream_V_0_sel_wr);

assign feature_stream_V_0_load_B = (feature_stream_V_0_state_cmp_full & feature_stream_V_0_sel_wr);

assign feature_stream_V_0_sel = feature_stream_V_0_sel_rd;

assign feature_stream_V_0_state_cmp_full = ((feature_stream_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign feature_stream_V_0_vld_in = feature_stream_V_TVALID;

assign feature_stream_V_0_vld_out = feature_stream_V_0_state[1'd0];

assign feature_stream_V_TREADY = feature_stream_V_0_state[1'd1];

assign fval1_fu_1120_p5 = (2'd3 + trunc_ln45_fu_1111_p1);

assign fval_fu_1408_p5 = (2'd3 + trunc_ln62_fu_1399_p1);

assign i_1_fu_940_p2 = (i1_0_reg_781 + 7'd1);

assign i_2_fu_1233_p2 = (i2_0_reg_814 + 7'd1);

assign i_fu_899_p2 = (i_0_reg_770 + 3'd1);

assign icmp_ln23_fu_893_p2 = ((i_0_reg_770 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_934_p2 = ((i1_0_reg_781 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_981_p2 = ((ap_phi_mux_depth_0_phi_fu_807_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln46_1_fu_1159_p2 = ((trunc_ln46_fu_1149_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_2_fu_1186_p2 = ((tmp_11_fu_1168_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln46_3_fu_1192_p2 = ((trunc_ln46_1_fu_1178_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1153_p2 = ((tmp_7_fu_1139_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_1227_p2 = ((i2_0_reg_814 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1269_p2 = ((ap_phi_mux_depth3_0_phi_fu_840_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln63_1_fu_1447_p2 = ((trunc_ln63_fu_1437_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln63_2_fu_1474_p2 = ((tmp_14_fu_1456_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln63_3_fu_1480_p2 = ((trunc_ln63_1_fu_1466_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_1441_p2 = ((tmp_13_fu_1427_p4 != 8'd255) ? 1'b1 : 1'b0);

assign lshr_ln6_1_fu_1239_p4 = {{i2_0_reg_814[6:4]}};

assign lshr_ln6_fu_946_p4 = {{i1_0_reg_781[6:4]}};

assign node1_left_child_V_fu_1073_p1 = LBoostTree1_left_chi_8_reg_1716;

assign node1_left_child_V_fu_1073_p2 = LBoostTree1_left_chi_9_reg_1721;

assign node1_left_child_V_fu_1073_p3 = LBoostTree1_left_chi_10_reg_1726;

assign node1_left_child_V_fu_1073_p4 = LBoostTree1_left_chi_11_reg_1731;

assign node1_right_child_V_fu_1098_p1 = LBoostTree1_right_ch_8_reg_1736;

assign node1_right_child_V_fu_1098_p2 = LBoostTree1_right_ch_9_reg_1741;

assign node1_right_child_V_fu_1098_p3 = LBoostTree1_right_ch_10_reg_1746;

assign node1_right_child_V_fu_1098_p4 = LBoostTree1_right_ch_11_reg_1751;

assign node_left_child_V_fu_1361_p1 = LBoostTree2_left_chi_8_reg_1942;

assign node_left_child_V_fu_1361_p2 = LBoostTree2_left_chi_9_reg_1947;

assign node_left_child_V_fu_1361_p3 = LBoostTree2_left_chi_10_reg_1952;

assign node_left_child_V_fu_1361_p4 = LBoostTree2_left_chi_11_reg_1957;

assign node_right_child_V_fu_1386_p1 = LBoostTree2_right_ch_8_reg_1962;

assign node_right_child_V_fu_1386_p2 = LBoostTree2_right_ch_9_reg_1967;

assign node_right_child_V_fu_1386_p3 = LBoostTree2_right_ch_10_reg_1972;

assign node_right_child_V_fu_1386_p4 = LBoostTree2_right_ch_11_reg_1977;

assign or_ln46_1_fu_1198_p2 = (icmp_ln46_3_fu_1192_p2 | icmp_ln46_2_fu_1186_p2);

assign or_ln46_fu_1182_p2 = (icmp_ln46_reg_1775 | icmp_ln46_1_reg_1780);

assign or_ln63_1_fu_1486_p2 = (icmp_ln63_3_fu_1480_p2 | icmp_ln63_2_fu_1474_p2);

assign or_ln63_fu_1470_p2 = (icmp_ln63_reg_2001 | icmp_ln63_1_reg_2006);

assign prediction_dbp_V_1_ack_in = prediction_dbp_V_1_state[1'd1];

assign prediction_dbp_V_1_ack_out = prediction_dbp_V_TREADY;

assign prediction_dbp_V_1_load_A = (prediction_dbp_V_1_state_cmp_full & ~prediction_dbp_V_1_sel_wr);

assign prediction_dbp_V_1_load_B = (prediction_dbp_V_1_state_cmp_full & prediction_dbp_V_1_sel_wr);

assign prediction_dbp_V_1_sel = prediction_dbp_V_1_sel_rd;

assign prediction_dbp_V_1_state_cmp_full = ((prediction_dbp_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign prediction_dbp_V_1_vld_out = prediction_dbp_V_1_state[1'd0];

assign prediction_dbp_V_TDATA = prediction_dbp_V_1_data_out;

assign prediction_dbp_V_TVALID = prediction_dbp_V_1_state[1'd0];

assign prediction_sbp_V_1_ack_in = prediction_sbp_V_1_state[1'd1];

assign prediction_sbp_V_1_ack_out = prediction_sbp_V_TREADY;

assign prediction_sbp_V_1_load_A = (prediction_sbp_V_1_state_cmp_full & ~prediction_sbp_V_1_sel_wr);

assign prediction_sbp_V_1_load_B = (prediction_sbp_V_1_state_cmp_full & prediction_sbp_V_1_sel_wr);

assign prediction_sbp_V_1_sel = prediction_sbp_V_1_sel_rd;

assign prediction_sbp_V_1_state_cmp_full = ((prediction_sbp_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign prediction_sbp_V_1_vld_out = prediction_sbp_V_1_state[1'd0];

assign prediction_sbp_V_TDATA = prediction_sbp_V_1_data_out;

assign prediction_sbp_V_TVALID = prediction_sbp_V_1_state[1'd0];

assign select_ln46_fu_1216_p3 = ((and_ln46_1_fu_1210_p2[0:0] === 1'b1) ? node1_left_child_V_reg_1760 : node1_right_child_V_reg_1765);

assign select_ln63_fu_1504_p3 = ((and_ln63_1_fu_1498_p2[0:0] === 1'b1) ? node_left_child_V_reg_1986 : node_right_child_V_reg_1991);

assign tmp_10_fu_1257_p3 = {{trunc_ln321_1_fu_1253_p1}, {5'd0}};

assign tmp_11_fu_1168_p4 = {{bitcast_ln46_1_fu_1165_p1[30:23]}};

assign tmp_13_fu_1427_p4 = {{bitcast_ln63_fu_1423_p1[30:23]}};

assign tmp_14_fu_1456_p4 = {{bitcast_ln63_1_fu_1453_p1[30:23]}};

assign tmp_7_fu_1139_p4 = {{bitcast_ln46_fu_1135_p1[30:23]}};

assign tmp_9_fu_964_p3 = {{trunc_ln321_fu_960_p1}, {5'd0}};

assign trunc_ln25_fu_905_p1 = i_0_reg_770[1:0];

assign trunc_ln321_1_fu_1253_p1 = i2_0_reg_814[3:0];

assign trunc_ln321_fu_960_p1 = i1_0_reg_781[3:0];

assign trunc_ln45_fu_1111_p1 = node1_feature_index_s_reg_1704[1:0];

assign trunc_ln46_1_fu_1178_p1 = bitcast_ln46_1_fu_1165_p1[22:0];

assign trunc_ln46_fu_1149_p1 = bitcast_ln46_fu_1135_p1[22:0];

assign trunc_ln62_fu_1399_p1 = node_feature_index_V_reg_1930[1:0];

assign trunc_ln63_1_fu_1466_p1 = bitcast_ln63_1_fu_1453_p1[22:0];

assign trunc_ln63_fu_1437_p1 = bitcast_ln63_fu_1423_p1[22:0];

assign zext_ln321_10_fu_1281_p1 = ap_phi_mux_curren_0_phi_fu_829_p4;

assign zext_ln321_11_fu_1290_p1 = add_ln321_1_fu_1285_p2;

assign zext_ln321_1_fu_1002_p1 = add_ln321_fu_997_p2;

assign zext_ln321_fu_993_p1 = ap_phi_mux_current_addr1_0_phi_fu_796_p4;

assign zext_ln36_fu_972_p1 = tmp_9_fu_964_p3;

assign zext_ln54_fu_1265_p1 = tmp_10_fu_1257_p3;

assign zext_ln6_1_fu_1249_p1 = lshr_ln6_1_fu_1239_p4;

assign zext_ln6_fu_956_p1 = lshr_ln6_fu_946_p4;

always @ (posedge ap_clk) begin
    zext_ln6_reg_1566[31:3] <= 29'b00000000000000000000000000000;
    zext_ln36_reg_1575[4:0] <= 5'b00000;
    zext_ln36_reg_1575[9] <= 1'b0;
    zext_ln321_1_reg_1596[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln6_1_reg_1799[31:3] <= 29'b00000000000000000000000000000;
    zext_ln54_reg_1808[4:0] <= 5'b00000;
    zext_ln54_reg_1808[9] <= 1'b0;
    zext_ln321_11_reg_1822[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //predict_ensemble
