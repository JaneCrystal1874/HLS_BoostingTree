// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_d0M_H__
#define __predict_ensemble_d0M_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_d0M_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_d0M_ram) {
        ram[0] = "0b00111101001011000010100010110011";
        ram[1] = "0b10111000110010010101001110011100";
        ram[2] = "0b00111101100000010001000000011011";
        ram[3] = "0b00111111000000110001000111000111";
        ram[4] = "0b00111101100100001111111000000100";
        ram[5] = "0b00111111011100100010011111010000";
        ram[6] = "0b00111001001101111000000000110100";
        ram[7] = "0b10111000011101110111011011000101";
        ram[8] = "0b00111111011110000111011001111101";
        ram[9] = "0b00111110101101111001100010110111";
        ram[10] = "0b10111000100011101001101100111001";
        ram[11] = "0b00111111011100001100111011110110";
        ram[12] = "0b00111000011010101110000110001011";
        ram[13] = "0b00111000010011011000010101011001";
        ram[14] = "0b10110110110010010101001110011100";
        ram[15] = "0b00111101010111000100010101000110";
        ram[16] = "0b10111000111000100111111000001111";
        ram[17] = "0b10110111111000100111111000001111";
        ram[18] = "0b00111101100000101101000111110010";
        ram[19] = "0b00110111111100110100010100000111";
        ram[20] = "0b00111101110101001001001110000110";
        ram[21] = "0b00111110010100101111010000000110";
        ram[22] = "0b00111101110111011101011011100000";
        ram[23] = "0b10111000001000111001001111101110";
        ram[24] = "0b00110110000001100011011110111101";
        ram[25] = "0b00111000010010010101001110011100";
        ram[26] = "0b00111110001110101111101101111111";
        ram[27] = "0b00111110001000010111010100001000";
        ram[28] = "0b00111110010010011010010100100010";
        ram[29] = "0b00111110100101010100000111011001";
        ram[30] = "0b10111000001100000010100100101000";
        ram[31] = "0b00111000110100111100111111110110";
        ram[32] = "0b00111110000001001010010101011001";
        ram[33] = "0b00111111011010001011101000110000";
        ram[34] = "0b00110110110010010101001110011100";
        ram[35] = "0b10110111100011101001101100111001";
        ram[36] = "0b00111110011000000111101110111011";
        ram[37] = "0b00111101101111001010110110011011";
        ram[38] = "0b10110111001110001000110010100100";
        ram[39] = "0b00110111011110111010100010000010";
        ram[40] = "0b00111111011001111010010111110100";
        ram[41] = "0b00110110010010010101001110011100";
        ram[42] = "0b10110110101001111100010110101100";
        ram[43] = "0b00111101101000111110111110101110";
        ram[44] = "0b00110111100101101111111010110101";
        ram[45] = "0b00110111100111110110001000110000";
        ram[46] = "0b00111110010110010111001001000111";
        ram[47] = "0b10110111010010010101001110011100";
        ram[48] = "0b00111111011011101111101110100000";
        ram[49] = "0b00111101111110001100010010111101";
        ram[50] = "0b00110111001001111100010110101100";
        ram[51] = "0b00111110111110101101000111110010";
        ram[52] = "0b00111110000000010010011110110011";
        ram[53] = "0b10000000000000000000000000000000";
        ram[54] = "0b10110111100101101111111010110101";
        ram[55] = "0b00110111000101101111111010110101";
        ram[56] = "0b00111110001111010011101011100111";
        ram[57] = "0b10110111001001111100010110101100";
        ram[58] = "0b00111111011110101010010111010111";
        ram[59] = "0b00111111010101011111001000000010";
        ram[60] = "0b10110111000101101111111010110101";
        ram[61] = "0b00111110101011100001010001011001";
        ram[62] = "0b00111111001101001111110010110101";
        ram[63] = "0b00111111000000000101000010011100";
        ram[64] = "0b00111110101011001001101111101001";
        ram[65] = "0b10110110000001100011011110111101";
        ram[66] = "0b00110111100001100011011110111101";
        ram[67] = "0b00111110110001011010000110101001";
        ram[68] = "0b00111111000110101010101011010010";
        ram[69] = "0b00111110101010001000110010000010";
        ram[70] = "0b00111110100001111001010010000101";
        ram[71] = "0b10110111010010010101001110011100";
        ram[72] = "0b10110110010010010101001110011100";
        ram[73] = "0b00110110010010010101001110011100";
        ram[74] = "0b10110101100001100011011110111101";
        ram[75] = "0b00111110100001101111011000110000";
        ram[76] = "0b00110111001001111100010110101100";
        ram[77] = "0b00111110100000110111000011001110";
        ram[78] = "0b00111110110001111010011010011100";
        ram[79] = "0b00111110110111010111101011111111";
        ram[80] = "0b00111111001101000101110100010000";
        ram[81] = "0b00111110100011111010011110101000";
        ram[82] = "0b10110111100001100011011110111101";
        ram[83] = "0b00111111011001001110110010100111";
        ram[84] = "0b00111101110001101110010101000111";
        ram[85] = "0b00111110110011000000010100101101";
        ram[86] = "0b10110110000001100011011110111101";
        ram[87] = "0b00111111001001110100010111010000";
        ram[88] = "0b00111110100010010100111000011010";
        ram[89] = "0b00110101100001100011011110111101";
        ram[90] = "0b10110110100001100011011110111101";
        ram[91] = "0b00111110101100010011011100001001";
        ram[92] = "0b00110110101001111100010110101100";
        ram[93] = "0b10110110100001100011011110111101";
        ram[94] = "0b00111101111100101101001010111011";
        ram[95] = "0b10110101100001100011011110111101";
        ram[96] = "0b00110101100001100011011110111101";
        ram[97] = "0b00111110100100111101111101001100";
        ram[98] = "0b00110111000101101111111010110101";
        ram[99] = "0b10110110000001100011011110111101";
        ram[100] = "0b00110110000001100011011110111101";
        ram[101] = "0b10110110111010101110000110001011";
        ram[102] = "0b00111110101101100010100110110111";
        ram[103] = "0b00111111001001011100010100101110";
        ram[104] = "0b00111110111110000011101001010100";
        ram[105] = "0b00110110100001100011011110111101";
        ram[106] = "0b10000000000000000000000000000000";
        ram[107] = "0b00111110111101011011101001101111";
        ram[108] = "0b10000000000000000000000000000000";
        ram[109] = "0b00110110111010101110000110001011";
        ram[110] = "0b10110110000001100011011110111101";
        ram[111] = "0b00111111010010001001000100111010";
        ram[112] = "0b00111110100011110111111111110001";
        ram[113] = "0b10110110101001111100010110101100";
        ram[114] = "0b10110110010010010101001110011100";
        ram[115] = "0b00111111010000100100100010010101";
        ram[116] = "0b10110110000001100011011110111101";
        ram[117] = "0b10110110010010010101001110011100";
        ram[118] = "0b00111111010001110100010111010000";
        ram[119] = "0b00111110110111110010011000101001";
        ram[120] = "0b00110110101001111100010110101100";
        ram[121] = "0b00111110110001110010110100111100";
        ram[122] = "0b10110110000001100011011110111101";
        ram[123] = "0b00110110110010010101001110011100";
        ram[124] = "0b00111110111010000100110110011000";
        ram[125] = "0b00111110110110011110111111111010";
        ram[126] = "0b00111110110110001011000110111100";
        ram[127] = "0b00111110110000101110100011000000";
        ram[128] = "0b00110110000001100011011110111101";
        ram[129] = "0b00000000000000000000000000000000";
        ram[130] = "0b00110110010010010101001110011100";
        ram[131] = "0b10110110000001100011011110111101";
        ram[132] = "0b00111110100110100010111001111111";
        ram[133] = "0b10000000000000000000000000000000";
        ram[134] = "0b00110101100001100011011110111101";
        ram[135] = "0b00110110000001100011011110111101";
        ram[136] = "0b00111111000100000100101111110101";
        ram[137] = "0b00111111000010111111001011010100";
        ram[138] = "0b00111111000001110100010111010000";
        ram[139] = "0b00111110110010011000111111100111";
        ram[140] = "0b00110110000001100011011110111101";
        ram[141] = "0b00111110011011110101110111111111";
        ram[142] = "0b00111110110100110010010100001011";
        ram[143] = "0b00110101100001100011011110111101";
        ram[144] = "0b00111110100110110100110010100001";
        ram[145] = "0b00111110110001011101000110000001";
        ram[146] = "0b00111110101001110001001110101101";
        ram[147] = "0b00110110000001100011011110111101";
        ram[148] = "0b00111111000111011000001111000111";
        ram[149] = "0b00111110110110111011001001010111";
        ram[150] = "0b00111110110011101010111110101011";
        ram[151] = "0b10110101100001100011011110111101";
        ram[152] = "0b10110110010010010101001110011100";
        ram[153] = "0b10000000000000000000000000000000";
        ram[154] = "0b00111110111011111111101011100011";
        ram[155] = "0b00111111000111000100101001100010";
        ram[156] = "0b00111111001101110010011000000111";
        ram[157] = "0b10000000000000000000000000000000";
        ram[158] = "0b00111110111000100101100111100010";
        ram[159] = "0b00000000000000000000000000000000";
        ram[160] = "0b10000000000000000000000000000000";
        ram[161] = "0b10110101100001100011011110111101";
        ram[162] = "0b10000000000000000000000000000000";
        ram[163] = "0b00111111001101110010001100100101";
        ram[164] = "0b10110110000001100011011110111101";
        ram[165] = "0b00111111001001110100010011110110";
        ram[166] = "0b10110101100001100011011110111101";
        ram[167] = "0b00110101100001100011011110111101";
        ram[168] = "0b00000000000000000000000000000000";
        ram[169] = "0b10110101100001100011011110111101";
        ram[170] = "0b00111111001011110100001100001111";
        ram[171] = "0b00111110111011010110000010000101";
        ram[172] = "0b00111111011010101101111001110110";
        ram[173] = "0b00111111001010111110010100100001";
        ram[174] = "0b10110101100001100011011110111101";
        ram[175] = "0b10110101100001100011011110111101";
        ram[176] = "0b00111110111011001111010100101100";
        ram[177] = "0b00111111011001001100110000000011";
        ram[178] = "0b00110110000001100011011110111101";
        ram[179] = "0b10000000000000000000000000000000";
        ram[180] = "0b00110101100001100011011110111101";
        ram[181] = "0b00110101100001100011011110111101";
        ram[182] = "0b00111111001000010111101101010011";
        ram[183] = "0b00110101100001100011011110111101";
        ram[184] = "0b10000000000000000000000000000000";
        ram[185] = "0b00110101100001100011011110111101";
        ram[186] = "0b10000000000000000000000000000000";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_d0M) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_d0M_ram* meminst;


SC_CTOR(predict_ensemble_d0M) {
meminst = new predict_ensemble_d0M_ram("predict_ensemble_d0M_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_d0M() {
    delete meminst;
}


};//endmodule
#endif
