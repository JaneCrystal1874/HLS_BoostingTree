// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_cDy_H__
#define __predict_ensemble_cDy_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_cDy_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_cDy_ram) {
        ram[0] = "0b00111111010011011111011101100010";
        ram[1] = "0b00111101010000011100000111010111";
        ram[2] = "0b00111111001111001100101111010001";
        ram[3] = "0b10111010010010100110000000001011";
        ram[4] = "0b00111100001110101000100000100111";
        ram[5] = "0b00111010010100010111001111111011";
        ram[6] = "0b00111110011010101000100000100111";
        ram[7] = "0b10111001100100001011010000011000";
        ram[8] = "0b00111111011000011100000110110101";
        ram[9] = "0b00111000001100000010100100101000";
        ram[10] = "0b00111110110001110011001101000100";
        ram[11] = "0b00111111010111110100001001010111";
        ram[12] = "0b00111111001111001010111011001001";
        ram[13] = "0b10110110110010010101001110011100";
        ram[14] = "0b00111111011011111110111010010001";
        ram[15] = "0b00111101100001000010011101000010";
        ram[16] = "0b10111001100010001101011011010100";
        ram[17] = "0b00111010000100001011010000011000";
        ram[18] = "0b10111000100101101111111010110101";
        ram[19] = "0b00110110100001100011011110111101";
        ram[20] = "0b00111110100000011010011001010000";
        ram[21] = "0b00111110111000001100010100000000";
        ram[22] = "0b00111101100101111010010111110100";
        ram[23] = "0b10110110100001100011011110111101";
        ram[24] = "0b00110110000001100011011110111101";
        ram[25] = "0b00111110110010010101110010100111";
        ram[26] = "0b10111010001101110011110100011001";
        ram[27] = "0b00111001110110001000011111101100";
        ram[28] = "0b00111101111010101110001010010111";
        ram[29] = "0b10111000011100110100010100000111";
        ram[30] = "0b00111001010111000011001101110010";
        ram[31] = "0b10111001001101000101101011100110";
        ram[32] = "0b00111111011110000111011001111101";
        ram[33] = "0b00111111011100001100111011110110";
        ram[34] = "0b00111001010000110000100011111111";
        ram[35] = "0b00111111010010001100011011010110";
        ram[36] = "0b10111001010000110000100011111111";
        ram[37] = "0b00111101001010101101100100100111";
        ram[38] = "0b00111111010001111110010011001101";
        ram[39] = "0b00111000100110110011000001110011";
        ram[40] = "0b00111101100010111111001100111000";
        ram[41] = "0b00111001000111000011110011100010";
        ram[42] = "0b10110110111010101110000110001011";
        ram[43] = "0b10111000110010010101001110011100";
        ram[44] = "0b00111110001101100101011011101111";
        ram[45] = "0b00111110000101000001000110000000";
        ram[46] = "0b00111110010011111110110101100011";
        ram[47] = "0b00111111000001110001000010111010";
        ram[48] = "0b10111001000111010100100101010010";
        ram[49] = "0b00111000101101100111001111000101";
        ram[50] = "0b00111110010101011000101001110110";
        ram[51] = "0b00111110010100011111110111011111";
        ram[52] = "0b10111000001111001011111001100010";
        ram[53] = "0b10111000010101011110100011010101";
        ram[54] = "0b00111111010011101000101110100000";
        ram[55] = "0b00110111100001100011011110111101";
        ram[56] = "0b00111000100010100110100101111011";
        ram[57] = "0b00111110010001111100111010010110";
        ram[58] = "0b00111110111111010000101010101010";
        ram[59] = "0b00111110100001001110011110101011";
        ram[60] = "0b00111110011011110111010001000111";
        ram[61] = "0b00110101100001100011011110111101";
        ram[62] = "0b00111000101110001000110010100100";
        ram[63] = "0b10111000100001000001111011011110";
        ram[64] = "0b00111000110011011000010101011001";
        ram[65] = "0b10111000100001000001111011011110";
        ram[66] = "0b00111111010001001010110100000100";
        ram[67] = "0b00111111011000010111100011110111";
        ram[68] = "0b10111000001010111111011101101010";
        ram[69] = "0b00111111011100101010110010101000";
        ram[70] = "0b10111000000000100000010111111111";
        ram[71] = "0b00111111010000000110110100001101";
        ram[72] = "0b00111000100111110110001000110000";
        ram[73] = "0b00111101101001010001011111100111";
        ram[74] = "0b00111000001000111001001111101110";
        ram[75] = "0b10111000000001100011011110111101";
        ram[76] = "0b00111101101010010101000110000011";
        ram[77] = "0b10110111111010101110000110001011";
        ram[78] = "0b00111110100000011000100011110100";
        ram[79] = "0b10110111111010101110000110001011";
        ram[80] = "0b00111110100101000011000100111000";
        ram[81] = "0b00111110100100010100110111111001";
        ram[82] = "0b00111110110000001101101011100100";
        ram[83] = "0b00111110101011010101001110101100";
        ram[84] = "0b00111000011101110111011011000101";
        ram[85] = "0b00111110100001001110101110111100";
        ram[86] = "0b00111101110011000001011111101100";
        ram[87] = "0b00111110010101101110010001111110";
        ram[88] = "0b00110111111100110100010100000111";
        ram[89] = "0b00111110110011100101101100100001";
        ram[90] = "0b00111110100011100111011001100100";
        ram[91] = "0b00111000010010010101001110011100";
        ram[92] = "0b00111110101100000101010101110101";
        ram[93] = "0b00110111101110001000110010100100";
        ram[94] = "0b00111110011100100101011100000000";
        ram[95] = "0b00111110100100101001100100110001";
        ram[96] = "0b10110111110000001111000000100000";
        ram[97] = "0b10110111100111110110001000110000";
        ram[98] = "0b10111000100111010100100101010010";
        ram[99] = "0b00110111100101101111111010110101";
        ram[100] = "0b00111111011000010001000011000011";
        ram[101] = "0b10110111011010101110000110001011";
        ram[102] = "0b00111110111011010000000010010011";
        ram[103] = "0b00110111101001111100010110101100";
        ram[104] = "0b10110111000001100011011110111101";
        ram[105] = "0b00111111001111110011100110001111";
        ram[106] = "0b10110111101001111100010110101100";
        ram[107] = "0b10110110111010101110000110001011";
        ram[108] = "0b00111110100001110100110110011100";
        ram[109] = "0b00111110110000001000001110111010";
        ram[110] = "0b10110111101001111100010110101100";
        ram[111] = "0b00110101100001100011011110111101";
        ram[112] = "0b00110111100011101001101100111001";
        ram[113] = "0b10110111010110100001101010010011";
        ram[114] = "0b00111101111000011111010110111110";
        ram[115] = "0b00110111011110111010100010000010";
        ram[116] = "0b00111111011100110010000010000110";
        ram[117] = "0b00111110101110001100100101010100";
        ram[118] = "0b00111111001111101000101110100000";
        ram[119] = "0b00111110101010100100011000111001";
        ram[120] = "0b00111110101101001011111010000011";
        ram[121] = "0b10111000000001100011011110111101";
        ram[122] = "0b00110110000001100011011110111101";
        ram[123] = "0b10110110010010010101001110011100";
        ram[124] = "0b00111000000001100011011110111101";
        ram[125] = "0b10110111100011101001101100111001";
        ram[126] = "0b00111111001011100010001000001100";
        ram[127] = "0b00111111011010010001011000000001";
        ram[128] = "0b00110111010110100001101010010011";
        ram[129] = "0b00111110101101000001100111100011";
        ram[130] = "0b00111110001111001111001110011001";
        ram[131] = "0b00111110110010111101101100111100";
        ram[132] = "0b00111110001001111101100010001100";
        ram[133] = "0b10110110100001100011011110111101";
        ram[134] = "0b00110111110000001111000000100000";
        ram[135] = "0b00110101100001100011011110111101";
        ram[136] = "0b00110111100111110110001000110000";
        ram[137] = "0b10110111001110001000110010100100";
        ram[138] = "0b00111110110110001000011100000001";
        ram[139] = "0b00111110111100001111110110100000";
        ram[140] = "0b00111110110100100100000000010000";
        ram[141] = "0b00111110111100010000001100000000";
        ram[142] = "0b00111110111110011101110001110010";
        ram[143] = "0b00111110101111110100111100001110";
        ram[144] = "0b00111111000111111000010110000011";
        ram[145] = "0b10110110000001100011011110111101";
        ram[146] = "0b00110110010010010101001110011100";
        ram[147] = "0b10110111100001100011011110111101";
        ram[148] = "0b10110110101001111100010110101100";
        ram[149] = "0b10000000000000000000000000000000";
        ram[150] = "0b00110111100001100011011110111101";
        ram[151] = "0b00111111000001000001001101110111";
        ram[152] = "0b00111111000111110010001100000011";
        ram[153] = "0b00111111000100000000000000000000";
        ram[154] = "0b00111111000110101101110101011001";
        ram[155] = "0b10110111001001111100010110101100";
        ram[156] = "0b00111110001001111000100000010010";
        ram[157] = "0b00110110000001100011011110111101";
        ram[158] = "0b00111110111011000000111100000010";
        ram[159] = "0b00110111000001100011011110111101";
        ram[160] = "0b00110110000001100011011110111101";
        ram[161] = "0b00110111010010010101001110011100";
        ram[162] = "0b00111110001111011010101111100010";
        ram[163] = "0b10110110101001111100010110101100";
        ram[164] = "0b00110101100001100011011110111101";
        ram[165] = "0b10110111001110001000110010100100";
        ram[166] = "0b00111111010011000111011001111101";
        ram[167] = "0b00111111001010101001000010011011";
        ram[168] = "0b00111111000110110111101111000000";
        ram[169] = "0b00111111000100010111000000101110";
        ram[170] = "0b00111111001000010111010001100000";
        ram[171] = "0b10000000000000000000000000000000";
        ram[172] = "0b00110110110010010101001110011100";
        ram[173] = "0b00000000000000000000000000000000";
        ram[174] = "0b00110110110010010101001110011100";
        ram[175] = "0b00111111001000100000110000000111";
        ram[176] = "0b10110111000101101111111010110101";
        ram[177] = "0b00110110010010010101001110011100";
        ram[178] = "0b00111111001011111110100111011001";
        ram[179] = "0b00111111001001110010001011010001";
        ram[180] = "0b10110110110010010101001110011100";
        ram[181] = "0b00110101100001100011011110111101";
        ram[182] = "0b10110110010010010101001110011100";
        for (unsigned i = 183; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_cDy) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_cDy_ram* meminst;


SC_CTOR(predict_ensemble_cDy) {
meminst = new predict_ensemble_cDy_ram("predict_ensemble_cDy_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_cDy() {
    delete meminst;
}


};//endmodule
#endif
