// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_b9t_H__
#define __predict_ensemble_b9t_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_b9t_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_b9t_ram) {
        ram[0] = "0b00111100111101011001000000111010";
        ram[1] = "0b10111010100101101001101000001011";
        ram[2] = "0b00111101000011100110110100010110";
        ram[3] = "0b00111010101111101101011101000001";
        ram[4] = "0b00111101110100000010000111010001";
        ram[5] = "0b10111010100101100001001111010011";
        ram[6] = "0b00111111011101110111111110111111";
        ram[7] = "0b00111101011000111001110101011110";
        ram[8] = "0b00111010000001011011000110000101";
        ram[9] = "0b00111111011100000111010010010111";
        ram[10] = "0b00111111011000001101001010100010";
        ram[11] = "0b00111001100110010001011110010100";
        ram[12] = "0b10111010110000111101001001010010";
        ram[13] = "0b00111101011100101001100000000011";
        ram[14] = "0b00111001101001110011111101110101";
        ram[15] = "0b00111001101000101000011101111111";
        ram[16] = "0b00111101101000111110111110101110";
        ram[17] = "0b00111110111001011010101110011111";
        ram[18] = "0b00111101110000111101011100001010";
        ram[19] = "0b10111001000000100000010111111111";
        ram[20] = "0b10111010000101010010100011110010";
        ram[21] = "0b00111001101000110000110110110111";
        ram[22] = "0b00111111011101100101011000010101";
        ram[23] = "0b00111111011011100101000000001101";
        ram[24] = "0b10111001100100010011101001010000";
        ram[25] = "0b00111110100100110100001101110100";
        ram[26] = "0b00111001111011111001100110000000";
        ram[27] = "0b00111110101011100101100110110000";
        ram[28] = "0b00111101100000000000000000000000";
        ram[29] = "0b10111010001001001010000001011110";
        ram[30] = "0b00111111011010001001110001101111";
        ram[31] = "0b00111010001111101101011101000001";
        ram[32] = "0b00111110000101101001011010100010";
        ram[33] = "0b00111101100111101110011110000010";
        ram[34] = "0b00111001100111101101101111111001";
        ram[35] = "0b10111001010000011111110010001111";
        ram[36] = "0b00111111011001011101000101110000";
        ram[37] = "0b10111001001100100100001000000111";
        ram[38] = "0b00111101101100111011011101010010";
        ram[39] = "0b00111110001010001011001111110110";
        ram[40] = "0b00111001010111010011111111100010";
        ram[41] = "0b00111000011101110111011011000101";
        ram[42] = "0b00111110111011011000101001110110";
        ram[43] = "0b00111001001010011101111010001011";
        ram[44] = "0b00111110010100001100100001000111";
        ram[45] = "0b00111111010110101111000111111110";
        ram[46] = "0b10111000011001101010111111001101";
        ram[47] = "0b00111110010101000001100000001101";
        ram[48] = "0b00111111010101011101000101110000";
        ram[49] = "0b00111111010010010100100001100111";
        ram[50] = "0b10111000000100101100110011110111";
        ram[51] = "0b00111110000001110110110011001110";
        ram[52] = "0b10111001110001010010000111011110";
        ram[53] = "0b00111101110100110000010110010110";
        ram[54] = "0b00111001110111101101001010001001";
        ram[55] = "0b00111110010110010011011010000010";
        ram[56] = "0b00111111010100101110110111101110";
        ram[57] = "0b10111000100001000001111011011110";
        ram[58] = "0b00111110111100011011111110111110";
        ram[59] = "0b00111001000011001000001001011010";
        ram[60] = "0b00111111011001001101000101000010";
        ram[61] = "0b10110111110100011011011100010111";
        ram[62] = "0b00111110111011011001000010011111";
        ram[63] = "0b00111000100001100011011110111101";
        ram[64] = "0b00110111100101101111111010110101";
        ram[65] = "0b10111000000011101001101100111001";
        ram[66] = "0b00111111010011010001011101000000";
        ram[67] = "0b00111101111010011001111110100001";
        ram[68] = "0b10111001000000110001001001101111";
        ram[69] = "0b00110111011010101110000110001011";
        ram[70] = "0b00110110101001111100010110101100";
        ram[71] = "0b00111001000011011000111011001001";
        ram[72] = "0b00111000000000100000010111111111";
        ram[73] = "0b10111000101101100111001111000101";
        ram[74] = "0b00111111010100001001000010000010";
        ram[75] = "0b00111111001111111011000111110010";
        ram[76] = "0b10111000110010110110110001111010";
        ram[77] = "0b00111110100001001110101110111100";
        ram[78] = "0b00111111010010001001100011110110";
        ram[79] = "0b00111110001100000101011010000010";
        ram[80] = "0b00111110100010000010011000000011";
        ram[81] = "0b00111000110111000011001101110010";
        ram[82] = "0b00110111000101101111111010110101";
        ram[83] = "0b10111000100101101111111010110101";
        ram[84] = "0b00111110011000100011100010010111";
        ram[85] = "0b00111110111101100101101001010111";
        ram[86] = "0b00111110011100101110000110101100";
        ram[87] = "0b00110111101100000010100100101000";
        ram[88] = "0b00111110011100100011110111010101";
        ram[89] = "0b00111110110010011101001010111111";
        ram[90] = "0b00111000110101011110100011010101";
        ram[91] = "0b00111110111011000011001100101111";
        ram[92] = "0b00111110110010001110001000011001";
        ram[93] = "0b10111000101010011101111010001011";
        ram[94] = "0b00111110111111011001100101000110";
        ram[95] = "0b00111110100100000100011001100011";
        ram[96] = "0b00111000011011110001001101001001";
        ram[97] = "0b00110111110010010101001110011100";
        ram[98] = "0b00111000100001000001111011011110";
        ram[99] = "0b00111110000100101101111101010000";
        ram[100] = "0b00111110000000001101010010011001";
        ram[101] = "0b00111110101000001101100000100011";
        ram[102] = "0b10111000011111111101101001000000";
        ram[103] = "0b00110111100111110110001000110000";
        ram[104] = "0b10111000011001101010111111001101";
        ram[105] = "0b10111000110000110000100011111111";
        ram[106] = "0b00111110111001100110101110100101";
        ram[107] = "0b00111000110101011110100011010101";
        ram[108] = "0b00111111001111010111111011111110";
        ram[109] = "0b00110111111100110100010100000111";
        ram[110] = "0b00111110100111111111111000001001";
        ram[111] = "0b10111000001110001000110010100100";
        ram[112] = "0b00110111100011101001101100111001";
        ram[113] = "0b00111111011000011110000001010000";
        ram[114] = "0b10111000011100110100010100000111";
        ram[115] = "0b00111110101111000100001111110110";
        ram[116] = "0b10111000011111111101101001000000";
        ram[117] = "0b00111101111100010000010011010101";
        ram[118] = "0b00111110001100010011111011000100";
        ram[119] = "0b10110111110110100001101010010011";
        ram[120] = "0b00111110010111011011000010011010";
        ram[121] = "0b10111000010110100001101010010011";
        ram[122] = "0b00111110101100010111010001100000";
        ram[123] = "0b00111000101101100111001111000101";
        ram[124] = "0b00111111000010000110110101110010";
        ram[125] = "0b10110110111010101110000110001011";
        ram[126] = "0b00110111001001111100010110101100";
        ram[127] = "0b00111110101011010000111011011100";
        ram[128] = "0b00111110110010110110100010001100";
        ram[129] = "0b00111111001000110101001100001101";
        ram[130] = "0b00111000000011101001101100111001";
        ram[131] = "0b00111000100100101100110011110111";
        ram[132] = "0b00111111000000001100110001010111";
        ram[133] = "0b00111111000110010111100010110011";
        ram[134] = "0b00111110000010111111110010101000";
        ram[135] = "0b00110110101001111100010110101100";
        ram[136] = "0b10110111101100000010100100101000";
        ram[137] = "0b00111110110111100011110101100000";
        ram[138] = "0b00111111000110010100001000001011";
        ram[139] = "0b10111000100001000001111011011110";
        ram[140] = "0b10110111001110001000110010100100";
        ram[141] = "0b10111000000110110011000001110011";
        ram[142] = "0b00111111001101000100100010001100";
        ram[143] = "0b00111110111011011000101001110110";
        ram[144] = "0b10111000010101011110100011010101";
        ram[145] = "0b00111000011011110001001101001001";
        ram[146] = "0b00110110010010010101001110011100";
        ram[147] = "0b00111111010101101110101111000100";
        ram[148] = "0b00111111001110010110111011110000";
        ram[149] = "0b00111000010011011000010101011001";
        ram[150] = "0b10110111010110100001101010010011";
        ram[151] = "0b00111111011001101011110101101111";
        ram[152] = "0b00111000000100101100110011110111";
        ram[153] = "0b10110111100111110110001000110000";
        ram[154] = "0b10111000010010010101001110011100";
        ram[155] = "0b00111111010000011011010110010101";
        ram[156] = "0b10111000000111110110001000110000";
        ram[157] = "0b00111110001110101010110100011101";
        ram[158] = "0b00111111001010111110010100100001";
        ram[159] = "0b00110111110100011011011100010111";
        ram[160] = "0b00111111000100001011110111011100";
        ram[161] = "0b00111000001100000010100100101000";
        ram[162] = "0b00111111001101011100110000010000";
        ram[163] = "0b00111110110111011011010110110111";
        ram[164] = "0b10110111111100110100010100000111";
        ram[165] = "0b10110111000101101111111010110101";
        ram[166] = "0b00111111010010001011100000111001";
        ram[167] = "0b00111110111110110101011010111000";
        ram[168] = "0b00111110111100100100001100110101";
        ram[169] = "0b00110111111100110100010100000111";
        ram[170] = "0b00110110110010010101001110011100";
        ram[171] = "0b10110111110110100001101010010011";
        ram[172] = "0b10000000000000000000000000000000";
        ram[173] = "0b00110111110000001111000000100000";
        ram[174] = "0b00111110111100110101000000001001";
        ram[175] = "0b10110111101110001000110010100100";
        ram[176] = "0b00111111001001011001011001010011";
        ram[177] = "0b00111110101000010000000110110000";
        ram[178] = "0b00110111011110111010100010000010";
        ram[179] = "0b00110111010010010101001110011100";
        ram[180] = "0b00111111000101001110001101011000";
        ram[181] = "0b00111111000000011111000101101011";
        ram[182] = "0b00111111000101110011011001011001";
        ram[183] = "0b10110110100001100011011110111101";
        ram[184] = "0b00110111100011101001101100111001";
        ram[185] = "0b10111000000011101001101100111001";
        ram[186] = "0b10110110110010010101001110011100";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_b9t) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_b9t_ram* meminst;


SC_CTOR(predict_ensemble_b9t) {
meminst = new predict_ensemble_b9t_ram("predict_ensemble_b9t_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_b9t() {
    delete meminst;
}


};//endmodule
#endif
