// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_ceu_H__
#define __predict_ensemble_ceu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_ceu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_ceu_ram) {
        ram[0] = "0b00111111011011101111101110100000";
        ram[1] = "0b00111100011001101111111101111110";
        ram[2] = "0b00111101011100001010011011111100";
        ram[3] = "0b10111010111000000010001000010100";
        ram[4] = "0b00111111010101011111001000000010";
        ram[5] = "0b00111011000011001010001111101000";
        ram[6] = "0b00111000110101011110100011010101";
        ram[7] = "0b00111101100000000000000000000000";
        ram[8] = "0b00111111010001111100000101101010";
        ram[9] = "0b10111001101110101010010110000011";
        ram[10] = "0b00111101001110110100110000111100";
        ram[11] = "0b00111010001110111011000111110010";
        ram[12] = "0b00110111100101101111111010110101";
        ram[13] = "0b00111001100100111101100101100110";
        ram[14] = "0b00111111011110010011001100001001";
        ram[15] = "0b00111101010110111111111100000100";
        ram[16] = "0b10111010010100010011000011100000";
        ram[17] = "0b00111001101011111010001011110000";
        ram[18] = "0b00111110001000000111011011000000";
        ram[19] = "0b00111110101000111100010010001111";
        ram[20] = "0b00111111011100110010000010000110";
        ram[21] = "0b10110111100011101001101100111001";
        ram[22] = "0b00111001110000111000111100110110";
        ram[23] = "0b00111101110010101110100111101110";
        ram[24] = "0b00111111000010001000111010101100";
        ram[25] = "0b00111110111010010100100011111110";
        ram[26] = "0b00111111011110000111011001111101";
        ram[27] = "0b00111001111101111111110011111100";
        ram[28] = "0b00111111001000011010111001001111";
        ram[29] = "0b00111101100101001010010111011111";
        ram[30] = "0b10111001101111100101000100001001";
        ram[31] = "0b00111111011100001100111011110110";
        ram[32] = "0b00111001100100010011101001010000";
        ram[33] = "0b00111111001111000011011000100010";
        ram[34] = "0b00111001011010011101010100011011";
        ram[35] = "0b10110110110010010101001110011100";
        ram[36] = "0b10111001010100101100001110000111";
        ram[37] = "0b00111101100001001010010010010000";
        ram[38] = "0b10111001101000101000011101111111";
        ram[39] = "0b00111111001010100010111010010000";
        ram[40] = "0b00111001000011111010011110101000";
        ram[41] = "0b10111000111111111101101001000000";
        ram[42] = "0b00111101111001001110111001111100";
        ram[43] = "0b10111001010001100010111001001101";
        ram[44] = "0b00111111001111001010000001111111";
        ram[45] = "0b00111110011001110001110100011101";
        ram[46] = "0b00111101111000111101111101101110";
        ram[47] = "0b00110110101001111100010110101100";
        ram[48] = "0b10111000100010000101000010011100";
        ram[49] = "0b00110111111000100111111000001111";
        ram[50] = "0b00111001010001110011101010111101";
        ram[51] = "0b10111001011011110001001101001001";
        ram[52] = "0b00111101110001011101000110000001";
        ram[53] = "0b00111001011000100111111000001111";
        ram[54] = "0b00111111011010001110001010110000";
        ram[55] = "0b00111111011001101110011110100011";
        ram[56] = "0b00111111000011111110111000101101";
        ram[57] = "0b00111111011000100100000010010110";
        ram[58] = "0b00111001010001010010000111011110";
        ram[59] = "0b00111110111011110111010011001101";
        ram[60] = "0b10111001011101000101000101110110";
        ram[61] = "0b00111110101011111101100100110100";
        ram[62] = "0b10111000101111001011111001100010";
        ram[63] = "0b10111000001100000010100100101000";
        ram[64] = "0b00110111100111110110001000110000";
        ram[65] = "0b00111111010100101110100011000000";
        ram[66] = "0b00111111010001110100001000110101";
        ram[67] = "0b00111110010000011001011100011100";
        ram[68] = "0b10111001000110110011000001110011";
        ram[69] = "0b00111111010100000000000000000000";
        ram[70] = "0b00111000101110001000110010100100";
        ram[71] = "0b00111000000010100110100101111011";
        ram[72] = "0b00111110111110111011001101000010";
        ram[73] = "0b00111110010010000001111101010100";
        ram[74] = "0b00111110100000010100111101001000";
        ram[75] = "0b10111000001101000101101011100110";
        ram[76] = "0b10110110100001100011011110111101";
        ram[77] = "0b00111110100101100000110011100001";
        ram[78] = "0b00111110011000000111100111100110";
        ram[79] = "0b10111000101010011101111010001011";
        ram[80] = "0b00111001010110100001101010010011";
        ram[81] = "0b10110111111010101110000110001011";
        ram[82] = "0b00111001000111000011110011100010";
        ram[83] = "0b10111000100011001000001001011010";
        ram[84] = "0b00111110111111011000101101100001";
        ram[85] = "0b00111110110000011011010010111011";
        ram[86] = "0b00111111010000101110100011000000";
        ram[87] = "0b00111000111100110100010100000111";
        ram[88] = "0b00111111000011000001100111100011";
        ram[89] = "0b00111111011011000001101000010101";
        ram[90] = "0b10111000011010101110000110001011";
        ram[91] = "0b00111111010001110001001001001101";
        ram[92] = "0b00111000100000100000010111111111";
        ram[93] = "0b00111110101100010111010001100000";
        ram[94] = "0b00111000001000111001001111101110";
        ram[95] = "0b00111111001100101110100011000000";
        ram[96] = "0b10111000011100110100010100000111";
        ram[97] = "0b00111111000110010100001010010001";
        ram[98] = "0b00111111010011010111111011101101";
        ram[99] = "0b00111110101010111100010101011000";
        ram[100] = "0b00111110111100111101101101111111";
        ram[101] = "0b00111111000000111000101101111010";
        ram[102] = "0b10111000100100101100110011110111";
        ram[103] = "0b00111110101011011100011011000001";
        ram[104] = "0b00111111000101100001011101101110";
        ram[105] = "0b00111110101000011011100000000010";
        ram[106] = "0b00111111000110111110111010000000";
        ram[107] = "0b00111110101011000100101110010000";
        ram[108] = "0b00111110110001001010101011011010";
        ram[109] = "0b10111000010001010010000111011110";
        ram[110] = "0b00111111000100101100000101011101";
        ram[111] = "0b10110111101110001000110010100100";
        ram[112] = "0b00111110101110011101011000000110";
        ram[113] = "0b10110111000001100011011110111101";
        ram[114] = "0b10111000000001100011011110111101";
        ram[115] = "0b00111110101001100100010011111010";
        ram[116] = "0b10111000110011111001111000111000";
        ram[117] = "0b00111110101011111011000010010010";
        ram[118] = "0b00111111001000110101100001101101";
        ram[119] = "0b00111110111100011010110011011110";
        ram[120] = "0b10110110000001100011011110111101";
        ram[121] = "0b00111000100001000001111011011110";
        ram[122] = "0b00110111011110111010100010000010";
        ram[123] = "0b10110111001110001000110010100100";
        ram[124] = "0b00110111110010010101001110011100";
        ram[125] = "0b00111111000100001100011111000001";
        ram[126] = "0b00111111001010110000000011101111";
        ram[127] = "0b00111110100100111100100000011001";
        ram[128] = "0b00110111111110111010100010000010";
        ram[129] = "0b00111000101100100100001000000111";
        ram[130] = "0b00111110111100001100111010110011";
        ram[131] = "0b00111111000000011011010111011001";
        ram[132] = "0b00111110100001011011001110011110";
        ram[133] = "0b00110111111100110100010100000111";
        ram[134] = "0b00110110000001100011011110111101";
        ram[135] = "0b00110110111010101110000110001011";
        ram[136] = "0b00111000011001101010111111001101";
        ram[137] = "0b00111110110000101110100011000000";
        ram[138] = "0b00111111001110000001110111010010";
        ram[139] = "0b10110111001110001000110010100100";
        ram[140] = "0b10111000011101110111011011000101";
        ram[141] = "0b00111110101111010001011101000000";
        ram[142] = "0b00111111001011001110010010101000";
        ram[143] = "0b00111110100100000001001110001000";
        ram[144] = "0b00111110110110011100100011001001";
        ram[145] = "0b00111110110110101010011010001111";
        ram[146] = "0b00110110000001100011011110111101";
        ram[147] = "0b00110111101001111100010110101100";
        ram[148] = "0b00111110010100110111000111011010";
        ram[149] = "0b00110101100001100011011110111101";
        ram[150] = "0b00110111111000100111111000001111";
        ram[151] = "0b10111000000011101001101100111001";
        ram[152] = "0b00110111000001100011011110111101";
        ram[153] = "0b00111000000011101001101100111001";
        ram[154] = "0b10110110101001111100010110101100";
        ram[155] = "0b00111110110101111001100010110111";
        ram[156] = "0b10110111011110111010100010000010";
        ram[157] = "0b00111111000110110010001000111010";
        ram[158] = "0b00111110111011110011100000111111";
        ram[159] = "0b00111000011001101010111111001101";
        ram[160] = "0b00110110101001111100010110101100";
        ram[161] = "0b00111111000001000011111011011001";
        ram[162] = "0b00111111000010101100100000001100";
        ram[163] = "0b00111110110110101111010111111101";
        ram[164] = "0b00111000001000111001001111101110";
        ram[165] = "0b00111111001011001011000011010001";
        ram[166] = "0b10111000001110001000110010100100";
        ram[167] = "0b00110111011110111010100010000010";
        ram[168] = "0b10110111000101101111111010110101";
        ram[169] = "0b10111000000000100000010111111111";
        ram[170] = "0b00000000000000000000000000000000";
        ram[171] = "0b00111111000000101000001001100010";
        ram[172] = "0b00111111000010110000010010101011";
        ram[173] = "0b10110110100001100011011110111101";
        ram[174] = "0b00110111110010010101001110011100";
        ram[175] = "0b10111000000001100011011110111101";
        ram[176] = "0b10110110100001100011011110111101";
        ram[177] = "0b00111110110111100010101101001001";
        ram[178] = "0b00110111101001111100010110101100";
        ram[179] = "0b00110110101001111100010110101100";
        ram[180] = "0b00111111000100000001000110000000";
        ram[181] = "0b00111111000100101110100011000000";
        ram[182] = "0b00110111011110111010100010000010";
        ram[183] = "0b10110111101001111100010110101100";
        ram[184] = "0b10110111001001111100010110101100";
        ram[185] = "0b10110111001001111100010110101100";
        ram[186] = "0b00110111001110001000110010100100";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_ceu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_ceu_ram* meminst;


SC_CTOR(predict_ensemble_ceu) {
meminst = new predict_ensemble_ceu_ram("predict_ensemble_ceu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_ceu() {
    delete meminst;
}


};//endmodule
#endif
