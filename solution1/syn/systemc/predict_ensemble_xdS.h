// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_xdS_H__
#define __predict_ensemble_xdS_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_xdS_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_xdS_ram) {
        ram[0] = "0b00111111011101110111111110111111";
        ram[1] = "0b00111100111101011001000000111010";
        ram[2] = "0b00111100101101100011110100111110";
        ram[3] = "0b10111100110110011011001111010000";
        ram[4] = "0b00111100010100011010011001010000";
        ram[5] = "0b00111101000100101011101000010111";
        ram[6] = "0b00111101101000111110111110101110";
        ram[7] = "0b00111110110001001110001111011110";
        ram[8] = "0b00111101101111010101110000110001";
        ram[9] = "0b00111101011011001111110110001111";
        ram[10] = "0b00111111000000101101110101101010";
        ram[11] = "0b00111100110010010100101100111000";
        ram[12] = "0b00111101110100110000010110010110";
        ram[13] = "0b00111110101001111010100000001101";
        ram[14] = "0b00111100101110000110000010011010";
        ram[15] = "0b10111101100001001100000001011001";
        ram[16] = "0b10111011100110010100100111101001";
        ram[17] = "0b10111100101111010001000000101100";
        ram[18] = "0b00111101111111011111010000111100";
        ram[19] = "0b00111100011110010001101000110011";
        ram[20] = "0b10111100100010010000001011011110";
        ram[21] = "0b00111111000001011010110110100111";
        ram[22] = "0b00111111011100111000001100000110";
        ram[23] = "0b00111110011111100011010011111100";
        ram[24] = "0b10111011011101010001101011001010";
        ram[25] = "0b00111111011000100001111001110001";
        ram[26] = "0b00111100101000000001111011101111";
        ram[27] = "0b00111100010000100100110001000000";
        ram[28] = "0b00111100111011100010010000110101";
        ram[29] = "0b00111111010101011101000101110000";
        ram[30] = "0b10111100110100000110011110001100";
        ram[31] = "0b00111110001100010001000000011011";
        ram[32] = "0b00111101111001001100010010001011";
        ram[33] = "0b00111110000101100101100010000010";
        ram[34] = "0b00111110000001011001000000111010";
        ram[35] = "0b10111011110010000101011111110011";
        ram[36] = "0b00111110001101011001111001100010";
        ram[37] = "0b00111111010100000000000000000000";
        ram[38] = "0b10111101000000100000111001100011";
        ram[39] = "0b00111110110000010010010000101001";
        ram[40] = "0b00111110101010010100010110110111";
        ram[41] = "0b00111100001111110111111100000110";
        ram[42] = "0b00111100111011101011010011101010";
        ram[43] = "0b00111010111011011000000010100001";
        ram[44] = "0b10111100001001111110011100111010";
        ram[45] = "0b10111011101000010010011100101101";
        ram[46] = "0b10111100101101000110010101100010";
        ram[47] = "0b00111110100011100011001011000010";
        ram[48] = "0b00111111010111010000110010110011";
        ram[49] = "0b00111100110100011110101110000101";
        ram[50] = "0b00111111000110011011101100101000";
        ram[51] = "0b00111111011000010100111010100000";
        ram[52] = "0b10111100001110011010100111011010";
        ram[53] = "0b00111111000101011110111110000101";
        ram[54] = "0b00111110110101110101010111011110";
        ram[55] = "0b00111110001011011101101000000110";
        ram[56] = "0b10111100000111111010010101001100";
        ram[57] = "0b00111110110000110111011101111101";
        ram[58] = "0b10111100011011010011010100100010";
        ram[59] = "0b00111100101111111101000011010000";
        ram[60] = "0b00111010011000010111000110011111";
        ram[61] = "0b00111110101110100011011101101001";
        ram[62] = "0b00111111011101011111011001110111";
        ram[63] = "0b10111011111111110001000011101101";
        ram[64] = "0b00111101111011110000110110000100";
        ram[65] = "0b00111111010011111110100010101011";
        ram[66] = "0b00111110001010101010010001110110";
        ram[67] = "0b00111110100000111001010010111000";
        ram[68] = "0b10111100010101010101101000111010";
        ram[69] = "0b00111101101111001010100101101001";
        ram[70] = "0b00111111011101100010110101110011";
        ram[71] = "0b00111011001010101000011001010001";
        ram[72] = "0b00111100101101000110111111011111";
        ram[73] = "0b00111110000101010111001111101011";
        ram[74] = "0b00111100010011101000000100000010";
        ram[75] = "0b00111101110000100011100111100111";
        ram[76] = "0b00111111000111010000111011101101";
        ram[77] = "0b00111011101010100100001100110101";
        ram[78] = "0b00111100100001010101110110100010";
        ram[79] = "0b00111110010010111010001100000001";
        ram[80] = "0b10111100000011111101010111001011";
        ram[81] = "0b00111110111111101010101000001000";
        ram[82] = "0b00111110000111110100000110101111";
        ram[83] = "0b00111010010100100011110101001111";
        ram[84] = "0b00111110100000110000101001001110";
        ram[85] = "0b00111111001111101000101110100000";
        ram[86] = "0b00111100010100000110011110001100";
        ram[87] = "0b10111010111101100010011100111001";
        ram[88] = "0b00111100001110110110011001110011";
        ram[89] = "0b10111011101001101110101110010010";
        ram[90] = "0b00111011111000010101000000010010";
        ram[91] = "0b10111100000110001110010100111111";
        ram[92] = "0b10111010010001010010000111011110";
        ram[93] = "0b10111100100111000110001010100010";
        ram[94] = "0b00111111000000000011110011010001";
        ram[95] = "0b00111110111001000100111000101111";
        ram[96] = "0b00111110010100110010110101101111";
        ram[97] = "0b10111010101011010100011011110110";
        ram[98] = "0b10111100010010111110000111101011";
        ram[99] = "0b00111110110110110100100010110010";
        ram[100] = "0b00111110110011101100010100101010";
        ram[101] = "0b10111010111100010110111101000100";
        ram[102] = "0b00111110010111110100001010111011";
        ram[103] = "0b00111110110101110111010001000111";
        ram[104] = "0b00111111000011011001010101000110";
        ram[105] = "0b00111100100110110111101111110010";
        ram[106] = "0b00111111010011011111110001001100";
        ram[107] = "0b00111100100000010100110101110010";
        ram[108] = "0b00111110101000101011001101101000";
        ram[109] = "0b00111110011011110111010001000111";
        ram[110] = "0b00111100100100110001001000101011";
        ram[111] = "0b00111110110100010101101110111100";
        ram[112] = "0b10111100110100011011001011100110";
        ram[113] = "0b00111111000100110000101010010001";
        ram[114] = "0b00111100000100011110001000010101";
        ram[115] = "0b10111010100110101010101000111011";
        ram[116] = "0b00111100001010010110000010110111";
        ram[117] = "0b00111100000001111100011000110010";
        ram[118] = "0b00111110110101111000001111100000";
        ram[119] = "0b10111011001011000000100000110001";
        ram[120] = "0b10111100001011100111000011000001";
        ram[121] = "0b00111111000011111100111011111011";
        ram[122] = "0b00111111001001011100101110101011";
        ram[123] = "0b00111110101110101010010000010010";
        ram[124] = "0b10111100000110010000101011111110";
        ram[125] = "0b00111110101001000101001010100100";
        ram[126] = "0b00111100001110111100111101001111";
        ram[127] = "0b00111111001010010000100000001011";
        ram[128] = "0b00111011010100000110011110001100";
        ram[129] = "0b00111110100101001100000110101001";
        ram[130] = "0b00111110010101011110100111100010";
        ram[131] = "0b00111111010101111010001001011001";
        ram[132] = "0b00111111010110001101100101010001";
        ram[133] = "0b10111100011111100011011011010010";
        ram[134] = "0b00111111000111001010000010100001";
        ram[135] = "0b10111011000100000000110001010010";
        ram[136] = "0b10111100010001011110111101100011";
        ram[137] = "0b10111011111001101001011010100010";
        ram[138] = "0b00111111001111010011010011110000";
        ram[139] = "0b00111100100100110111010010111100";
        ram[140] = "0b10111011110011111001010111010101";
        ram[141] = "0b00111111010011100111001010010111";
        ram[142] = "0b00111110111001100011011100110111";
        ram[143] = "0b10111100001100101011101110101010";
        ram[144] = "0b10111011011101111100101010100111";
        ram[145] = "0b00111110111111001000010101011110";
        ram[146] = "0b00111011111001101001111100000110";
        ram[147] = "0b00111111011000100010000000010100";
        ram[148] = "0b10111100010010100111110101100111";
        ram[149] = "0b00111111010010000010101100001111";
        ram[150] = "0b00111110111111110100100101001001";
        ram[151] = "0b00111110100111011010011101001100";
        ram[152] = "0b10111011110101110001111100110110";
        ram[153] = "0b00111111000001110100010010100010";
        ram[154] = "0b00111100001011001011110010001100";
        ram[155] = "0b00111111011000101000000100000010";
        ram[156] = "0b00111010111100100111101110110011";
        ram[157] = "0b10111011100001100011011110111101";
        ram[158] = "0b00111111010100010010100100110101";
        ram[159] = "0b00111110100011011110110000011100";
        ram[160] = "0b00111011101110001111000101001110";
        ram[161] = "0b00111110110101110001001010100001";
        ram[162] = "0b00111111010010110111110111011000";
        ram[163] = "0b00111011010111110001010110100101";
        ram[164] = "0b00111100010111001100101001110001";
        ram[165] = "0b00111011101011010101011110111100";
        ram[166] = "0b10111010100010110001000101000001";
        ram[167] = "0b00111011000000101010110111000101";
        ram[168] = "0b00111111000001111100010110111101";
        ram[169] = "0b00111110111011000010100011110110";
        ram[170] = "0b00111111000011010001011101000000";
        ram[171] = "0b00111110101100010100110100101111";
        ram[172] = "0b10111011001101100111001111000101";
        ram[173] = "0b00111001110110001000011111101100";
        ram[174] = "0b10111011100000110010001100110110";
        ram[175] = "0b00111010010100111100111111110110";
        ram[176] = "0b00111111001010011000100001111111";
        ram[177] = "0b00111110111100001110111000000111";
        ram[178] = "0b00111110111101111010110010000010";
        ram[179] = "0b00111100010111000011101111010110";
        ram[180] = "0b00111011110101010011000001001001";
        ram[181] = "0b00111110111110111011011010001001";
        ram[182] = "0b10111011101000110000010101010011";
        ram[183] = "0b10111100001101110100100110101110";
        ram[184] = "0b10111010110010101000000110011001";
        ram[185] = "0b00111100001101010010100001101011";
        ram[186] = "0b00111111000000011101110101101110";
        ram[187] = "0b10111100001001101100010111010010";
        ram[188] = "0b10111100100100110000011110101111";
        ram[189] = "0b00111010111100100011100010010111";
        ram[190] = "0b10111011011011000100000111011101";
        ram[191] = "0b00000000000000000000000000000000";
        ram[192] = "0b00000000000000000000000000000000";
        ram[193] = "0b00000000000000000000000000000000";
        ram[194] = "0b00000000000000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_xdS) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_xdS_ram* meminst;


SC_CTOR(predict_ensemble_xdS) {
meminst = new predict_ensemble_xdS_ram("predict_ensemble_xdS_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_xdS() {
    delete meminst;
}


};//endmodule
#endif
