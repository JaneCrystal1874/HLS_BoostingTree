// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_cNA_H__
#define __predict_ensemble_cNA_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_cNA_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_cNA_ram) {
        ram[0] = "0b00111111011110010011001100001001";
        ram[1] = "0b00111101011110101001000110010111";
        ram[2] = "0b00111001111101100110101001010101";
        ram[3] = "0b00111110111000011010101111010010";
        ram[4] = "0b00111100010101010110001010011110";
        ram[5] = "0b10111010001101101111100111111101";
        ram[6] = "0b00111111000011000100000001111101";
        ram[7] = "0b00111110111100000000100111110110";
        ram[8] = "0b00111111011101010110101001001000";
        ram[9] = "0b00111001110100000010010001110000";
        ram[10] = "0b00111110110010000101011011000101";
        ram[11] = "0b00111001110001110011101010111101";
        ram[12] = "0b00110110100001100011011110111101";
        ram[13] = "0b00111111010111110100001001010111";
        ram[14] = "0b00111001100100100100011010111111";
        ram[15] = "0b10111001101010100110010011000011";
        ram[16] = "0b10110110101001111100010110101100";
        ram[17] = "0b00111101010001011001011001000010";
        ram[18] = "0b00111111011000011100000110110101";
        ram[19] = "0b10111001010110010000111000100100";
        ram[20] = "0b00111101100100001111111000000100";
        ram[21] = "0b10111001100011001000001001011010";
        ram[22] = "0b10111000101100100100001000000111";
        ram[23] = "0b00111001010110010000111000100100";
        ram[24] = "0b00111111011110000111011001111101";
        ram[25] = "0b00111101100000101101000111110010";
        ram[26] = "0b00111000111010001100100010101100";
        ram[27] = "0b00111000101111101101011101000001";
        ram[28] = "0b00111110010010011100010101100001";
        ram[29] = "0b10111000101001011010110011001101";
        ram[30] = "0b00111111011010100101011010111101";
        ram[31] = "0b00111111010101111010001001011001";
        ram[32] = "0b10111000100100001011010000011000";
        ram[33] = "0b00111111010001011010000000010111";
        ram[34] = "0b00111000100011001000001001011010";
        ram[35] = "0b00111111010000011011111101111011";
        ram[36] = "0b10111000011100110100010100000111";
        ram[37] = "0b00111111011001000101110100010000";
        ram[38] = "0b00111000011000100111111000001111";
        ram[39] = "0b00111110110101101110011011111011";
        ram[40] = "0b10111000001000111001001111101110";
        ram[41] = "0b00111110100010011110010100011001";
        ram[42] = "0b00111111010101111110010000100110";
        ram[43] = "0b00111000101010011101111010001011";
        ram[44] = "0b00111110100110001010111000010000";
        ram[45] = "0b00111111001001111110011011010110";
        ram[46] = "0b00111110000111011100000111101000";
        ram[47] = "0b00111000001101000101101011100110";
        ram[48] = "0b00111101110111010001011110000011";
        ram[49] = "0b00111101101001101110100101111001";
        ram[50] = "0b00111000000011101001101100111001";
        ram[51] = "0b10111001000100001011010000011000";
        ram[52] = "0b00111111011101010010011110000000";
        ram[53] = "0b10111000000011101001101100111001";
        ram[54] = "0b00111110101111111001110111010100";
        ram[55] = "0b00110111111000100111111000001111";
        ram[56] = "0b00111101110001101100100101111110";
        ram[57] = "0b00111000011011110001001101001001";
        ram[58] = "0b00111110111011111111010010011001";
        ram[59] = "0b00111000001010111111011101101010";
        ram[60] = "0b00111111011000100100000010010110";
        ram[61] = "0b10111000001000111001001111101110";
        ram[62] = "0b00111101111000011100111001101100";
        ram[63] = "0b10110111000001100011011110111101";
        ram[64] = "0b00110110110010010101001110011100";
        ram[65] = "0b00111111010100101010011101111010";
        ram[66] = "0b10110111110000001111000000100000";
        ram[67] = "0b00111110011001111000110110010011";
        ram[68] = "0b00111110010011011101001101111000";
        ram[69] = "0b00111111011001000001000110100001";
        ram[70] = "0b00111111010110110111101000101101";
        ram[71] = "0b00110101100001100011011110111101";
        ram[72] = "0b00111000000001100011011110111101";
        ram[73] = "0b00111110100110110101000110011100";
        ram[74] = "0b00111110010100111111101110111101";
        ram[75] = "0b00111110101100110111011101011100";
        ram[76] = "0b10110111100011101001101100111001";
        ram[77] = "0b00111000100010100110100101111011";
        ram[78] = "0b00110111010110100001101010010011";
        ram[79] = "0b10110111001001111100010110101100";
        ram[80] = "0b10111000100100101100110011110111";
        ram[81] = "0b00111000001110001000110010100100";
        ram[82] = "0b00111110001100101100010101011101";
        ram[83] = "0b00110111101100000010100100101000";
        ram[84] = "0b00111110110011111001011011100001";
        ram[85] = "0b10111000000000100000010111111111";
        ram[86] = "0b00111111000111000011110101101000";
        ram[87] = "0b10110111000001100011011110111101";
        ram[88] = "0b00111111010101011111010100111000";
        ram[89] = "0b00111111000110100110010111110001";
        ram[90] = "0b10110111100001100011011110111101";
        ram[91] = "0b00111110110110000110001010110010";
        ram[92] = "0b10110110110010010101001110011100";
        ram[93] = "0b00111111011000010001000011000011";
        ram[94] = "0b00110111100001100011011110111101";
        ram[95] = "0b00110110010010010101001110011100";
        ram[96] = "0b00111111010001010010011110110011";
        ram[97] = "0b00111110011110010101101100110110";
        ram[98] = "0b10110111100001100011011110111101";
        ram[99] = "0b00111111010000011101001001011011";
        ram[100] = "0b00111111001000111001001110111100";
        ram[101] = "0b00111110100100011010101000111111";
        ram[102] = "0b00111110101011010100001011000100";
        ram[103] = "0b00111111001010110011101110111000";
        ram[104] = "0b00111111001000000011100001001100";
        ram[105] = "0b00110110100001100011011110111101";
        ram[106] = "0b00111111001100111110011001100000";
        ram[107] = "0b00110111101100000010100100101000";
        ram[108] = "0b00111111010001011101000101110000";
        ram[109] = "0b00111110100011000111110110000000";
        ram[110] = "0b00111110100001011010000010011101";
        ram[111] = "0b00111111000010011110111010001001";
        ram[112] = "0b00111110101111010110101100100011";
        ram[113] = "0b10110110000001100011011110111101";
        ram[114] = "0b10110110101001111100010110101100";
        ram[115] = "0b10110110000001100011011110111101";
        ram[116] = "0b00110110010010010101001110011100";
        ram[117] = "0b00110110100001100011011110111101";
        ram[118] = "0b10110101100001100011011110111101";
        ram[119] = "0b10110111110010010101001110011100";
        ram[120] = "0b00111110110100110110011000001110";
        ram[121] = "0b10110111010010010101001110011100";
        ram[122] = "0b00111110101111111100100011010010";
        ram[123] = "0b10110110010010010101001110011100";
        ram[124] = "0b00111110101100000101010111111100";
        ram[125] = "0b00110110010010010101001110011100";
        ram[126] = "0b00110101100001100011011110111101";
        ram[127] = "0b00111110110101100111010011110011";
        ram[128] = "0b10110111100001100011011110111101";
        ram[129] = "0b00111110110000001110010100011101";
        ram[130] = "0b00111111010010010110100110100001";
        ram[131] = "0b00110110010010010101001110011100";
        ram[132] = "0b00111110110101111011110001011110";
        ram[133] = "0b00111110100010100011111111001101";
        ram[134] = "0b00110110110010010101001110011100";
        ram[135] = "0b00110111011110111010100010000010";
        ram[136] = "0b10110101100001100011011110111101";
        ram[137] = "0b00111110111100100101100001110001";
        ram[138] = "0b10110111001110001000110010100100";
        ram[139] = "0b00000000000000000000000000000000";
        ram[140] = "0b00111111000111011110100111000000";
        ram[141] = "0b10110111000001100011011110111101";
        ram[142] = "0b10110110000001100011011110111101";
        ram[143] = "0b00111110100100011000001100001110";
        ram[144] = "0b00111110101110100000001110100011";
        ram[145] = "0b10110110010010010101001110011100";
        ram[146] = "0b10110101100001100011011110111101";
        ram[147] = "0b00111110111001101000110110010111";
        ram[148] = "0b00111110100110110100110010100001";
        ram[149] = "0b00110111010110100001101010010011";
        ram[150] = "0b00111111011000010110100110010000";
        ram[151] = "0b10110110100001100011011110111101";
        ram[152] = "0b10110111101100000010100100101000";
        ram[153] = "0b10110101100001100011011110111101";
        ram[154] = "0b00110110110010010101001110011100";
        ram[155] = "0b00111111001011010001011101000000";
        ram[156] = "0b00111111001000011100110101100000";
        ram[157] = "0b00111110000001010010001100101101";
        ram[158] = "0b00111111000100111101101010110110";
        ram[159] = "0b00110111100011101001101100111001";
        ram[160] = "0b00111110111111010010001010000101";
        ram[161] = "0b00110110111010101110000110001011";
        ram[162] = "0b00111110111001110011110100111010";
        ram[163] = "0b00111110110011100001110111001001";
        ram[164] = "0b10110111100101101111111010110101";
        ram[165] = "0b10110110100001100011011110111101";
        ram[166] = "0b00110110100001100011011110111101";
        ram[167] = "0b00111110101110100111001001100101";
        ram[168] = "0b00111111001100110001011110111110";
        ram[169] = "0b10110110101001111100010110101100";
        ram[170] = "0b00111110000001100010011000101101";
        ram[171] = "0b00110110000001100011011110111101";
        ram[172] = "0b00111111000110000110011011100100";
        ram[173] = "0b00111111000111000011111011001001";
        ram[174] = "0b00110110101001111100010110101100";
        ram[175] = "0b00110110010010010101001110011100";
        ram[176] = "0b10110101100001100011011110111101";
        ram[177] = "0b00111111010110000010101010111011";
        ram[178] = "0b10110110111010101110000110001011";
        ram[179] = "0b10110101100001100011011110111101";
        ram[180] = "0b00111111010101110111111011100101";
        ram[181] = "0b00110101100001100011011110111101";
        ram[182] = "0b10110110010010010101001110011100";
        ram[183] = "0b00111111000011010010010011000000";
        ram[184] = "0b10000000000000000000000000000000";
        ram[185] = "0b00110110010010010101001110011100";
        ram[186] = "0b00110101100001100011011110111101";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_cNA) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_cNA_ram* meminst;


SC_CTOR(predict_ensemble_cNA) {
meminst = new predict_ensemble_cNA_ram("predict_ensemble_cNA_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_cNA() {
    delete meminst;
}


};//endmodule
#endif
