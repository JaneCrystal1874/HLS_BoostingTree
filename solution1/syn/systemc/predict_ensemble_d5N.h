// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_d5N_H__
#define __predict_ensemble_d5N_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_d5N_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_d5N_ram) {
        ram[0] = "0b00111101001110110100110000111100";
        ram[1] = "0b00111000100110010001011110010100";
        ram[2] = "0b00111101010110111111111100000100";
        ram[3] = "0b10111000101111101101011101000001";
        ram[4] = "0b00111111011101100101011000010101";
        ram[5] = "0b00111111001000101000011011000110";
        ram[6] = "0b10111000001100000010100100101000";
        ram[7] = "0b00111101100001101010110000100001";
        ram[8] = "0b00111101101011000011101000000000";
        ram[9] = "0b00111110111101100010110101100010";
        ram[10] = "0b00111101010110000110110110110101";
        ram[11] = "0b00111001001000111001001111101110";
        ram[12] = "0b00111111011011100101000000001101";
        ram[13] = "0b00110111101110001000110010100100";
        ram[14] = "0b10111001000100011100000010000111";
        ram[15] = "0b00111000000010100110100101111011";
        ram[16] = "0b00111100000111001010010110111110";
        ram[17] = "0b00111110111100100010100000010011";
        ram[18] = "0b00111000010010010101001110011100";
        ram[19] = "0b10111000010110100001101010010011";
        ram[20] = "0b00111110001111111011111001110111";
        ram[21] = "0b00111110111101000101110100100000";
        ram[22] = "0b00111111011100011110100110101111";
        ram[23] = "0b00111110001000111111000001111000";
        ram[24] = "0b00111110010011000111001111101111";
        ram[25] = "0b00110110111010101110000110001011";
        ram[26] = "0b00110101100001100011011110111101";
        ram[27] = "0b00111110100110000100000100100101";
        ram[28] = "0b10110110100001100011011110111101";
        ram[29] = "0b00111111001100101011010011011001";
        ram[30] = "0b10111000011110111010100010000010";
        ram[31] = "0b00111000001110001000110010100100";
        ram[32] = "0b00111111011100011001001010111000";
        ram[33] = "0b10110110100001100011011110111101";
        ram[34] = "0b00111110110001100110110111011111";
        ram[35] = "0b00111101001001011100110001000010";
        ram[36] = "0b00110111000001100011011110111101";
        ram[37] = "0b00111110000001111011110111001111";
        ram[38] = "0b00111111011010010101101100100101";
        ram[39] = "0b00110110010010010101001110011100";
        ram[40] = "0b00111111010011000100001110010001";
        ram[41] = "0b10110111011010101110000110001011";
        ram[42] = "0b00111110100010001000000000110000";
        ram[43] = "0b10111000001001111100010110101100";
        ram[44] = "0b00111100011001110100101011111101";
        ram[45] = "0b00111000011001101010111111001101";
        ram[46] = "0b00111110111010100000110011010000";
        ram[47] = "0b00111111000100101101001010001001";
        ram[48] = "0b10110110000001100011011110111101";
        ram[49] = "0b00111111000000000100100001011010";
        ram[50] = "0b10110111000001100011011110111101";
        ram[51] = "0b00110111100101101111111010110101";
        ram[52] = "0b00111110010000011001001001100100";
        ram[53] = "0b00110110010010010101001110011100";
        ram[54] = "0b10110111010010010101001110011100";
        ram[55] = "0b00111110110101000000000011011010";
        ram[56] = "0b00111110111111101100010110110000";
        ram[57] = "0b10110101100001100011011110111101";
        ram[58] = "0b00110110010010010101001110011100";
        ram[59] = "0b00110111100111110110001000110000";
        ram[60] = "0b00111101100110101011010010110111";
        ram[61] = "0b00000000000000000000000000000000";
        ram[62] = "0b00110110000001100011011110111101";
        ram[63] = "0b10110110000001100011011110111101";
        ram[64] = "0b00111111001010010000100000001011";
        ram[65] = "0b10110111100111110110001000110000";
        ram[66] = "0b00111110010101001110010000000000";
        ram[67] = "0b00000000000000000000000000000000";
        ram[68] = "0b10000000000000000000000000000000";
        ram[69] = "0b00111110010011110010100101001110";
        ram[70] = "0b00111101101000111110111110101110";
        ram[71] = "0b00111110000110010111001100010001";
        ram[72] = "0b00111000000011101001101100111001";
        ram[73] = "0b10111000000110110011000001110011";
        ram[74] = "0b00111110011001011011111000011011";
        ram[75] = "0b10110110111010101110000110001011";
        ram[76] = "0b00111110111000010000001001111001";
        ram[77] = "0b10110110111010101110000110001011";
        ram[78] = "0b00111110100010101100110110011111";
        ram[79] = "0b00110111011010101110000110001011";
        ram[80] = "0b00111110111111111001101101111000";
        ram[81] = "0b00111110010100010010011100101101";
        ram[82] = "0b00111110100101010111110101111100";
        ram[83] = "0b10110110100001100011011110111101";
        ram[84] = "0b00110101100001100011011110111101";
        ram[85] = "0b00110111011010101110000110001011";
        ram[86] = "0b00111110101000011000001001100110";
        ram[87] = "0b00111110010101000010100100010111";
        ram[88] = "0b00111110100110001101101111110000";
        ram[89] = "0b10000000000000000000000000000000";
        ram[90] = "0b00110111000001100011011110111101";
        ram[91] = "0b10110111010110100001101010010011";
        ram[92] = "0b00111110100110110101011001110101";
        ram[93] = "0b00110111010010010101001110011100";
        ram[94] = "0b00111111010111000010011100100000";
        ram[95] = "0b10110110101001111100010110101100";
        ram[96] = "0b00000000000000000000000000000000";
        ram[97] = "0b00111111011010001000000010100110";
        ram[98] = "0b10110110111010101110000110001011";
        ram[99] = "0b00111111011101101000011100001001";
        ram[100] = "0b00111111010011000010001110010110";
        ram[101] = "0b00111101111101100010100001000110";
        ram[102] = "0b00111111010100000100011001000001";
        ram[103] = "0b00110111000001100011011110111101";
        ram[104] = "0b00110110000001100011011110111101";
        ram[105] = "0b00111111001001011101000101110000";
        ram[106] = "0b00111110100100100001110001000111";
        ram[107] = "0b00110111001110001000110010100100";
        ram[108] = "0b10000000000000000000000000000000";
        ram[109] = "0b00110110010010010101001110011100";
        ram[110] = "0b10110111000101101111111010110101";
        ram[111] = "0b10110110101001111100010110101100";
        ram[112] = "0b00111111011000011010001111000010";
        ram[113] = "0b00111110101001111100110101000110";
        ram[114] = "0b10110110100001100011011110111101";
        ram[115] = "0b00111110100001001010110011110011";
        ram[116] = "0b00111110101100000011000100100111";
        ram[117] = "0b00110101100001100011011110111101";
        ram[118] = "0b00110110110010010101001110011100";
        ram[119] = "0b10110110100001100011011110111101";
        ram[120] = "0b00111111010110011010101100101010";
        ram[121] = "0b00111110110111011000001010111010";
        ram[122] = "0b00110110010010010101001110011100";
        ram[123] = "0b00111110110111011101001101010110";
        ram[124] = "0b00111110011010111010011000100110";
        ram[125] = "0b00111110100011100100011100010011";
        ram[126] = "0b00111111000011010001000110011101";
        ram[127] = "0b00111111001010010011100100000000";
        ram[128] = "0b00111111010001000101110100010000";
        ram[129] = "0b10110101100001100011011110111101";
        ram[130] = "0b00111110111001111101111000101111";
        ram[131] = "0b10110110101001111100010110101100";
        ram[132] = "0b10110101100001100011011110111101";
        ram[133] = "0b00110110010010010101001110011100";
        ram[134] = "0b00000000000000000000000000000000";
        ram[135] = "0b00111110101110100001111110001110";
        ram[136] = "0b00110110000001100011011110111101";
        ram[137] = "0b10110101100001100011011110111101";
        ram[138] = "0b00110101100001100011011110111101";
        ram[139] = "0b10110110000001100011011110111101";
        ram[140] = "0b00111111001001110100010111010000";
        ram[141] = "0b00111110101110111100000001011101";
        ram[142] = "0b00111111000001001011000010001110";
        ram[143] = "0b00111110111100101110100101000111";
        ram[144] = "0b00111111001110101110111111110110";
        ram[145] = "0b00111111001101011101000101110000";
        ram[146] = "0b10110110000001100011011110111101";
        ram[147] = "0b00110110000001100011011110111101";
        ram[148] = "0b00110101100001100011011110111101";
        ram[149] = "0b00111110110010100001000000111000";
        ram[150] = "0b00110101100001100011011110111101";
        ram[151] = "0b00111110110110011000011101000000";
        ram[152] = "0b00111111000010110010011100010011";
        ram[153] = "0b10110101100001100011011110111101";
        ram[154] = "0b00111111001100111000110011001010";
        ram[155] = "0b10110110000001100011011110111101";
        ram[156] = "0b00111111000111000110001111110001";
        ram[157] = "0b00111111001111101000101110100000";
        ram[158] = "0b10110101100001100011011110111101";
        ram[159] = "0b00111110101101001000001010111111";
        ram[160] = "0b00110101100001100011011110111101";
        ram[161] = "0b00111110101110001001110011100101";
        ram[162] = "0b10110101100001100011011110111101";
        ram[163] = "0b00110110000001100011011110111101";
        ram[164] = "0b10000000000000000000000000000000";
        ram[165] = "0b10110101100001100011011110111101";
        ram[166] = "0b00111111001000010111010001100000";
        ram[167] = "0b10110101100001100011011110111101";
        ram[168] = "0b00111110111010011001010101101000";
        ram[169] = "0b00111110110101000011110101101000";
        ram[170] = "0b00110101100001100011011110111101";
        ram[171] = "0b00000000000000000000000000000000";
        ram[172] = "0b00111111001000010100110011011011";
        ram[173] = "0b00111111000100000000000000000000";
        ram[174] = "0b00000000000000000000000000000000";
        ram[175] = "0b00111111000000111001110101001110";
        ram[176] = "0b00000000000000000000000000000000";
        ram[177] = "0b00111111000010100010100101000001";
        ram[178] = "0b10000000000000000000000000000000";
        ram[179] = "0b10110101100001100011011110111101";
        ram[180] = "0b10000000000000000000000000000000";
        ram[181] = "0b10000000000000000000000000000000";
        for (unsigned i = 182; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_d5N) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_d5N_ram* meminst;


SC_CTOR(predict_ensemble_d5N) {
meminst = new predict_ensemble_d5N_ram("predict_ensemble_d5N_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_d5N() {
    delete meminst;
}


};//endmodule
#endif
