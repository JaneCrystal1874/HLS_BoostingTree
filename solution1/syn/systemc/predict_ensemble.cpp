// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "predict_ensemble.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic predict_ensemble::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic predict_ensemble::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> predict_ensemble::ap_ST_fsm_state1 = "1";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state2 = "10";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state3 = "100";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state4 = "1000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_pp0_stage1 = "100000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_pp0_stage2 = "1000000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state9 = "10000000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state10 = "100000000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state11 = "1000000000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state12 = "10000000000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state13 = "100000000000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state14 = "1000000000000";
const sc_lv<14> predict_ensemble::ap_ST_fsm_state15 = "10000000000000";
const sc_lv<32> predict_ensemble::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool predict_ensemble::ap_const_boolean_1 = true;
const sc_lv<1> predict_ensemble::ap_const_lv1_0 = "0";
const sc_lv<1> predict_ensemble::ap_const_lv1_1 = "1";
const sc_lv<2> predict_ensemble::ap_const_lv2_0 = "00";
const sc_lv<2> predict_ensemble::ap_const_lv2_2 = "10";
const sc_lv<2> predict_ensemble::ap_const_lv2_3 = "11";
const sc_lv<2> predict_ensemble::ap_const_lv2_1 = "1";
const sc_lv<32> predict_ensemble::ap_const_lv32_1 = "1";
const sc_lv<32> predict_ensemble::ap_const_lv32_3 = "11";
const sc_lv<32> predict_ensemble::ap_const_lv32_D = "1101";
const int predict_ensemble::C_S_AXI_DATA_WIDTH = "100000";
const bool predict_ensemble::ap_const_boolean_0 = false;
const sc_lv<32> predict_ensemble::ap_const_lv32_7 = "111";
const sc_lv<32> predict_ensemble::ap_const_lv32_4 = "100";
const sc_lv<32> predict_ensemble::ap_const_lv32_5 = "101";
const sc_lv<32> predict_ensemble::ap_const_lv32_6 = "110";
const sc_lv<32> predict_ensemble::ap_const_lv32_A = "1010";
const sc_lv<4> predict_ensemble::ap_const_lv4_0 = "0000";
const sc_lv<32> predict_ensemble::ap_const_lv32_2 = "10";
const sc_lv<32> predict_ensemble::ap_const_lv32_B = "1011";
const sc_lv<7> predict_ensemble::ap_const_lv7_0 = "0000000";
const sc_lv<8> predict_ensemble::ap_const_lv8_0 = "00000000";
const sc_lv<4> predict_ensemble::ap_const_lv4_1 = "1";
const sc_lv<4> predict_ensemble::ap_const_lv4_2 = "10";
const sc_lv<4> predict_ensemble::ap_const_lv4_3 = "11";
const sc_lv<4> predict_ensemble::ap_const_lv4_4 = "100";
const sc_lv<4> predict_ensemble::ap_const_lv4_5 = "101";
const sc_lv<4> predict_ensemble::ap_const_lv4_6 = "110";
const sc_lv<4> predict_ensemble::ap_const_lv4_7 = "111";
const sc_lv<4> predict_ensemble::ap_const_lv4_8 = "1000";
const sc_lv<4> predict_ensemble::ap_const_lv4_9 = "1001";
const sc_lv<4> predict_ensemble::ap_const_lv4_A = "1010";
const sc_lv<4> predict_ensemble::ap_const_lv4_B = "1011";
const sc_lv<4> predict_ensemble::ap_const_lv4_F = "1111";
const sc_lv<4> predict_ensemble::ap_const_lv4_E = "1110";
const sc_lv<4> predict_ensemble::ap_const_lv4_D = "1101";
const sc_lv<4> predict_ensemble::ap_const_lv4_C = "1100";
const sc_lv<7> predict_ensemble::ap_const_lv7_40 = "1000000";
const sc_lv<7> predict_ensemble::ap_const_lv7_1 = "1";
const sc_lv<12> predict_ensemble::ap_const_lv12_C4 = "11000100";
const sc_lv<8> predict_ensemble::ap_const_lv8_C4 = "11000100";
const sc_lv<8> predict_ensemble::ap_const_lv8_1 = "1";
const sc_lv<32> predict_ensemble::ap_const_lv32_17 = "10111";
const sc_lv<32> predict_ensemble::ap_const_lv32_1E = "11110";
const sc_lv<8> predict_ensemble::ap_const_lv8_FF = "11111111";
const sc_lv<23> predict_ensemble::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> predict_ensemble::ap_const_lv5_5 = "101";

predict_ensemble::predict_ensemble(sc_module_name name) : sc_module(name), mVcdFile(0) {
    LBoostTree_is_leaf_3_U = new predict_ensemble_bkb("LBoostTree_is_leaf_3_U");
    LBoostTree_is_leaf_3_U->clk(ap_clk);
    LBoostTree_is_leaf_3_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_3_U->address0(LBoostTree_is_leaf_3_address0);
    LBoostTree_is_leaf_3_U->ce0(LBoostTree_is_leaf_3_ce0);
    LBoostTree_is_leaf_3_U->q0(LBoostTree_is_leaf_3_q0);
    LBoostTree_is_leaf_0_U = new predict_ensemble_cud("LBoostTree_is_leaf_0_U");
    LBoostTree_is_leaf_0_U->clk(ap_clk);
    LBoostTree_is_leaf_0_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_0_U->address0(LBoostTree_is_leaf_0_address0);
    LBoostTree_is_leaf_0_U->ce0(LBoostTree_is_leaf_0_ce0);
    LBoostTree_is_leaf_0_U->q0(LBoostTree_is_leaf_0_q0);
    LBoostTree_is_leaf_1_U = new predict_ensemble_dEe("LBoostTree_is_leaf_1_U");
    LBoostTree_is_leaf_1_U->clk(ap_clk);
    LBoostTree_is_leaf_1_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_1_U->address0(LBoostTree_is_leaf_1_address0);
    LBoostTree_is_leaf_1_U->ce0(LBoostTree_is_leaf_1_ce0);
    LBoostTree_is_leaf_1_U->q0(LBoostTree_is_leaf_1_q0);
    LBoostTree_is_leaf_2_U = new predict_ensemble_eOg("LBoostTree_is_leaf_2_U");
    LBoostTree_is_leaf_2_U->clk(ap_clk);
    LBoostTree_is_leaf_2_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_2_U->address0(LBoostTree_is_leaf_2_address0);
    LBoostTree_is_leaf_2_U->ce0(LBoostTree_is_leaf_2_ce0);
    LBoostTree_is_leaf_2_U->q0(LBoostTree_is_leaf_2_q0);
    LBoostTree_feature_i_U = new predict_ensemble_fYi("LBoostTree_feature_i_U");
    LBoostTree_feature_i_U->clk(ap_clk);
    LBoostTree_feature_i_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_U->address0(LBoostTree_feature_i_address0);
    LBoostTree_feature_i_U->ce0(LBoostTree_feature_i_ce0);
    LBoostTree_feature_i_U->q0(LBoostTree_feature_i_q0);
    LBoostTree_feature_i_3_U = new predict_ensemble_g8j("LBoostTree_feature_i_3_U");
    LBoostTree_feature_i_3_U->clk(ap_clk);
    LBoostTree_feature_i_3_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_3_U->address0(LBoostTree_feature_i_3_address0);
    LBoostTree_feature_i_3_U->ce0(LBoostTree_feature_i_3_ce0);
    LBoostTree_feature_i_3_U->q0(LBoostTree_feature_i_3_q0);
    LBoostTree_feature_i_2_U = new predict_ensemble_hbi("LBoostTree_feature_i_2_U");
    LBoostTree_feature_i_2_U->clk(ap_clk);
    LBoostTree_feature_i_2_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_2_U->address0(LBoostTree_feature_i_2_address0);
    LBoostTree_feature_i_2_U->ce0(LBoostTree_feature_i_2_ce0);
    LBoostTree_feature_i_2_U->q0(LBoostTree_feature_i_2_q0);
    LBoostTree_feature_i_1_U = new predict_ensemble_ibs("LBoostTree_feature_i_1_U");
    LBoostTree_feature_i_1_U->clk(ap_clk);
    LBoostTree_feature_i_1_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_1_U->address0(LBoostTree_feature_i_1_address0);
    LBoostTree_feature_i_1_U->ce0(LBoostTree_feature_i_1_ce0);
    LBoostTree_feature_i_1_U->q0(LBoostTree_feature_i_1_q0);
    LBoostTree_value_3_U = new predict_ensemble_jbC("LBoostTree_value_3_U");
    LBoostTree_value_3_U->clk(ap_clk);
    LBoostTree_value_3_U->reset(ap_rst_n_inv);
    LBoostTree_value_3_U->address0(LBoostTree_value_3_address0);
    LBoostTree_value_3_U->ce0(LBoostTree_value_3_ce0);
    LBoostTree_value_3_U->q0(LBoostTree_value_3_q0);
    LBoostTree_value_0_U = new predict_ensemble_kbM("LBoostTree_value_0_U");
    LBoostTree_value_0_U->clk(ap_clk);
    LBoostTree_value_0_U->reset(ap_rst_n_inv);
    LBoostTree_value_0_U->address0(LBoostTree_value_0_address0);
    LBoostTree_value_0_U->ce0(LBoostTree_value_0_ce0);
    LBoostTree_value_0_U->q0(LBoostTree_value_0_q0);
    LBoostTree_value_1_U = new predict_ensemble_lbW("LBoostTree_value_1_U");
    LBoostTree_value_1_U->clk(ap_clk);
    LBoostTree_value_1_U->reset(ap_rst_n_inv);
    LBoostTree_value_1_U->address0(LBoostTree_value_1_address0);
    LBoostTree_value_1_U->ce0(LBoostTree_value_1_ce0);
    LBoostTree_value_1_U->q0(LBoostTree_value_1_q0);
    LBoostTree_value_2_U = new predict_ensemble_mb6("LBoostTree_value_2_U");
    LBoostTree_value_2_U->clk(ap_clk);
    LBoostTree_value_2_U->reset(ap_rst_n_inv);
    LBoostTree_value_2_U->address0(LBoostTree_value_2_address0);
    LBoostTree_value_2_U->ce0(LBoostTree_value_2_ce0);
    LBoostTree_value_2_U->q0(LBoostTree_value_2_q0);
    LBoostTree_left_chil_3_U = new predict_ensemble_ncg("LBoostTree_left_chil_3_U");
    LBoostTree_left_chil_3_U->clk(ap_clk);
    LBoostTree_left_chil_3_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_3_U->address0(LBoostTree_left_chil_3_address0);
    LBoostTree_left_chil_3_U->ce0(LBoostTree_left_chil_3_ce0);
    LBoostTree_left_chil_3_U->q0(LBoostTree_left_chil_3_q0);
    LBoostTree_left_chil_2_U = new predict_ensemble_ocq("LBoostTree_left_chil_2_U");
    LBoostTree_left_chil_2_U->clk(ap_clk);
    LBoostTree_left_chil_2_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_2_U->address0(LBoostTree_left_chil_2_address0);
    LBoostTree_left_chil_2_U->ce0(LBoostTree_left_chil_2_ce0);
    LBoostTree_left_chil_2_U->q0(LBoostTree_left_chil_2_q0);
    LBoostTree_left_chil_1_U = new predict_ensemble_pcA("LBoostTree_left_chil_1_U");
    LBoostTree_left_chil_1_U->clk(ap_clk);
    LBoostTree_left_chil_1_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_1_U->address0(LBoostTree_left_chil_1_address0);
    LBoostTree_left_chil_1_U->ce0(LBoostTree_left_chil_1_ce0);
    LBoostTree_left_chil_1_U->q0(LBoostTree_left_chil_1_q0);
    LBoostTree_left_chil_U = new predict_ensemble_qcK("LBoostTree_left_chil_U");
    LBoostTree_left_chil_U->clk(ap_clk);
    LBoostTree_left_chil_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_U->address0(LBoostTree_left_chil_address0);
    LBoostTree_left_chil_U->ce0(LBoostTree_left_chil_ce0);
    LBoostTree_left_chil_U->q0(LBoostTree_left_chil_q0);
    LBoostTree_right_chi_3_U = new predict_ensemble_rcU("LBoostTree_right_chi_3_U");
    LBoostTree_right_chi_3_U->clk(ap_clk);
    LBoostTree_right_chi_3_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_3_U->address0(LBoostTree_right_chi_3_address0);
    LBoostTree_right_chi_3_U->ce0(LBoostTree_right_chi_3_ce0);
    LBoostTree_right_chi_3_U->q0(LBoostTree_right_chi_3_q0);
    LBoostTree_right_chi_2_U = new predict_ensemble_sc4("LBoostTree_right_chi_2_U");
    LBoostTree_right_chi_2_U->clk(ap_clk);
    LBoostTree_right_chi_2_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_2_U->address0(LBoostTree_right_chi_2_address0);
    LBoostTree_right_chi_2_U->ce0(LBoostTree_right_chi_2_ce0);
    LBoostTree_right_chi_2_U->q0(LBoostTree_right_chi_2_q0);
    LBoostTree_right_chi_1_U = new predict_ensemble_tde("LBoostTree_right_chi_1_U");
    LBoostTree_right_chi_1_U->clk(ap_clk);
    LBoostTree_right_chi_1_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_1_U->address0(LBoostTree_right_chi_1_address0);
    LBoostTree_right_chi_1_U->ce0(LBoostTree_right_chi_1_ce0);
    LBoostTree_right_chi_1_U->q0(LBoostTree_right_chi_1_q0);
    LBoostTree_right_chi_U = new predict_ensemble_udo("LBoostTree_right_chi_U");
    LBoostTree_right_chi_U->clk(ap_clk);
    LBoostTree_right_chi_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_U->address0(LBoostTree_right_chi_address0);
    LBoostTree_right_chi_U->ce0(LBoostTree_right_chi_ce0);
    LBoostTree_right_chi_U->q0(LBoostTree_right_chi_q0);
    predict_ensemble_CTRL_BUS_s_axi_U = new predict_ensemble_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("predict_ensemble_CTRL_BUS_s_axi_U");
    predict_ensemble_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    predict_ensemble_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    predict_ensemble_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    predict_ensemble_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    predict_ensemble_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    predict_ensemble_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    predict_ensemble_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    predict_ensemble_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    predict_ensemble_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    predict_ensemble_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_start(ap_start);
    predict_ensemble_CTRL_BUS_s_axi_U->interrupt(interrupt);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_done(ap_done);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    predict_ensemble_vdy_U1 = new predict_ensemble_vdy<1,4,32,32,32>("predict_ensemble_vdy_U1");
    predict_ensemble_vdy_U1->clk(ap_clk);
    predict_ensemble_vdy_U1->reset(ap_rst_n_inv);
    predict_ensemble_vdy_U1->din0(tmp_17_fu_226);
    predict_ensemble_vdy_U1->din1(node_value_reg_1272);
    predict_ensemble_vdy_U1->ce(ap_var_for_const0);
    predict_ensemble_vdy_U1->dout(grp_fu_547_p2);
    predict_ensemble_wdI_U2 = new predict_ensemble_wdI<1,2,32,32,1>("predict_ensemble_wdI_U2");
    predict_ensemble_wdI_U2->clk(ap_clk);
    predict_ensemble_wdI_U2->reset(ap_rst_n_inv);
    predict_ensemble_wdI_U2->din0(fval_fu_888_p15);
    predict_ensemble_wdI_U2->din1(node_value_reg_1272);
    predict_ensemble_wdI_U2->ce(ap_var_for_const0);
    predict_ensemble_wdI_U2->opcode(ap_var_for_const1);
    predict_ensemble_wdI_U2->dout(grp_fu_551_p2);
    predict_ensemble_xdS_U3 = new predict_ensemble_xdS<1,1,8,8,8,8,32,8>("predict_ensemble_xdS_U3");
    predict_ensemble_xdS_U3->din0(LBoostTree_left_chil_8_reg_1279);
    predict_ensemble_xdS_U3->din1(LBoostTree_left_chil_9_reg_1284);
    predict_ensemble_xdS_U3->din2(LBoostTree_left_chil_10_reg_1289);
    predict_ensemble_xdS_U3->din3(LBoostTree_left_chil_11_reg_1294);
    predict_ensemble_xdS_U3->din4(zext_ln5_reg_1114);
    predict_ensemble_xdS_U3->dout(node_left_child_V_fu_826_p6);
    predict_ensemble_xdS_U4 = new predict_ensemble_xdS<1,1,8,8,8,8,32,8>("predict_ensemble_xdS_U4");
    predict_ensemble_xdS_U4->din0(LBoostTree_right_chi_8_reg_1299);
    predict_ensemble_xdS_U4->din1(LBoostTree_right_chi_9_reg_1304);
    predict_ensemble_xdS_U4->din2(LBoostTree_right_chi_10_reg_1309);
    predict_ensemble_xdS_U4->din3(LBoostTree_right_chi_11_reg_1314);
    predict_ensemble_xdS_U4->din4(zext_ln5_reg_1114);
    predict_ensemble_xdS_U4->dout(node_right_child_V_fu_835_p6);
    predict_ensemble_yd2_U5 = new predict_ensemble_yd2<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,4,32>("predict_ensemble_yd2_U5");
    predict_ensemble_yd2_U5->din0(tmp_fu_174);
    predict_ensemble_yd2_U5->din1(tmp_2_fu_178);
    predict_ensemble_yd2_U5->din2(tmp_3_fu_182);
    predict_ensemble_yd2_U5->din3(tmp_5_fu_186);
    predict_ensemble_yd2_U5->din4(tmp_7_fu_190);
    predict_ensemble_yd2_U5->din5(tmp_8_fu_194);
    predict_ensemble_yd2_U5->din6(tmp_10_fu_198);
    predict_ensemble_yd2_U5->din7(tmp_11_fu_202);
    predict_ensemble_yd2_U5->din8(tmp_12_fu_206);
    predict_ensemble_yd2_U5->din9(tmp_13_fu_210);
    predict_ensemble_yd2_U5->din10(tmp_14_fu_214);
    predict_ensemble_yd2_U5->din11(tmp_15_fu_218);
    predict_ensemble_yd2_U5->din12(tmp_16_fu_222);
    predict_ensemble_yd2_U5->din13(fval_fu_888_p14);
    predict_ensemble_yd2_U5->dout(fval_fu_888_p15);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_LBoostTree_feature_i_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_feature_i_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_feature_i_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_feature_i_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_feature_i_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_feature_i_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_feature_i_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_feature_i_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_is_leaf_0_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_reg_1159 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_LBoostTree_is_leaf_0_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_LBoostTree_is_leaf_1_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_reg_1159 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_LBoostTree_is_leaf_1_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_LBoostTree_is_leaf_2_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_reg_1159 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_LBoostTree_is_leaf_2_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_LBoostTree_is_leaf_3_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_reg_1159 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_LBoostTree_is_leaf_3_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_LBoostTree_left_chil_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_left_chil_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_left_chil_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_left_chil_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_left_chil_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_left_chil_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_left_chil_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_left_chil_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_right_chi_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_right_chi_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_right_chi_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_right_chi_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_right_chi_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_right_chi_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_right_chi_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_right_chi_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_value_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_value_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_value_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_value_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_value_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_value_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LBoostTree_value_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln1_2_fu_743_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_LBoostTree_value_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_add_ln1_fu_738_p2);
    sensitive << ( mul_ln1_reg_1120 );
    sensitive << ( zext_ln1_1_fu_734_p1 );

    SC_METHOD(thread_and_ln39_1_fu_996_p2);
    sensitive << ( and_ln39_fu_990_p2 );
    sensitive << ( grp_fu_551_p2 );

    SC_METHOD(thread_and_ln39_fu_990_p2);
    sensitive << ( or_ln39_fu_968_p2 );
    sensitive << ( or_ln39_1_fu_984_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_00001);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state15);
    sensitive << ( prediction_stream_V_TREADY );
    sensitive << ( prediction_stream_V_1_state );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( feature_stream_V_0_vld_out );
    sensitive << ( icmp_ln20_fu_566_p2 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( prediction_stream_V_1_ack_in );
    sensitive << ( icmp_ln27_fu_648_p2 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state7);
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_predicate_tran7to9_state7 );

    SC_METHOD(thread_ap_done);
    sensitive << ( prediction_stream_V_TREADY );
    sensitive << ( prediction_stream_V_1_ack_in );
    sensitive << ( prediction_stream_V_1_state );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_curren_0_phi_fu_529_p4);
    sensitive << ( curren_0_reg_525 );
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( node_is_leaf_reg_1319 );
    sensitive << ( select_ln39_fu_1002_p3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_depth_0_phi_fu_540_p4);
    sensitive << ( depth_0_reg_536 );
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( depth_reg_1154 );
    sensitive << ( node_is_leaf_reg_1319 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_507_p4);
    sensitive << ( i_0_reg_503 );

    SC_METHOD(thread_ap_predicate_tran7to9_state7);
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( node_is_leaf_fu_819_p3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( prediction_stream_V_TREADY );
    sensitive << ( prediction_stream_V_1_ack_in );
    sensitive << ( prediction_stream_V_1_state );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln39_1_fu_951_p1);
    sensitive << ( node_value_reg_1272 );

    SC_METHOD(thread_bitcast_ln39_fu_921_p1);
    sensitive << ( fval_fu_888_p15 );

    SC_METHOD(thread_depth_fu_728_p2);
    sensitive << ( ap_phi_mux_depth_0_phi_fu_540_p4 );

    SC_METHOD(thread_feature_stream_V_0_ack_in);
    sensitive << ( feature_stream_V_0_state );

    SC_METHOD(thread_feature_stream_V_0_ack_out);
    sensitive << ( feature_stream_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_566_p2 );

    SC_METHOD(thread_feature_stream_V_0_data_out);
    sensitive << ( feature_stream_V_0_payload_A );
    sensitive << ( feature_stream_V_0_payload_B );
    sensitive << ( feature_stream_V_0_sel );

    SC_METHOD(thread_feature_stream_V_0_load_A);
    sensitive << ( feature_stream_V_0_sel_wr );
    sensitive << ( feature_stream_V_0_state_cmp_full );

    SC_METHOD(thread_feature_stream_V_0_load_B);
    sensitive << ( feature_stream_V_0_sel_wr );
    sensitive << ( feature_stream_V_0_state_cmp_full );

    SC_METHOD(thread_feature_stream_V_0_sel);
    sensitive << ( feature_stream_V_0_sel_rd );

    SC_METHOD(thread_feature_stream_V_0_state_cmp_full);
    sensitive << ( feature_stream_V_0_state );

    SC_METHOD(thread_feature_stream_V_0_vld_in);
    sensitive << ( feature_stream_V_TVALID );

    SC_METHOD(thread_feature_stream_V_0_vld_out);
    sensitive << ( feature_stream_V_0_state );

    SC_METHOD(thread_feature_stream_V_TDATA_blk_n);
    sensitive << ( feature_stream_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_566_p2 );

    SC_METHOD(thread_feature_stream_V_TREADY);
    sensitive << ( feature_stream_V_0_state );

    SC_METHOD(thread_fval_fu_888_p14);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( node_feature_index_V_reg_1267 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_i_1_fu_654_p2);
    sensitive << ( i1_0_reg_514 );

    SC_METHOD(thread_i_fu_572_p2);
    sensitive << ( i_0_reg_503 );

    SC_METHOD(thread_icmp_ln13_1_fu_704_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_648_p2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( trunc_ln5_1_fu_670_p4 );

    SC_METHOD(thread_icmp_ln13_2_fu_710_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_648_p2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( trunc_ln5_1_fu_670_p4 );

    SC_METHOD(thread_icmp_ln13_fu_698_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_648_p2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( trunc_ln5_1_fu_670_p4 );

    SC_METHOD(thread_icmp_ln20_fu_566_p2);
    sensitive << ( feature_stream_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_566_p2 );
    sensitive << ( i_0_reg_503 );

    SC_METHOD(thread_icmp_ln27_fu_648_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( i1_0_reg_514 );

    SC_METHOD(thread_icmp_ln30_fu_722_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_depth_0_phi_fu_540_p4 );

    SC_METHOD(thread_icmp_ln39_1_fu_945_p2);
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( node_is_leaf_fu_819_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( trunc_ln39_fu_935_p1 );

    SC_METHOD(thread_icmp_ln39_2_fu_972_p2);
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( node_is_leaf_reg_1319 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_fu_954_p4 );

    SC_METHOD(thread_icmp_ln39_3_fu_978_p2);
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( node_is_leaf_reg_1319 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln39_1_fu_964_p1 );

    SC_METHOD(thread_icmp_ln39_fu_939_p2);
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( node_is_leaf_fu_819_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( tmp_9_fu_925_p4 );

    SC_METHOD(thread_lshr_ln5_fu_660_p4);
    sensitive << ( i1_0_reg_514 );

    SC_METHOD(thread_mul_ln1_fu_692_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_ln1_fu_692_p10 );

    SC_METHOD(thread_mul_ln1_fu_692_p10);
    sensitive << ( trunc_ln1_fu_684_p1 );

    SC_METHOD(thread_mul_ln1_fu_692_p2);
    sensitive << ( mul_ln1_fu_692_p1 );

    SC_METHOD(thread_node_feature_index_V_fu_777_p3);
    sensitive << ( or_ln13_reg_1144 );
    sensitive << ( select_ln13_3_fu_763_p3 );
    sensitive << ( select_ln13_4_fu_770_p3 );

    SC_METHOD(thread_node_is_leaf_fu_819_p3);
    sensitive << ( or_ln13_reg_1144 );
    sensitive << ( select_ln13_fu_805_p3 );
    sensitive << ( select_ln13_1_fu_812_p3 );

    SC_METHOD(thread_node_value_fu_798_p3);
    sensitive << ( LBoostTree_value_2_q0 );
    sensitive << ( icmp_ln13_2_reg_1137 );
    sensitive << ( select_ln13_7_fu_791_p3 );

    SC_METHOD(thread_or_ln13_fu_716_p2);
    sensitive << ( icmp_ln13_1_fu_704_p2 );
    sensitive << ( icmp_ln13_2_fu_710_p2 );

    SC_METHOD(thread_or_ln39_1_fu_984_p2);
    sensitive << ( icmp_ln39_3_fu_978_p2 );
    sensitive << ( icmp_ln39_2_fu_972_p2 );

    SC_METHOD(thread_or_ln39_fu_968_p2);
    sensitive << ( icmp_ln39_reg_1338 );
    sensitive << ( icmp_ln39_1_reg_1343 );

    SC_METHOD(thread_prediction_stream_V_1_ack_in);
    sensitive << ( prediction_stream_V_1_state );

    SC_METHOD(thread_prediction_stream_V_1_ack_out);
    sensitive << ( prediction_stream_V_TREADY );

    SC_METHOD(thread_prediction_stream_V_1_data_out);
    sensitive << ( prediction_stream_V_1_payload_A );
    sensitive << ( prediction_stream_V_1_payload_B );
    sensitive << ( prediction_stream_V_1_sel );

    SC_METHOD(thread_prediction_stream_V_1_load_A);
    sensitive << ( prediction_stream_V_1_sel_wr );
    sensitive << ( prediction_stream_V_1_state_cmp_full );

    SC_METHOD(thread_prediction_stream_V_1_load_B);
    sensitive << ( prediction_stream_V_1_sel_wr );
    sensitive << ( prediction_stream_V_1_state_cmp_full );

    SC_METHOD(thread_prediction_stream_V_1_sel);
    sensitive << ( prediction_stream_V_1_sel_rd );

    SC_METHOD(thread_prediction_stream_V_1_state_cmp_full);
    sensitive << ( prediction_stream_V_1_state );

    SC_METHOD(thread_prediction_stream_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_648_p2 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_prediction_stream_V_1_vld_out);
    sensitive << ( prediction_stream_V_1_state );

    SC_METHOD(thread_prediction_stream_V_TDATA);
    sensitive << ( prediction_stream_V_1_data_out );

    SC_METHOD(thread_prediction_stream_V_TDATA_blk_n);
    sensitive << ( prediction_stream_V_1_state );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_648_p2 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_prediction_stream_V_TVALID);
    sensitive << ( prediction_stream_V_1_state );

    SC_METHOD(thread_select_ln13_1_fu_812_p3);
    sensitive << ( LBoostTree_is_leaf_3_q0 );
    sensitive << ( LBoostTree_is_leaf_0_q0 );
    sensitive << ( icmp_ln13_reg_1125 );

    SC_METHOD(thread_select_ln13_3_fu_763_p3);
    sensitive << ( LBoostTree_feature_i_2_q0 );
    sensitive << ( LBoostTree_feature_i_1_q0 );
    sensitive << ( icmp_ln13_2_reg_1137 );

    SC_METHOD(thread_select_ln13_4_fu_770_p3);
    sensitive << ( LBoostTree_feature_i_q0 );
    sensitive << ( LBoostTree_feature_i_3_q0 );
    sensitive << ( icmp_ln13_reg_1125 );

    SC_METHOD(thread_select_ln13_6_fu_784_p3);
    sensitive << ( LBoostTree_value_3_q0 );
    sensitive << ( LBoostTree_value_0_q0 );
    sensitive << ( icmp_ln13_reg_1125 );

    SC_METHOD(thread_select_ln13_7_fu_791_p3);
    sensitive << ( LBoostTree_value_1_q0 );
    sensitive << ( icmp_ln13_1_reg_1132 );
    sensitive << ( select_ln13_6_fu_784_p3 );

    SC_METHOD(thread_select_ln13_fu_805_p3);
    sensitive << ( LBoostTree_is_leaf_1_q0 );
    sensitive << ( LBoostTree_is_leaf_2_q0 );
    sensitive << ( icmp_ln13_2_reg_1137 );

    SC_METHOD(thread_select_ln39_fu_1002_p3);
    sensitive << ( node_left_child_V_reg_1323 );
    sensitive << ( node_right_child_V_reg_1328 );
    sensitive << ( and_ln39_1_fu_996_p2 );

    SC_METHOD(thread_tmp_9_fu_925_p4);
    sensitive << ( bitcast_ln39_fu_921_p1 );

    SC_METHOD(thread_tmp_s_fu_954_p4);
    sensitive << ( bitcast_ln39_1_fu_951_p1 );

    SC_METHOD(thread_trunc_ln1_fu_684_p1);
    sensitive << ( i1_0_reg_514 );

    SC_METHOD(thread_trunc_ln39_1_fu_964_p1);
    sensitive << ( bitcast_ln39_1_fu_951_p1 );

    SC_METHOD(thread_trunc_ln39_fu_935_p1);
    sensitive << ( bitcast_ln39_fu_921_p1 );

    SC_METHOD(thread_trunc_ln5_1_fu_670_p4);
    sensitive << ( i1_0_reg_514 );

    SC_METHOD(thread_zext_ln1_1_fu_734_p1);
    sensitive << ( ap_phi_mux_curren_0_phi_fu_529_p4 );

    SC_METHOD(thread_zext_ln1_2_fu_743_p1);
    sensitive << ( add_ln1_fu_738_p2 );

    SC_METHOD(thread_zext_ln5_fu_680_p1);
    sensitive << ( lshr_ln5_fu_660_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( feature_stream_V_0_vld_out );
    sensitive << ( prediction_stream_V_TREADY );
    sensitive << ( prediction_stream_V_1_ack_in );
    sensitive << ( prediction_stream_V_1_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_566_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_648_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( icmp_ln30_reg_1150 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_predicate_tran7to9_state7 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000001";
    feature_stream_V_0_sel_rd = SC_LOGIC_0;
    feature_stream_V_0_sel_wr = SC_LOGIC_0;
    feature_stream_V_0_state = "00";
    prediction_stream_V_1_sel_rd = SC_LOGIC_0;
    prediction_stream_V_1_sel_wr = SC_LOGIC_0;
    prediction_stream_V_1_state = "00";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "predict_ensemble_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, feature_stream_V_TDATA, "(port)feature_stream_V_TDATA");
    sc_trace(mVcdFile, feature_stream_V_TVALID, "(port)feature_stream_V_TVALID");
    sc_trace(mVcdFile, feature_stream_V_TREADY, "(port)feature_stream_V_TREADY");
    sc_trace(mVcdFile, prediction_stream_V_TDATA, "(port)prediction_stream_V_TDATA");
    sc_trace(mVcdFile, prediction_stream_V_TVALID, "(port)prediction_stream_V_TVALID");
    sc_trace(mVcdFile, prediction_stream_V_TREADY, "(port)prediction_stream_V_TREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, feature_stream_V_0_data_out, "feature_stream_V_0_data_out");
    sc_trace(mVcdFile, feature_stream_V_0_vld_in, "feature_stream_V_0_vld_in");
    sc_trace(mVcdFile, feature_stream_V_0_vld_out, "feature_stream_V_0_vld_out");
    sc_trace(mVcdFile, feature_stream_V_0_ack_in, "feature_stream_V_0_ack_in");
    sc_trace(mVcdFile, feature_stream_V_0_ack_out, "feature_stream_V_0_ack_out");
    sc_trace(mVcdFile, feature_stream_V_0_payload_A, "feature_stream_V_0_payload_A");
    sc_trace(mVcdFile, feature_stream_V_0_payload_B, "feature_stream_V_0_payload_B");
    sc_trace(mVcdFile, feature_stream_V_0_sel_rd, "feature_stream_V_0_sel_rd");
    sc_trace(mVcdFile, feature_stream_V_0_sel_wr, "feature_stream_V_0_sel_wr");
    sc_trace(mVcdFile, feature_stream_V_0_sel, "feature_stream_V_0_sel");
    sc_trace(mVcdFile, feature_stream_V_0_load_A, "feature_stream_V_0_load_A");
    sc_trace(mVcdFile, feature_stream_V_0_load_B, "feature_stream_V_0_load_B");
    sc_trace(mVcdFile, feature_stream_V_0_state, "feature_stream_V_0_state");
    sc_trace(mVcdFile, feature_stream_V_0_state_cmp_full, "feature_stream_V_0_state_cmp_full");
    sc_trace(mVcdFile, prediction_stream_V_1_data_out, "prediction_stream_V_1_data_out");
    sc_trace(mVcdFile, prediction_stream_V_1_vld_in, "prediction_stream_V_1_vld_in");
    sc_trace(mVcdFile, prediction_stream_V_1_vld_out, "prediction_stream_V_1_vld_out");
    sc_trace(mVcdFile, prediction_stream_V_1_ack_in, "prediction_stream_V_1_ack_in");
    sc_trace(mVcdFile, prediction_stream_V_1_ack_out, "prediction_stream_V_1_ack_out");
    sc_trace(mVcdFile, prediction_stream_V_1_payload_A, "prediction_stream_V_1_payload_A");
    sc_trace(mVcdFile, prediction_stream_V_1_payload_B, "prediction_stream_V_1_payload_B");
    sc_trace(mVcdFile, prediction_stream_V_1_sel_rd, "prediction_stream_V_1_sel_rd");
    sc_trace(mVcdFile, prediction_stream_V_1_sel_wr, "prediction_stream_V_1_sel_wr");
    sc_trace(mVcdFile, prediction_stream_V_1_sel, "prediction_stream_V_1_sel");
    sc_trace(mVcdFile, prediction_stream_V_1_load_A, "prediction_stream_V_1_load_A");
    sc_trace(mVcdFile, prediction_stream_V_1_load_B, "prediction_stream_V_1_load_B");
    sc_trace(mVcdFile, prediction_stream_V_1_state, "prediction_stream_V_1_state");
    sc_trace(mVcdFile, prediction_stream_V_1_state_cmp_full, "prediction_stream_V_1_state_cmp_full");
    sc_trace(mVcdFile, LBoostTree_is_leaf_3_address0, "LBoostTree_is_leaf_3_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_3_ce0, "LBoostTree_is_leaf_3_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_3_q0, "LBoostTree_is_leaf_3_q0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_0_address0, "LBoostTree_is_leaf_0_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_0_ce0, "LBoostTree_is_leaf_0_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_0_q0, "LBoostTree_is_leaf_0_q0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_1_address0, "LBoostTree_is_leaf_1_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_1_ce0, "LBoostTree_is_leaf_1_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_1_q0, "LBoostTree_is_leaf_1_q0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_2_address0, "LBoostTree_is_leaf_2_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_2_ce0, "LBoostTree_is_leaf_2_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_2_q0, "LBoostTree_is_leaf_2_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_address0, "LBoostTree_feature_i_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_ce0, "LBoostTree_feature_i_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_q0, "LBoostTree_feature_i_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_3_address0, "LBoostTree_feature_i_3_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_3_ce0, "LBoostTree_feature_i_3_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_3_q0, "LBoostTree_feature_i_3_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_2_address0, "LBoostTree_feature_i_2_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_2_ce0, "LBoostTree_feature_i_2_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_2_q0, "LBoostTree_feature_i_2_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_1_address0, "LBoostTree_feature_i_1_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_1_ce0, "LBoostTree_feature_i_1_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_1_q0, "LBoostTree_feature_i_1_q0");
    sc_trace(mVcdFile, LBoostTree_value_3_address0, "LBoostTree_value_3_address0");
    sc_trace(mVcdFile, LBoostTree_value_3_ce0, "LBoostTree_value_3_ce0");
    sc_trace(mVcdFile, LBoostTree_value_3_q0, "LBoostTree_value_3_q0");
    sc_trace(mVcdFile, LBoostTree_value_0_address0, "LBoostTree_value_0_address0");
    sc_trace(mVcdFile, LBoostTree_value_0_ce0, "LBoostTree_value_0_ce0");
    sc_trace(mVcdFile, LBoostTree_value_0_q0, "LBoostTree_value_0_q0");
    sc_trace(mVcdFile, LBoostTree_value_1_address0, "LBoostTree_value_1_address0");
    sc_trace(mVcdFile, LBoostTree_value_1_ce0, "LBoostTree_value_1_ce0");
    sc_trace(mVcdFile, LBoostTree_value_1_q0, "LBoostTree_value_1_q0");
    sc_trace(mVcdFile, LBoostTree_value_2_address0, "LBoostTree_value_2_address0");
    sc_trace(mVcdFile, LBoostTree_value_2_ce0, "LBoostTree_value_2_ce0");
    sc_trace(mVcdFile, LBoostTree_value_2_q0, "LBoostTree_value_2_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_3_address0, "LBoostTree_left_chil_3_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_3_ce0, "LBoostTree_left_chil_3_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_3_q0, "LBoostTree_left_chil_3_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_2_address0, "LBoostTree_left_chil_2_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_2_ce0, "LBoostTree_left_chil_2_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_2_q0, "LBoostTree_left_chil_2_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_1_address0, "LBoostTree_left_chil_1_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_1_ce0, "LBoostTree_left_chil_1_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_1_q0, "LBoostTree_left_chil_1_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_address0, "LBoostTree_left_chil_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_ce0, "LBoostTree_left_chil_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_q0, "LBoostTree_left_chil_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_3_address0, "LBoostTree_right_chi_3_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_3_ce0, "LBoostTree_right_chi_3_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_3_q0, "LBoostTree_right_chi_3_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_2_address0, "LBoostTree_right_chi_2_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_2_ce0, "LBoostTree_right_chi_2_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_2_q0, "LBoostTree_right_chi_2_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_1_address0, "LBoostTree_right_chi_1_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_1_ce0, "LBoostTree_right_chi_1_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_1_q0, "LBoostTree_right_chi_1_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_address0, "LBoostTree_right_chi_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_ce0, "LBoostTree_right_chi_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_q0, "LBoostTree_right_chi_q0");
    sc_trace(mVcdFile, feature_stream_V_TDATA_blk_n, "feature_stream_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln20_fu_566_p2, "icmp_ln20_fu_566_p2");
    sc_trace(mVcdFile, prediction_stream_V_TDATA_blk_n, "prediction_stream_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln27_fu_648_p2, "icmp_ln27_fu_648_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, curren_0_reg_525, "curren_0_reg_525");
    sc_trace(mVcdFile, depth_0_reg_536, "depth_0_reg_536");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_fu_572_p2, "i_fu_572_p2");
    sc_trace(mVcdFile, i_reg_1093, "i_reg_1093");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_1_fu_654_p2, "i_1_fu_654_p2");
    sc_trace(mVcdFile, i_1_reg_1109, "i_1_reg_1109");
    sc_trace(mVcdFile, zext_ln5_fu_680_p1, "zext_ln5_fu_680_p1");
    sc_trace(mVcdFile, zext_ln5_reg_1114, "zext_ln5_reg_1114");
    sc_trace(mVcdFile, mul_ln1_fu_692_p2, "mul_ln1_fu_692_p2");
    sc_trace(mVcdFile, mul_ln1_reg_1120, "mul_ln1_reg_1120");
    sc_trace(mVcdFile, icmp_ln13_fu_698_p2, "icmp_ln13_fu_698_p2");
    sc_trace(mVcdFile, icmp_ln13_reg_1125, "icmp_ln13_reg_1125");
    sc_trace(mVcdFile, icmp_ln13_1_fu_704_p2, "icmp_ln13_1_fu_704_p2");
    sc_trace(mVcdFile, icmp_ln13_1_reg_1132, "icmp_ln13_1_reg_1132");
    sc_trace(mVcdFile, icmp_ln13_2_fu_710_p2, "icmp_ln13_2_fu_710_p2");
    sc_trace(mVcdFile, icmp_ln13_2_reg_1137, "icmp_ln13_2_reg_1137");
    sc_trace(mVcdFile, or_ln13_fu_716_p2, "or_ln13_fu_716_p2");
    sc_trace(mVcdFile, or_ln13_reg_1144, "or_ln13_reg_1144");
    sc_trace(mVcdFile, icmp_ln30_fu_722_p2, "icmp_ln30_fu_722_p2");
    sc_trace(mVcdFile, icmp_ln30_reg_1150, "icmp_ln30_reg_1150");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter0, "ap_block_state5_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter1, "ap_block_state8_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, depth_fu_728_p2, "depth_fu_728_p2");
    sc_trace(mVcdFile, depth_reg_1154, "depth_reg_1154");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln1_2_fu_743_p1, "zext_ln1_2_fu_743_p1");
    sc_trace(mVcdFile, zext_ln1_2_reg_1159, "zext_ln1_2_reg_1159");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter0, "ap_block_state6_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, node_feature_index_V_fu_777_p3, "node_feature_index_V_fu_777_p3");
    sc_trace(mVcdFile, node_feature_index_V_reg_1267, "node_feature_index_V_reg_1267");
    sc_trace(mVcdFile, node_value_fu_798_p3, "node_value_fu_798_p3");
    sc_trace(mVcdFile, node_value_reg_1272, "node_value_reg_1272");
    sc_trace(mVcdFile, LBoostTree_left_chil_8_reg_1279, "LBoostTree_left_chil_8_reg_1279");
    sc_trace(mVcdFile, LBoostTree_left_chil_9_reg_1284, "LBoostTree_left_chil_9_reg_1284");
    sc_trace(mVcdFile, LBoostTree_left_chil_10_reg_1289, "LBoostTree_left_chil_10_reg_1289");
    sc_trace(mVcdFile, LBoostTree_left_chil_11_reg_1294, "LBoostTree_left_chil_11_reg_1294");
    sc_trace(mVcdFile, LBoostTree_right_chi_8_reg_1299, "LBoostTree_right_chi_8_reg_1299");
    sc_trace(mVcdFile, LBoostTree_right_chi_9_reg_1304, "LBoostTree_right_chi_9_reg_1304");
    sc_trace(mVcdFile, LBoostTree_right_chi_10_reg_1309, "LBoostTree_right_chi_10_reg_1309");
    sc_trace(mVcdFile, LBoostTree_right_chi_11_reg_1314, "LBoostTree_right_chi_11_reg_1314");
    sc_trace(mVcdFile, node_is_leaf_fu_819_p3, "node_is_leaf_fu_819_p3");
    sc_trace(mVcdFile, node_is_leaf_reg_1319, "node_is_leaf_reg_1319");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage2_iter0, "ap_block_state7_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, node_left_child_V_fu_826_p6, "node_left_child_V_fu_826_p6");
    sc_trace(mVcdFile, node_left_child_V_reg_1323, "node_left_child_V_reg_1323");
    sc_trace(mVcdFile, node_right_child_V_fu_835_p6, "node_right_child_V_fu_835_p6");
    sc_trace(mVcdFile, node_right_child_V_reg_1328, "node_right_child_V_reg_1328");
    sc_trace(mVcdFile, fval_fu_888_p15, "fval_fu_888_p15");
    sc_trace(mVcdFile, icmp_ln39_fu_939_p2, "icmp_ln39_fu_939_p2");
    sc_trace(mVcdFile, icmp_ln39_reg_1338, "icmp_ln39_reg_1338");
    sc_trace(mVcdFile, icmp_ln39_1_fu_945_p2, "icmp_ln39_1_fu_945_p2");
    sc_trace(mVcdFile, icmp_ln39_1_reg_1343, "icmp_ln39_1_reg_1343");
    sc_trace(mVcdFile, select_ln39_fu_1002_p3, "select_ln39_fu_1002_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, grp_fu_547_p2, "grp_fu_547_p2");
    sc_trace(mVcdFile, sum_reg_1353, "sum_reg_1353");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_predicate_tran7to9_state7, "ap_predicate_tran7to9_state7");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state7, "ap_condition_pp0_exit_iter0_state7");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_507_p4, "ap_phi_mux_i_0_phi_fu_507_p4");
    sc_trace(mVcdFile, i_0_reg_503, "i_0_reg_503");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i1_0_reg_514, "i1_0_reg_514");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_phi_mux_curren_0_phi_fu_529_p4, "ap_phi_mux_curren_0_phi_fu_529_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_depth_0_phi_fu_540_p4, "ap_phi_mux_depth_0_phi_fu_540_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_fu_174, "tmp_fu_174");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_2_fu_178, "tmp_2_fu_178");
    sc_trace(mVcdFile, tmp_3_fu_182, "tmp_3_fu_182");
    sc_trace(mVcdFile, tmp_5_fu_186, "tmp_5_fu_186");
    sc_trace(mVcdFile, tmp_7_fu_190, "tmp_7_fu_190");
    sc_trace(mVcdFile, tmp_8_fu_194, "tmp_8_fu_194");
    sc_trace(mVcdFile, tmp_10_fu_198, "tmp_10_fu_198");
    sc_trace(mVcdFile, tmp_11_fu_202, "tmp_11_fu_202");
    sc_trace(mVcdFile, tmp_12_fu_206, "tmp_12_fu_206");
    sc_trace(mVcdFile, tmp_13_fu_210, "tmp_13_fu_210");
    sc_trace(mVcdFile, tmp_14_fu_214, "tmp_14_fu_214");
    sc_trace(mVcdFile, tmp_15_fu_218, "tmp_15_fu_218");
    sc_trace(mVcdFile, tmp_16_fu_222, "tmp_16_fu_222");
    sc_trace(mVcdFile, tmp_17_fu_226, "tmp_17_fu_226");
    sc_trace(mVcdFile, lshr_ln5_fu_660_p4, "lshr_ln5_fu_660_p4");
    sc_trace(mVcdFile, trunc_ln1_fu_684_p1, "trunc_ln1_fu_684_p1");
    sc_trace(mVcdFile, mul_ln1_fu_692_p1, "mul_ln1_fu_692_p1");
    sc_trace(mVcdFile, trunc_ln5_1_fu_670_p4, "trunc_ln5_1_fu_670_p4");
    sc_trace(mVcdFile, zext_ln1_1_fu_734_p1, "zext_ln1_1_fu_734_p1");
    sc_trace(mVcdFile, add_ln1_fu_738_p2, "add_ln1_fu_738_p2");
    sc_trace(mVcdFile, select_ln13_3_fu_763_p3, "select_ln13_3_fu_763_p3");
    sc_trace(mVcdFile, select_ln13_4_fu_770_p3, "select_ln13_4_fu_770_p3");
    sc_trace(mVcdFile, select_ln13_6_fu_784_p3, "select_ln13_6_fu_784_p3");
    sc_trace(mVcdFile, select_ln13_7_fu_791_p3, "select_ln13_7_fu_791_p3");
    sc_trace(mVcdFile, select_ln13_fu_805_p3, "select_ln13_fu_805_p3");
    sc_trace(mVcdFile, select_ln13_1_fu_812_p3, "select_ln13_1_fu_812_p3");
    sc_trace(mVcdFile, fval_fu_888_p14, "fval_fu_888_p14");
    sc_trace(mVcdFile, bitcast_ln39_fu_921_p1, "bitcast_ln39_fu_921_p1");
    sc_trace(mVcdFile, tmp_9_fu_925_p4, "tmp_9_fu_925_p4");
    sc_trace(mVcdFile, trunc_ln39_fu_935_p1, "trunc_ln39_fu_935_p1");
    sc_trace(mVcdFile, bitcast_ln39_1_fu_951_p1, "bitcast_ln39_1_fu_951_p1");
    sc_trace(mVcdFile, tmp_s_fu_954_p4, "tmp_s_fu_954_p4");
    sc_trace(mVcdFile, trunc_ln39_1_fu_964_p1, "trunc_ln39_1_fu_964_p1");
    sc_trace(mVcdFile, icmp_ln39_3_fu_978_p2, "icmp_ln39_3_fu_978_p2");
    sc_trace(mVcdFile, icmp_ln39_2_fu_972_p2, "icmp_ln39_2_fu_972_p2");
    sc_trace(mVcdFile, or_ln39_fu_968_p2, "or_ln39_fu_968_p2");
    sc_trace(mVcdFile, or_ln39_1_fu_984_p2, "or_ln39_1_fu_984_p2");
    sc_trace(mVcdFile, and_ln39_fu_990_p2, "and_ln39_fu_990_p2");
    sc_trace(mVcdFile, grp_fu_551_p2, "grp_fu_551_p2");
    sc_trace(mVcdFile, and_ln39_1_fu_996_p2, "and_ln39_1_fu_996_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_00001, "ap_block_pp0_stage2_00001");
    sc_trace(mVcdFile, ap_block_state15, "ap_block_state15");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, mul_ln1_fu_692_p10, "mul_ln1_fu_692_p10");
#endif

    }
    mHdltvinHandle.open("predict_ensemble.hdltvin.dat");
    mHdltvoutHandle.open("predict_ensemble.hdltvout.dat");
}

predict_ensemble::~predict_ensemble() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete LBoostTree_is_leaf_3_U;
    delete LBoostTree_is_leaf_0_U;
    delete LBoostTree_is_leaf_1_U;
    delete LBoostTree_is_leaf_2_U;
    delete LBoostTree_feature_i_U;
    delete LBoostTree_feature_i_3_U;
    delete LBoostTree_feature_i_2_U;
    delete LBoostTree_feature_i_1_U;
    delete LBoostTree_value_3_U;
    delete LBoostTree_value_0_U;
    delete LBoostTree_value_1_U;
    delete LBoostTree_value_2_U;
    delete LBoostTree_left_chil_3_U;
    delete LBoostTree_left_chil_2_U;
    delete LBoostTree_left_chil_1_U;
    delete LBoostTree_left_chil_U;
    delete LBoostTree_right_chi_3_U;
    delete LBoostTree_right_chi_2_U;
    delete LBoostTree_right_chi_1_U;
    delete LBoostTree_right_chi_U;
    delete predict_ensemble_CTRL_BUS_s_axi_U;
    delete predict_ensemble_vdy_U1;
    delete predict_ensemble_wdI_U2;
    delete predict_ensemble_xdS_U3;
    delete predict_ensemble_xdS_U4;
    delete predict_ensemble_yd2_U5;
}

void predict_ensemble::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void predict_ensemble::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_5;
}

void predict_ensemble::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state7.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_648_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state7.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state7.read() ^ ap_const_logic_1);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_648_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, node_is_leaf_reg_1319.read()))) {
        curren_0_reg_525 = select_ln39_fu_1002_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_648_p2.read()))) {
        curren_0_reg_525 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, node_is_leaf_reg_1319.read()))) {
        depth_0_reg_536 = depth_reg_1154.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_648_p2.read()))) {
        depth_0_reg_536 = ap_const_lv8_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        feature_stream_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_vld_out.read()))) {
            feature_stream_V_0_sel_rd =  (sc_logic) (~feature_stream_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        feature_stream_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_ack_in.read()))) {
            feature_stream_V_0_sel_wr =  (sc_logic) (~feature_stream_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        feature_stream_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(feature_stream_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(feature_stream_V_0_state.read(), ap_const_lv2_2)))) {
            feature_stream_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(feature_stream_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(feature_stream_V_0_state.read(), ap_const_lv2_1)))) {
            feature_stream_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(feature_stream_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(feature_stream_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(feature_stream_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_ack_out.read()))))) {
            feature_stream_V_0_state = ap_const_lv2_3;
        } else {
            feature_stream_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_566_p2.read()))) {
        i1_0_reg_514 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i1_0_reg_514 = i_1_reg_1109.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_503 = i_reg_1093.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_503 = ap_const_lv4_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        prediction_stream_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_vld_out.read()))) {
            prediction_stream_V_1_sel_rd =  (sc_logic) (~prediction_stream_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        prediction_stream_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_ack_in.read()))) {
            prediction_stream_V_1_sel_wr =  (sc_logic) (~prediction_stream_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        prediction_stream_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, prediction_stream_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, prediction_stream_V_1_state.read())))) {
            prediction_stream_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, prediction_stream_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, prediction_stream_V_1_state.read())))) {
            prediction_stream_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, prediction_stream_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, prediction_stream_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, prediction_stream_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_ack_out.read()))))) {
            prediction_stream_V_1_state = ap_const_lv2_3;
        } else {
            prediction_stream_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        tmp_17_fu_226 = sum_reg_1353.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_566_p2.read()))) {
        tmp_17_fu_226 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()))) {
        LBoostTree_left_chil_10_reg_1289 = LBoostTree_left_chil_1_q0.read();
        LBoostTree_left_chil_11_reg_1294 = LBoostTree_left_chil_q0.read();
        LBoostTree_left_chil_8_reg_1279 = LBoostTree_left_chil_3_q0.read();
        LBoostTree_left_chil_9_reg_1284 = LBoostTree_left_chil_2_q0.read();
        LBoostTree_right_chi_10_reg_1309 = LBoostTree_right_chi_1_q0.read();
        LBoostTree_right_chi_11_reg_1314 = LBoostTree_right_chi_q0.read();
        LBoostTree_right_chi_8_reg_1299 = LBoostTree_right_chi_3_q0.read();
        LBoostTree_right_chi_9_reg_1304 = LBoostTree_right_chi_2_q0.read();
        node_feature_index_V_reg_1267 = node_feature_index_V_fu_777_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        depth_reg_1154 = depth_fu_728_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_load_A.read())) {
        feature_stream_V_0_payload_A = feature_stream_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_load_B.read())) {
        feature_stream_V_0_payload_B = feature_stream_V_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        i_1_reg_1109 = i_1_fu_654_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())))) {
        i_reg_1093 = i_fu_572_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_648_p2.read()))) {
        icmp_ln13_1_reg_1132 = icmp_ln13_1_fu_704_p2.read();
        icmp_ln13_2_reg_1137 = icmp_ln13_2_fu_710_p2.read();
        icmp_ln13_reg_1125 = icmp_ln13_fu_698_p2.read();
        mul_ln1_reg_1120 = mul_ln1_fu_692_p2.read();
        or_ln13_reg_1144 = or_ln13_fu_716_p2.read();
        zext_ln5_reg_1114 = zext_ln5_fu_680_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln30_reg_1150 = icmp_ln30_fu_722_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, node_is_leaf_fu_819_p3.read()))) {
        icmp_ln39_1_reg_1343 = icmp_ln39_1_fu_945_p2.read();
        icmp_ln39_reg_1338 = icmp_ln39_fu_939_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        node_is_leaf_reg_1319 = node_is_leaf_fu_819_p3.read();
        node_left_child_V_reg_1323 = node_left_child_V_fu_826_p6.read();
        node_right_child_V_reg_1328 = node_right_child_V_fu_835_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()))) {
        node_value_reg_1272 = node_value_fu_798_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_load_A.read())) {
        prediction_stream_V_1_payload_A = tmp_17_fu_226.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_load_B.read())) {
        prediction_stream_V_1_payload_B = tmp_17_fu_226.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sum_reg_1353 = grp_fu_547_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_6))) {
        tmp_10_fu_198 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_7))) {
        tmp_11_fu_202 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_8))) {
        tmp_12_fu_206 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_9))) {
        tmp_13_fu_210 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_A))) {
        tmp_14_fu_214 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_B))) {
        tmp_15_fu_218 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && ((((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && 
     esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_F)) || 
    (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && 
     esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_E))) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && 
    esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_D))) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && 
   esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_C))))) {
        tmp_16_fu_222 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_1))) {
        tmp_2_fu_178 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_2))) {
        tmp_3_fu_182 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_3))) {
        tmp_5_fu_186 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_4))) {
        tmp_7_fu_190 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_507_p4.read(), ap_const_lv4_5))) {
        tmp_8_fu_194 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,4,4>(ap_const_lv4_0, ap_phi_mux_i_0_phi_fu_507_p4.read()))) {
        tmp_fu_174 = feature_stream_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_fu_722_p2.read()))) {
        zext_ln1_2_reg_1159 = zext_ln1_2_fu_743_p1.read();
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_1_address0() {
    LBoostTree_feature_i_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_feature_i_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_2_address0() {
    LBoostTree_feature_i_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_feature_i_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_3_address0() {
    LBoostTree_feature_i_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_feature_i_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_address0() {
    LBoostTree_feature_i_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_feature_i_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_0_address0() {
    LBoostTree_is_leaf_0_address0 =  (sc_lv<12>) (zext_ln1_2_reg_1159.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        LBoostTree_is_leaf_0_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_0_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_1_address0() {
    LBoostTree_is_leaf_1_address0 =  (sc_lv<12>) (zext_ln1_2_reg_1159.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        LBoostTree_is_leaf_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_2_address0() {
    LBoostTree_is_leaf_2_address0 =  (sc_lv<12>) (zext_ln1_2_reg_1159.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        LBoostTree_is_leaf_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_3_address0() {
    LBoostTree_is_leaf_3_address0 =  (sc_lv<12>) (zext_ln1_2_reg_1159.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        LBoostTree_is_leaf_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_1_address0() {
    LBoostTree_left_chil_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_left_chil_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_2_address0() {
    LBoostTree_left_chil_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_left_chil_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_3_address0() {
    LBoostTree_left_chil_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_left_chil_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_address0() {
    LBoostTree_left_chil_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_left_chil_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_1_address0() {
    LBoostTree_right_chi_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_right_chi_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_2_address0() {
    LBoostTree_right_chi_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_right_chi_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_3_address0() {
    LBoostTree_right_chi_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_right_chi_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_address0() {
    LBoostTree_right_chi_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_right_chi_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_0_address0() {
    LBoostTree_value_0_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_value_0_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_0_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_1_address0() {
    LBoostTree_value_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_value_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_2_address0() {
    LBoostTree_value_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_value_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_3_address0() {
    LBoostTree_value_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_743_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        LBoostTree_value_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_add_ln1_fu_738_p2() {
    add_ln1_fu_738_p2 = (!mul_ln1_reg_1120.read().is_01() || !zext_ln1_1_fu_734_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(mul_ln1_reg_1120.read()) + sc_biguint<12>(zext_ln1_1_fu_734_p1.read()));
}

void predict_ensemble::thread_and_ln39_1_fu_996_p2() {
    and_ln39_1_fu_996_p2 = (and_ln39_fu_990_p2.read() & grp_fu_551_p2.read());
}

void predict_ensemble::thread_and_ln39_fu_990_p2() {
    and_ln39_fu_990_p2 = (or_ln39_fu_968_p2.read() & or_ln39_1_fu_984_p2.read());
}

void predict_ensemble::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[4];
}

void predict_ensemble::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[5];
}

void predict_ensemble::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[6];
}

void predict_ensemble::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void predict_ensemble::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[10];
}

void predict_ensemble::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[11];
}

void predict_ensemble::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[13];
}

void predict_ensemble::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void predict_ensemble::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void predict_ensemble::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void predict_ensemble::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void predict_ensemble::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage2_00001() {
    ap_block_pp0_stage2_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_state15() {
    ap_block_state15 = (esl_seteq<1,2,2>(ap_const_lv2_1, prediction_stream_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, prediction_stream_V_1_state.read())));
}

void predict_ensemble::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read()));
}

void predict_ensemble::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_648_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_1_ack_in.read()));
}

void predict_ensemble::thread_ap_block_state5_pp0_stage0_iter0() {
    ap_block_state5_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_state6_pp0_stage1_iter0() {
    ap_block_state6_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_state7_pp0_stage2_iter0() {
    ap_block_state7_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_block_state8_pp0_stage0_iter1() {
    ap_block_state8_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void predict_ensemble::thread_ap_condition_pp0_exit_iter0_state7() {
    if ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran7to9_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_reg_1150.read()))) {
        ap_condition_pp0_exit_iter0_state7 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state7 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, prediction_stream_V_1_state.read()) || esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, prediction_stream_V_1_state.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void predict_ensemble::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_phi_mux_curren_0_phi_fu_529_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, node_is_leaf_reg_1319.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_curren_0_phi_fu_529_p4 = select_ln39_fu_1002_p3.read();
    } else {
        ap_phi_mux_curren_0_phi_fu_529_p4 = curren_0_reg_525.read();
    }
}

void predict_ensemble::thread_ap_phi_mux_depth_0_phi_fu_540_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, node_is_leaf_reg_1319.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_depth_0_phi_fu_540_p4 = depth_reg_1154.read();
    } else {
        ap_phi_mux_depth_0_phi_fu_540_p4 = depth_0_reg_536.read();
    }
}

void predict_ensemble::thread_ap_phi_mux_i_0_phi_fu_507_p4() {
    ap_phi_mux_i_0_phi_fu_507_p4 = i_0_reg_503.read();
}

void predict_ensemble::thread_ap_predicate_tran7to9_state7() {
    ap_predicate_tran7to9_state7 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_1150.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, node_is_leaf_fu_819_p3.read()));
}

void predict_ensemble::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, prediction_stream_V_1_state.read()) || esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, prediction_stream_V_1_state.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void predict_ensemble::thread_bitcast_ln39_1_fu_951_p1() {
    bitcast_ln39_1_fu_951_p1 = node_value_reg_1272.read();
}

void predict_ensemble::thread_bitcast_ln39_fu_921_p1() {
    bitcast_ln39_fu_921_p1 = fval_fu_888_p15.read();
}

void predict_ensemble::thread_depth_fu_728_p2() {
    depth_fu_728_p2 = (!ap_phi_mux_depth_0_phi_fu_540_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ap_phi_mux_depth_0_phi_fu_540_p4.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void predict_ensemble::thread_feature_stream_V_0_ack_in() {
    feature_stream_V_0_ack_in = feature_stream_V_0_state.read()[1];
}

void predict_ensemble::thread_feature_stream_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())))) {
        feature_stream_V_0_ack_out = ap_const_logic_1;
    } else {
        feature_stream_V_0_ack_out = ap_const_logic_0;
    }
}

void predict_ensemble::thread_feature_stream_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, feature_stream_V_0_sel.read())) {
        feature_stream_V_0_data_out = feature_stream_V_0_payload_B.read();
    } else {
        feature_stream_V_0_data_out = feature_stream_V_0_payload_A.read();
    }
}

void predict_ensemble::thread_feature_stream_V_0_load_A() {
    feature_stream_V_0_load_A = (feature_stream_V_0_state_cmp_full.read() & ~feature_stream_V_0_sel_wr.read());
}

void predict_ensemble::thread_feature_stream_V_0_load_B() {
    feature_stream_V_0_load_B = (feature_stream_V_0_sel_wr.read() & feature_stream_V_0_state_cmp_full.read());
}

void predict_ensemble::thread_feature_stream_V_0_sel() {
    feature_stream_V_0_sel = feature_stream_V_0_sel_rd.read();
}

void predict_ensemble::thread_feature_stream_V_0_state_cmp_full() {
    feature_stream_V_0_state_cmp_full =  (sc_logic) ((!feature_stream_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(feature_stream_V_0_state.read() != ap_const_lv2_1))[0];
}

void predict_ensemble::thread_feature_stream_V_0_vld_in() {
    feature_stream_V_0_vld_in = feature_stream_V_TVALID.read();
}

void predict_ensemble::thread_feature_stream_V_0_vld_out() {
    feature_stream_V_0_vld_out = feature_stream_V_0_state.read()[0];
}

void predict_ensemble::thread_feature_stream_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()))) {
        feature_stream_V_TDATA_blk_n = feature_stream_V_0_state.read()[0];
    } else {
        feature_stream_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void predict_ensemble::thread_feature_stream_V_TREADY() {
    feature_stream_V_TREADY = feature_stream_V_0_state.read()[1];
}

void predict_ensemble::thread_fval_fu_888_p14() {
    fval_fu_888_p14 = (!ap_const_lv4_F.is_01() || !node_feature_index_V_reg_1267.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_F) + sc_biguint<4>(node_feature_index_V_reg_1267.read()));
}

void predict_ensemble::thread_i_1_fu_654_p2() {
    i_1_fu_654_p2 = (!i1_0_reg_514.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i1_0_reg_514.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void predict_ensemble::thread_i_fu_572_p2() {
    i_fu_572_p2 = (!i_0_reg_503.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_503.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void predict_ensemble::thread_icmp_ln13_1_fu_704_p2() {
    icmp_ln13_1_fu_704_p2 = (!trunc_ln5_1_fu_670_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln5_1_fu_670_p4.read() == ap_const_lv2_1);
}

void predict_ensemble::thread_icmp_ln13_2_fu_710_p2() {
    icmp_ln13_2_fu_710_p2 = (!trunc_ln5_1_fu_670_p4.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln5_1_fu_670_p4.read() == ap_const_lv2_2);
}

void predict_ensemble::thread_icmp_ln13_fu_698_p2() {
    icmp_ln13_fu_698_p2 = (!trunc_ln5_1_fu_670_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln5_1_fu_670_p4.read() == ap_const_lv2_0);
}

void predict_ensemble::thread_icmp_ln20_fu_566_p2() {
    icmp_ln20_fu_566_p2 = (!i_0_reg_503.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_503.read() == ap_const_lv4_D);
}

void predict_ensemble::thread_icmp_ln27_fu_648_p2() {
    icmp_ln27_fu_648_p2 = (!i1_0_reg_514.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_514.read() == ap_const_lv7_40);
}

void predict_ensemble::thread_icmp_ln30_fu_722_p2() {
    icmp_ln30_fu_722_p2 = (!ap_phi_mux_depth_0_phi_fu_540_p4.read().is_01() || !ap_const_lv8_C4.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_depth_0_phi_fu_540_p4.read() == ap_const_lv8_C4);
}

void predict_ensemble::thread_icmp_ln39_1_fu_945_p2() {
    icmp_ln39_1_fu_945_p2 = (!trunc_ln39_fu_935_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln39_fu_935_p1.read() == ap_const_lv23_0);
}

void predict_ensemble::thread_icmp_ln39_2_fu_972_p2() {
    icmp_ln39_2_fu_972_p2 = (!tmp_s_fu_954_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_s_fu_954_p4.read() != ap_const_lv8_FF);
}

void predict_ensemble::thread_icmp_ln39_3_fu_978_p2() {
    icmp_ln39_3_fu_978_p2 = (!trunc_ln39_1_fu_964_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln39_1_fu_964_p1.read() == ap_const_lv23_0);
}

void predict_ensemble::thread_icmp_ln39_fu_939_p2() {
    icmp_ln39_fu_939_p2 = (!tmp_9_fu_925_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_925_p4.read() != ap_const_lv8_FF);
}

void predict_ensemble::thread_lshr_ln5_fu_660_p4() {
    lshr_ln5_fu_660_p4 = i1_0_reg_514.read().range(6, 4);
}

void predict_ensemble::thread_mul_ln1_fu_692_p1() {
    mul_ln1_fu_692_p1 =  (sc_lv<4>) (mul_ln1_fu_692_p10.read());
}

void predict_ensemble::thread_mul_ln1_fu_692_p10() {
    mul_ln1_fu_692_p10 = esl_zext<12,4>(trunc_ln1_fu_684_p1.read());
}

void predict_ensemble::thread_mul_ln1_fu_692_p2() {
    mul_ln1_fu_692_p2 = (!ap_const_lv12_C4.is_01() || !mul_ln1_fu_692_p1.read().is_01())? sc_lv<12>(): sc_biguint<12>(ap_const_lv12_C4) * sc_biguint<4>(mul_ln1_fu_692_p1.read());
}

void predict_ensemble::thread_node_feature_index_V_fu_777_p3() {
    node_feature_index_V_fu_777_p3 = (!or_ln13_reg_1144.read()[0].is_01())? sc_lv<4>(): ((or_ln13_reg_1144.read()[0].to_bool())? select_ln13_3_fu_763_p3.read(): select_ln13_4_fu_770_p3.read());
}

void predict_ensemble::thread_node_is_leaf_fu_819_p3() {
    node_is_leaf_fu_819_p3 = (!or_ln13_reg_1144.read()[0].is_01())? sc_lv<1>(): ((or_ln13_reg_1144.read()[0].to_bool())? select_ln13_fu_805_p3.read(): select_ln13_1_fu_812_p3.read());
}

void predict_ensemble::thread_node_value_fu_798_p3() {
    node_value_fu_798_p3 = (!icmp_ln13_2_reg_1137.read()[0].is_01())? sc_lv<32>(): ((icmp_ln13_2_reg_1137.read()[0].to_bool())? LBoostTree_value_2_q0.read(): select_ln13_7_fu_791_p3.read());
}

void predict_ensemble::thread_or_ln13_fu_716_p2() {
    or_ln13_fu_716_p2 = (icmp_ln13_2_fu_710_p2.read() | icmp_ln13_1_fu_704_p2.read());
}

void predict_ensemble::thread_or_ln39_1_fu_984_p2() {
    or_ln39_1_fu_984_p2 = (icmp_ln39_3_fu_978_p2.read() | icmp_ln39_2_fu_972_p2.read());
}

void predict_ensemble::thread_or_ln39_fu_968_p2() {
    or_ln39_fu_968_p2 = (icmp_ln39_1_reg_1343.read() | icmp_ln39_reg_1338.read());
}

void predict_ensemble::thread_prediction_stream_V_1_ack_in() {
    prediction_stream_V_1_ack_in = prediction_stream_V_1_state.read()[1];
}

void predict_ensemble::thread_prediction_stream_V_1_ack_out() {
    prediction_stream_V_1_ack_out = prediction_stream_V_TREADY.read();
}

void predict_ensemble::thread_prediction_stream_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, prediction_stream_V_1_sel.read())) {
        prediction_stream_V_1_data_out = prediction_stream_V_1_payload_B.read();
    } else {
        prediction_stream_V_1_data_out = prediction_stream_V_1_payload_A.read();
    }
}

void predict_ensemble::thread_prediction_stream_V_1_load_A() {
    prediction_stream_V_1_load_A = (prediction_stream_V_1_state_cmp_full.read() & ~prediction_stream_V_1_sel_wr.read());
}

void predict_ensemble::thread_prediction_stream_V_1_load_B() {
    prediction_stream_V_1_load_B = (prediction_stream_V_1_sel_wr.read() & prediction_stream_V_1_state_cmp_full.read());
}

void predict_ensemble::thread_prediction_stream_V_1_sel() {
    prediction_stream_V_1_sel = prediction_stream_V_1_sel_rd.read();
}

void predict_ensemble::thread_prediction_stream_V_1_state_cmp_full() {
    prediction_stream_V_1_state_cmp_full =  (sc_logic) ((!prediction_stream_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(prediction_stream_V_1_state.read() != ap_const_lv2_1))[0];
}

void predict_ensemble::thread_prediction_stream_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_648_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        prediction_stream_V_1_vld_in = ap_const_logic_1;
    } else {
        prediction_stream_V_1_vld_in = ap_const_logic_0;
    }
}

void predict_ensemble::thread_prediction_stream_V_1_vld_out() {
    prediction_stream_V_1_vld_out = prediction_stream_V_1_state.read()[0];
}

void predict_ensemble::thread_prediction_stream_V_TDATA() {
    prediction_stream_V_TDATA = prediction_stream_V_1_data_out.read();
}

void predict_ensemble::thread_prediction_stream_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_648_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        prediction_stream_V_TDATA_blk_n = prediction_stream_V_1_state.read()[1];
    } else {
        prediction_stream_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void predict_ensemble::thread_prediction_stream_V_TVALID() {
    prediction_stream_V_TVALID = prediction_stream_V_1_state.read()[0];
}

void predict_ensemble::thread_select_ln13_1_fu_812_p3() {
    select_ln13_1_fu_812_p3 = (!icmp_ln13_reg_1125.read()[0].is_01())? sc_lv<1>(): ((icmp_ln13_reg_1125.read()[0].to_bool())? LBoostTree_is_leaf_0_q0.read(): LBoostTree_is_leaf_3_q0.read());
}

void predict_ensemble::thread_select_ln13_3_fu_763_p3() {
    select_ln13_3_fu_763_p3 = (!icmp_ln13_2_reg_1137.read()[0].is_01())? sc_lv<4>(): ((icmp_ln13_2_reg_1137.read()[0].to_bool())? LBoostTree_feature_i_1_q0.read(): LBoostTree_feature_i_2_q0.read());
}

void predict_ensemble::thread_select_ln13_4_fu_770_p3() {
    select_ln13_4_fu_770_p3 = (!icmp_ln13_reg_1125.read()[0].is_01())? sc_lv<4>(): ((icmp_ln13_reg_1125.read()[0].to_bool())? LBoostTree_feature_i_3_q0.read(): LBoostTree_feature_i_q0.read());
}

void predict_ensemble::thread_select_ln13_6_fu_784_p3() {
    select_ln13_6_fu_784_p3 = (!icmp_ln13_reg_1125.read()[0].is_01())? sc_lv<32>(): ((icmp_ln13_reg_1125.read()[0].to_bool())? LBoostTree_value_0_q0.read(): LBoostTree_value_3_q0.read());
}

void predict_ensemble::thread_select_ln13_7_fu_791_p3() {
    select_ln13_7_fu_791_p3 = (!icmp_ln13_1_reg_1132.read()[0].is_01())? sc_lv<32>(): ((icmp_ln13_1_reg_1132.read()[0].to_bool())? LBoostTree_value_1_q0.read(): select_ln13_6_fu_784_p3.read());
}

void predict_ensemble::thread_select_ln13_fu_805_p3() {
    select_ln13_fu_805_p3 = (!icmp_ln13_2_reg_1137.read()[0].is_01())? sc_lv<1>(): ((icmp_ln13_2_reg_1137.read()[0].to_bool())? LBoostTree_is_leaf_2_q0.read(): LBoostTree_is_leaf_1_q0.read());
}

void predict_ensemble::thread_select_ln39_fu_1002_p3() {
    select_ln39_fu_1002_p3 = (!and_ln39_1_fu_996_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln39_1_fu_996_p2.read()[0].to_bool())? node_left_child_V_reg_1323.read(): node_right_child_V_reg_1328.read());
}

void predict_ensemble::thread_tmp_9_fu_925_p4() {
    tmp_9_fu_925_p4 = bitcast_ln39_fu_921_p1.read().range(30, 23);
}

void predict_ensemble::thread_tmp_s_fu_954_p4() {
    tmp_s_fu_954_p4 = bitcast_ln39_1_fu_951_p1.read().range(30, 23);
}

void predict_ensemble::thread_trunc_ln1_fu_684_p1() {
    trunc_ln1_fu_684_p1 = i1_0_reg_514.read().range(4-1, 0);
}

void predict_ensemble::thread_trunc_ln39_1_fu_964_p1() {
    trunc_ln39_1_fu_964_p1 = bitcast_ln39_1_fu_951_p1.read().range(23-1, 0);
}

void predict_ensemble::thread_trunc_ln39_fu_935_p1() {
    trunc_ln39_fu_935_p1 = bitcast_ln39_fu_921_p1.read().range(23-1, 0);
}

void predict_ensemble::thread_trunc_ln5_1_fu_670_p4() {
    trunc_ln5_1_fu_670_p4 = i1_0_reg_514.read().range(5, 4);
}

void predict_ensemble::thread_zext_ln1_1_fu_734_p1() {
    zext_ln1_1_fu_734_p1 = esl_zext<12,8>(ap_phi_mux_curren_0_phi_fu_529_p4.read());
}

void predict_ensemble::thread_zext_ln1_2_fu_743_p1() {
    zext_ln1_2_fu_743_p1 = esl_zext<64,12>(add_ln1_fu_738_p2.read());
}

void predict_ensemble::thread_zext_ln5_fu_680_p1() {
    zext_ln5_fu_680_p1 = esl_zext<32,3>(lshr_ln5_fu_660_p4.read());
}

void predict_ensemble::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_566_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_566_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, feature_stream_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_648_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_648_p2.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran7to9_state7.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_reg_1150.read()))))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_reg_1150.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran7to9_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, prediction_stream_V_1_state.read()) || esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, prediction_stream_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, prediction_stream_V_1_state.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXX";
            break;
    }
}

void predict_ensemble::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"feature_stream_V_TDATA\" :  \"" << feature_stream_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"feature_stream_V_TVALID\" :  \"" << feature_stream_V_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"feature_stream_V_TREADY\" :  \"" << feature_stream_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_stream_V_TDATA\" :  \"" << prediction_stream_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_stream_V_TVALID\" :  \"" << prediction_stream_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"prediction_stream_V_TREADY\" :  \"" << prediction_stream_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

