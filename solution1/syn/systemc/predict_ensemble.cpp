// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "predict_ensemble.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic predict_ensemble::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic predict_ensemble::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> predict_ensemble::ap_ST_fsm_state1 = "1";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state2 = "10";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state3 = "100";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state4 = "1000";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state5 = "10000";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state6 = "100000";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> predict_ensemble::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> predict_ensemble::ap_const_lv32_0 = "00000000000000000000000000000000";
const int predict_ensemble::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> predict_ensemble::ap_const_lv32_1 = "1";
const sc_lv<1> predict_ensemble::ap_const_lv1_0 = "0";
const sc_lv<32> predict_ensemble::ap_const_lv32_2 = "10";
const sc_lv<1> predict_ensemble::ap_const_lv1_1 = "1";
const sc_lv<32> predict_ensemble::ap_const_lv32_3 = "11";
const sc_lv<32> predict_ensemble::ap_const_lv32_4 = "100";
const sc_lv<32> predict_ensemble::ap_const_lv32_5 = "101";
const sc_lv<32> predict_ensemble::ap_const_lv32_9 = "1001";
const sc_lv<7> predict_ensemble::ap_const_lv7_0 = "0000000";
const sc_lv<8> predict_ensemble::ap_const_lv8_0 = "00000000";
const sc_lv<32> predict_ensemble::ap_const_lv32_6 = "110";
const sc_lv<7> predict_ensemble::ap_const_lv7_40 = "1000000";
const sc_lv<7> predict_ensemble::ap_const_lv7_1 = "1";
const sc_lv<12> predict_ensemble::ap_const_lv12_C4 = "11000100";
const sc_lv<2> predict_ensemble::ap_const_lv2_2 = "10";
const sc_lv<2> predict_ensemble::ap_const_lv2_0 = "00";
const sc_lv<2> predict_ensemble::ap_const_lv2_1 = "1";
const sc_lv<5> predict_ensemble::ap_const_lv5_1F = "11111";
const sc_lv<32> predict_ensemble::ap_const_lv32_17 = "10111";
const sc_lv<32> predict_ensemble::ap_const_lv32_1E = "11110";
const sc_lv<8> predict_ensemble::ap_const_lv8_FF = "11111111";
const sc_lv<23> predict_ensemble::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> predict_ensemble::ap_const_lv5_5 = "101";
const bool predict_ensemble::ap_const_boolean_1 = true;

predict_ensemble::predict_ensemble(sc_module_name name) : sc_module(name), mVcdFile(0) {
    LBoostTree_is_leaf_3_U = new predict_ensemble_bkb("LBoostTree_is_leaf_3_U");
    LBoostTree_is_leaf_3_U->clk(ap_clk);
    LBoostTree_is_leaf_3_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_3_U->address0(LBoostTree_is_leaf_3_address0);
    LBoostTree_is_leaf_3_U->ce0(LBoostTree_is_leaf_3_ce0);
    LBoostTree_is_leaf_3_U->q0(LBoostTree_is_leaf_3_q0);
    LBoostTree_is_leaf_0_U = new predict_ensemble_cud("LBoostTree_is_leaf_0_U");
    LBoostTree_is_leaf_0_U->clk(ap_clk);
    LBoostTree_is_leaf_0_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_0_U->address0(LBoostTree_is_leaf_0_address0);
    LBoostTree_is_leaf_0_U->ce0(LBoostTree_is_leaf_0_ce0);
    LBoostTree_is_leaf_0_U->q0(LBoostTree_is_leaf_0_q0);
    LBoostTree_is_leaf_1_U = new predict_ensemble_dEe("LBoostTree_is_leaf_1_U");
    LBoostTree_is_leaf_1_U->clk(ap_clk);
    LBoostTree_is_leaf_1_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_1_U->address0(LBoostTree_is_leaf_1_address0);
    LBoostTree_is_leaf_1_U->ce0(LBoostTree_is_leaf_1_ce0);
    LBoostTree_is_leaf_1_U->q0(LBoostTree_is_leaf_1_q0);
    LBoostTree_is_leaf_2_U = new predict_ensemble_eOg("LBoostTree_is_leaf_2_U");
    LBoostTree_is_leaf_2_U->clk(ap_clk);
    LBoostTree_is_leaf_2_U->reset(ap_rst_n_inv);
    LBoostTree_is_leaf_2_U->address0(LBoostTree_is_leaf_2_address0);
    LBoostTree_is_leaf_2_U->ce0(LBoostTree_is_leaf_2_ce0);
    LBoostTree_is_leaf_2_U->q0(LBoostTree_is_leaf_2_q0);
    LBoostTree_feature_i_U = new predict_ensemble_fYi("LBoostTree_feature_i_U");
    LBoostTree_feature_i_U->clk(ap_clk);
    LBoostTree_feature_i_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_U->address0(LBoostTree_feature_i_address0);
    LBoostTree_feature_i_U->ce0(LBoostTree_feature_i_ce0);
    LBoostTree_feature_i_U->q0(LBoostTree_feature_i_q0);
    LBoostTree_feature_i_3_U = new predict_ensemble_g8j("LBoostTree_feature_i_3_U");
    LBoostTree_feature_i_3_U->clk(ap_clk);
    LBoostTree_feature_i_3_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_3_U->address0(LBoostTree_feature_i_3_address0);
    LBoostTree_feature_i_3_U->ce0(LBoostTree_feature_i_3_ce0);
    LBoostTree_feature_i_3_U->q0(LBoostTree_feature_i_3_q0);
    LBoostTree_feature_i_2_U = new predict_ensemble_hbi("LBoostTree_feature_i_2_U");
    LBoostTree_feature_i_2_U->clk(ap_clk);
    LBoostTree_feature_i_2_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_2_U->address0(LBoostTree_feature_i_2_address0);
    LBoostTree_feature_i_2_U->ce0(LBoostTree_feature_i_2_ce0);
    LBoostTree_feature_i_2_U->q0(LBoostTree_feature_i_2_q0);
    LBoostTree_feature_i_1_U = new predict_ensemble_ibs("LBoostTree_feature_i_1_U");
    LBoostTree_feature_i_1_U->clk(ap_clk);
    LBoostTree_feature_i_1_U->reset(ap_rst_n_inv);
    LBoostTree_feature_i_1_U->address0(LBoostTree_feature_i_1_address0);
    LBoostTree_feature_i_1_U->ce0(LBoostTree_feature_i_1_ce0);
    LBoostTree_feature_i_1_U->q0(LBoostTree_feature_i_1_q0);
    LBoostTree_value_3_U = new predict_ensemble_jbC("LBoostTree_value_3_U");
    LBoostTree_value_3_U->clk(ap_clk);
    LBoostTree_value_3_U->reset(ap_rst_n_inv);
    LBoostTree_value_3_U->address0(LBoostTree_value_3_address0);
    LBoostTree_value_3_U->ce0(LBoostTree_value_3_ce0);
    LBoostTree_value_3_U->q0(LBoostTree_value_3_q0);
    LBoostTree_value_0_U = new predict_ensemble_kbM("LBoostTree_value_0_U");
    LBoostTree_value_0_U->clk(ap_clk);
    LBoostTree_value_0_U->reset(ap_rst_n_inv);
    LBoostTree_value_0_U->address0(LBoostTree_value_0_address0);
    LBoostTree_value_0_U->ce0(LBoostTree_value_0_ce0);
    LBoostTree_value_0_U->q0(LBoostTree_value_0_q0);
    LBoostTree_value_1_U = new predict_ensemble_lbW("LBoostTree_value_1_U");
    LBoostTree_value_1_U->clk(ap_clk);
    LBoostTree_value_1_U->reset(ap_rst_n_inv);
    LBoostTree_value_1_U->address0(LBoostTree_value_1_address0);
    LBoostTree_value_1_U->ce0(LBoostTree_value_1_ce0);
    LBoostTree_value_1_U->q0(LBoostTree_value_1_q0);
    LBoostTree_value_2_U = new predict_ensemble_mb6("LBoostTree_value_2_U");
    LBoostTree_value_2_U->clk(ap_clk);
    LBoostTree_value_2_U->reset(ap_rst_n_inv);
    LBoostTree_value_2_U->address0(LBoostTree_value_2_address0);
    LBoostTree_value_2_U->ce0(LBoostTree_value_2_ce0);
    LBoostTree_value_2_U->q0(LBoostTree_value_2_q0);
    LBoostTree_left_chil_3_U = new predict_ensemble_ncg("LBoostTree_left_chil_3_U");
    LBoostTree_left_chil_3_U->clk(ap_clk);
    LBoostTree_left_chil_3_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_3_U->address0(LBoostTree_left_chil_3_address0);
    LBoostTree_left_chil_3_U->ce0(LBoostTree_left_chil_3_ce0);
    LBoostTree_left_chil_3_U->q0(LBoostTree_left_chil_3_q0);
    LBoostTree_left_chil_2_U = new predict_ensemble_ocq("LBoostTree_left_chil_2_U");
    LBoostTree_left_chil_2_U->clk(ap_clk);
    LBoostTree_left_chil_2_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_2_U->address0(LBoostTree_left_chil_2_address0);
    LBoostTree_left_chil_2_U->ce0(LBoostTree_left_chil_2_ce0);
    LBoostTree_left_chil_2_U->q0(LBoostTree_left_chil_2_q0);
    LBoostTree_left_chil_1_U = new predict_ensemble_pcA("LBoostTree_left_chil_1_U");
    LBoostTree_left_chil_1_U->clk(ap_clk);
    LBoostTree_left_chil_1_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_1_U->address0(LBoostTree_left_chil_1_address0);
    LBoostTree_left_chil_1_U->ce0(LBoostTree_left_chil_1_ce0);
    LBoostTree_left_chil_1_U->q0(LBoostTree_left_chil_1_q0);
    LBoostTree_left_chil_U = new predict_ensemble_qcK("LBoostTree_left_chil_U");
    LBoostTree_left_chil_U->clk(ap_clk);
    LBoostTree_left_chil_U->reset(ap_rst_n_inv);
    LBoostTree_left_chil_U->address0(LBoostTree_left_chil_address0);
    LBoostTree_left_chil_U->ce0(LBoostTree_left_chil_ce0);
    LBoostTree_left_chil_U->q0(LBoostTree_left_chil_q0);
    LBoostTree_right_chi_3_U = new predict_ensemble_rcU("LBoostTree_right_chi_3_U");
    LBoostTree_right_chi_3_U->clk(ap_clk);
    LBoostTree_right_chi_3_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_3_U->address0(LBoostTree_right_chi_3_address0);
    LBoostTree_right_chi_3_U->ce0(LBoostTree_right_chi_3_ce0);
    LBoostTree_right_chi_3_U->q0(LBoostTree_right_chi_3_q0);
    LBoostTree_right_chi_2_U = new predict_ensemble_sc4("LBoostTree_right_chi_2_U");
    LBoostTree_right_chi_2_U->clk(ap_clk);
    LBoostTree_right_chi_2_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_2_U->address0(LBoostTree_right_chi_2_address0);
    LBoostTree_right_chi_2_U->ce0(LBoostTree_right_chi_2_ce0);
    LBoostTree_right_chi_2_U->q0(LBoostTree_right_chi_2_q0);
    LBoostTree_right_chi_1_U = new predict_ensemble_tde("LBoostTree_right_chi_1_U");
    LBoostTree_right_chi_1_U->clk(ap_clk);
    LBoostTree_right_chi_1_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_1_U->address0(LBoostTree_right_chi_1_address0);
    LBoostTree_right_chi_1_U->ce0(LBoostTree_right_chi_1_ce0);
    LBoostTree_right_chi_1_U->q0(LBoostTree_right_chi_1_q0);
    LBoostTree_right_chi_U = new predict_ensemble_udo("LBoostTree_right_chi_U");
    LBoostTree_right_chi_U->clk(ap_clk);
    LBoostTree_right_chi_U->reset(ap_rst_n_inv);
    LBoostTree_right_chi_U->address0(LBoostTree_right_chi_address0);
    LBoostTree_right_chi_U->ce0(LBoostTree_right_chi_ce0);
    LBoostTree_right_chi_U->q0(LBoostTree_right_chi_q0);
    predict_ensemble_CTRL_BUS_s_axi_U = new predict_ensemble_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("predict_ensemble_CTRL_BUS_s_axi_U");
    predict_ensemble_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    predict_ensemble_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    predict_ensemble_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    predict_ensemble_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    predict_ensemble_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    predict_ensemble_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    predict_ensemble_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    predict_ensemble_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    predict_ensemble_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    predict_ensemble_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    predict_ensemble_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    predict_ensemble_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_start(ap_start);
    predict_ensemble_CTRL_BUS_s_axi_U->interrupt(interrupt);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_done(ap_done);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    predict_ensemble_CTRL_BUS_s_axi_U->ap_return(sum_0_reg_395);
    predict_ensemble_vdy_U1 = new predict_ensemble_vdy<1,4,32,32,32>("predict_ensemble_vdy_U1");
    predict_ensemble_vdy_U1->clk(ap_clk);
    predict_ensemble_vdy_U1->reset(ap_rst_n_inv);
    predict_ensemble_vdy_U1->din0(sum_0_reg_395);
    predict_ensemble_vdy_U1->din1(node_value_reg_882);
    predict_ensemble_vdy_U1->ce(ap_var_for_const0);
    predict_ensemble_vdy_U1->dout(grp_fu_429_p2);
    predict_ensemble_wdI_U2 = new predict_ensemble_wdI<1,2,32,32,1>("predict_ensemble_wdI_U2");
    predict_ensemble_wdI_U2->clk(ap_clk);
    predict_ensemble_wdI_U2->reset(ap_rst_n_inv);
    predict_ensemble_wdI_U2->din0(features_q0);
    predict_ensemble_wdI_U2->din1(node_value_reg_882);
    predict_ensemble_wdI_U2->ce(ap_var_for_const0);
    predict_ensemble_wdI_U2->opcode(ap_var_for_const1);
    predict_ensemble_wdI_U2->dout(grp_fu_434_p2);
    predict_ensemble_xdS_U3 = new predict_ensemble_xdS<1,1,8,8,8,8,32,8>("predict_ensemble_xdS_U3");
    predict_ensemble_xdS_U3->din0(LBoostTree_left_chil_3_q0);
    predict_ensemble_xdS_U3->din1(LBoostTree_left_chil_2_q0);
    predict_ensemble_xdS_U3->din2(LBoostTree_left_chil_1_q0);
    predict_ensemble_xdS_U3->din3(LBoostTree_left_chil_q0);
    predict_ensemble_xdS_U3->din4(zext_ln5_reg_743);
    predict_ensemble_xdS_U3->dout(node_left_child_V_fu_609_p6);
    predict_ensemble_xdS_U4 = new predict_ensemble_xdS<1,1,8,8,8,8,32,8>("predict_ensemble_xdS_U4");
    predict_ensemble_xdS_U4->din0(LBoostTree_right_chi_3_q0);
    predict_ensemble_xdS_U4->din1(LBoostTree_right_chi_2_q0);
    predict_ensemble_xdS_U4->din2(LBoostTree_right_chi_1_q0);
    predict_ensemble_xdS_U4->din3(LBoostTree_right_chi_q0);
    predict_ensemble_xdS_U4->din4(zext_ln5_reg_743);
    predict_ensemble_xdS_U4->dout(node_right_child_V_fu_622_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_LBoostTree_feature_i_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_feature_i_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_feature_i_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_feature_i_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_feature_i_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_feature_i_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_feature_i_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_feature_i_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_is_leaf_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_is_leaf_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_is_leaf_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_is_leaf_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_is_leaf_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_is_leaf_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_is_leaf_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_is_leaf_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_left_chil_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_left_chil_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_left_chil_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_left_chil_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_left_chil_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_left_chil_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_left_chil_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_left_chil_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_right_chi_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_right_chi_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_right_chi_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_right_chi_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_right_chi_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_right_chi_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_right_chi_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_right_chi_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_value_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_value_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_value_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_value_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_value_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_value_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_LBoostTree_value_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1_2_fu_522_p1 );

    SC_METHOD(thread_LBoostTree_value_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_add_ln1_fu_517_p2);
    sensitive << ( mul_ln1_reg_749 );
    sensitive << ( zext_ln1_1_fu_513_p1 );

    SC_METHOD(thread_and_ln31_1_fu_723_p2);
    sensitive << ( and_ln31_fu_717_p2 );
    sensitive << ( grp_fu_434_p2 );

    SC_METHOD(thread_and_ln31_fu_717_p2);
    sensitive << ( or_ln31_fu_709_p2 );
    sensitive << ( or_ln31_1_fu_713_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln16_fu_439_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln16_fu_439_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln31_1_fu_668_p1);
    sensitive << ( node_value_reg_882 );

    SC_METHOD(thread_bitcast_ln31_fu_650_p1);
    sensitive << ( features_q0 );

    SC_METHOD(thread_features_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln544_fu_645_p1 );

    SC_METHOD(thread_features_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_i_fu_445_p2);
    sensitive << ( i_0_reg_407 );

    SC_METHOD(thread_icmp_ln13_1_fu_495_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln16_fu_439_p2 );
    sensitive << ( trunc_ln5_1_fu_461_p4 );

    SC_METHOD(thread_icmp_ln13_2_fu_501_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln16_fu_439_p2 );
    sensitive << ( trunc_ln5_1_fu_461_p4 );

    SC_METHOD(thread_icmp_ln13_fu_489_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln16_fu_439_p2 );
    sensitive << ( trunc_ln5_1_fu_461_p4 );

    SC_METHOD(thread_icmp_ln16_fu_439_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_407 );

    SC_METHOD(thread_icmp_ln31_1_fu_691_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln31_fu_664_p1 );

    SC_METHOD(thread_icmp_ln31_2_fu_697_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_3_fu_671_p4 );

    SC_METHOD(thread_icmp_ln31_3_fu_703_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln31_1_fu_681_p1 );

    SC_METHOD(thread_icmp_ln31_fu_685_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_654_p4 );

    SC_METHOD(thread_lshr_ln5_fu_451_p4);
    sensitive << ( i_0_reg_407 );

    SC_METHOD(thread_mul_ln1_fu_483_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln1_fu_483_p10 );

    SC_METHOD(thread_mul_ln1_fu_483_p10);
    sensitive << ( trunc_ln1_fu_475_p1 );

    SC_METHOD(thread_mul_ln1_fu_483_p2);
    sensitive << ( mul_ln1_fu_483_p1 );

    SC_METHOD(thread_node_feature_index_V_fu_581_p3);
    sensitive << ( or_ln13_reg_773 );
    sensitive << ( select_ln13_3_fu_567_p3 );
    sensitive << ( select_ln13_4_fu_574_p3 );

    SC_METHOD(thread_node_is_leaf_fu_560_p3);
    sensitive << ( or_ln13_reg_773 );
    sensitive << ( select_ln13_fu_546_p3 );
    sensitive << ( select_ln13_1_fu_553_p3 );

    SC_METHOD(thread_node_value_fu_602_p3);
    sensitive << ( LBoostTree_value_2_q0 );
    sensitive << ( icmp_ln13_reg_754 );
    sensitive << ( select_ln13_7_fu_595_p3 );

    SC_METHOD(thread_or_ln13_fu_507_p2);
    sensitive << ( icmp_ln13_fu_489_p2 );
    sensitive << ( icmp_ln13_2_fu_501_p2 );

    SC_METHOD(thread_or_ln31_1_fu_713_p2);
    sensitive << ( icmp_ln31_2_reg_919 );
    sensitive << ( icmp_ln31_3_reg_924 );

    SC_METHOD(thread_or_ln31_fu_709_p2);
    sensitive << ( icmp_ln31_reg_909 );
    sensitive << ( icmp_ln31_1_reg_914 );

    SC_METHOD(thread_ret_V_fu_639_p2);
    sensitive << ( zext_ln215_fu_635_p1 );

    SC_METHOD(thread_select_ln13_1_fu_553_p3);
    sensitive << ( LBoostTree_is_leaf_3_q0 );
    sensitive << ( LBoostTree_is_leaf_0_q0 );
    sensitive << ( icmp_ln13_1_reg_761 );

    SC_METHOD(thread_select_ln13_3_fu_567_p3);
    sensitive << ( LBoostTree_feature_i_2_q0 );
    sensitive << ( LBoostTree_feature_i_1_q0 );
    sensitive << ( icmp_ln13_reg_754 );

    SC_METHOD(thread_select_ln13_4_fu_574_p3);
    sensitive << ( LBoostTree_feature_i_q0 );
    sensitive << ( LBoostTree_feature_i_3_q0 );
    sensitive << ( icmp_ln13_1_reg_761 );

    SC_METHOD(thread_select_ln13_6_fu_588_p3);
    sensitive << ( LBoostTree_value_3_q0 );
    sensitive << ( LBoostTree_value_0_q0 );
    sensitive << ( icmp_ln13_1_reg_761 );

    SC_METHOD(thread_select_ln13_7_fu_595_p3);
    sensitive << ( LBoostTree_value_1_q0 );
    sensitive << ( icmp_ln13_2_reg_768 );
    sensitive << ( select_ln13_6_fu_588_p3 );

    SC_METHOD(thread_select_ln13_fu_546_p3);
    sensitive << ( LBoostTree_is_leaf_1_q0 );
    sensitive << ( LBoostTree_is_leaf_2_q0 );
    sensitive << ( icmp_ln13_reg_754 );

    SC_METHOD(thread_select_ln31_fu_729_p3);
    sensitive << ( node_left_child_V_reg_889 );
    sensitive << ( node_right_child_V_reg_894 );
    sensitive << ( and_ln31_1_fu_723_p2 );

    SC_METHOD(thread_sext_ln544_fu_645_p1);
    sensitive << ( ret_V_fu_639_p2 );

    SC_METHOD(thread_tmp_3_fu_671_p4);
    sensitive << ( bitcast_ln31_1_fu_668_p1 );

    SC_METHOD(thread_tmp_fu_654_p4);
    sensitive << ( bitcast_ln31_fu_650_p1 );

    SC_METHOD(thread_trunc_ln1_fu_475_p1);
    sensitive << ( i_0_reg_407 );

    SC_METHOD(thread_trunc_ln31_1_fu_681_p1);
    sensitive << ( bitcast_ln31_1_fu_668_p1 );

    SC_METHOD(thread_trunc_ln31_fu_664_p1);
    sensitive << ( bitcast_ln31_fu_650_p1 );

    SC_METHOD(thread_trunc_ln5_1_fu_461_p4);
    sensitive << ( i_0_reg_407 );

    SC_METHOD(thread_zext_ln1_1_fu_513_p1);
    sensitive << ( curren_0_reg_418 );

    SC_METHOD(thread_zext_ln1_2_fu_522_p1);
    sensitive << ( add_ln1_fu_517_p2 );

    SC_METHOD(thread_zext_ln215_fu_635_p1);
    sensitive << ( node_feature_index_V_fu_581_p3 );

    SC_METHOD(thread_zext_ln5_fu_471_p1);
    sensitive << ( lshr_ln5_fu_451_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln16_fu_439_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( node_is_leaf_fu_560_p3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "predict_ensemble_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, features_address0, "(port)features_address0");
    sc_trace(mVcdFile, features_ce0, "(port)features_ce0");
    sc_trace(mVcdFile, features_q0, "(port)features_q0");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, LBoostTree_is_leaf_3_address0, "LBoostTree_is_leaf_3_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_3_ce0, "LBoostTree_is_leaf_3_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_3_q0, "LBoostTree_is_leaf_3_q0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_0_address0, "LBoostTree_is_leaf_0_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_0_ce0, "LBoostTree_is_leaf_0_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_0_q0, "LBoostTree_is_leaf_0_q0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_1_address0, "LBoostTree_is_leaf_1_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_1_ce0, "LBoostTree_is_leaf_1_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_1_q0, "LBoostTree_is_leaf_1_q0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_2_address0, "LBoostTree_is_leaf_2_address0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_2_ce0, "LBoostTree_is_leaf_2_ce0");
    sc_trace(mVcdFile, LBoostTree_is_leaf_2_q0, "LBoostTree_is_leaf_2_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_address0, "LBoostTree_feature_i_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_ce0, "LBoostTree_feature_i_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_q0, "LBoostTree_feature_i_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_3_address0, "LBoostTree_feature_i_3_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_3_ce0, "LBoostTree_feature_i_3_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_3_q0, "LBoostTree_feature_i_3_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_2_address0, "LBoostTree_feature_i_2_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_2_ce0, "LBoostTree_feature_i_2_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_2_q0, "LBoostTree_feature_i_2_q0");
    sc_trace(mVcdFile, LBoostTree_feature_i_1_address0, "LBoostTree_feature_i_1_address0");
    sc_trace(mVcdFile, LBoostTree_feature_i_1_ce0, "LBoostTree_feature_i_1_ce0");
    sc_trace(mVcdFile, LBoostTree_feature_i_1_q0, "LBoostTree_feature_i_1_q0");
    sc_trace(mVcdFile, LBoostTree_value_3_address0, "LBoostTree_value_3_address0");
    sc_trace(mVcdFile, LBoostTree_value_3_ce0, "LBoostTree_value_3_ce0");
    sc_trace(mVcdFile, LBoostTree_value_3_q0, "LBoostTree_value_3_q0");
    sc_trace(mVcdFile, LBoostTree_value_0_address0, "LBoostTree_value_0_address0");
    sc_trace(mVcdFile, LBoostTree_value_0_ce0, "LBoostTree_value_0_ce0");
    sc_trace(mVcdFile, LBoostTree_value_0_q0, "LBoostTree_value_0_q0");
    sc_trace(mVcdFile, LBoostTree_value_1_address0, "LBoostTree_value_1_address0");
    sc_trace(mVcdFile, LBoostTree_value_1_ce0, "LBoostTree_value_1_ce0");
    sc_trace(mVcdFile, LBoostTree_value_1_q0, "LBoostTree_value_1_q0");
    sc_trace(mVcdFile, LBoostTree_value_2_address0, "LBoostTree_value_2_address0");
    sc_trace(mVcdFile, LBoostTree_value_2_ce0, "LBoostTree_value_2_ce0");
    sc_trace(mVcdFile, LBoostTree_value_2_q0, "LBoostTree_value_2_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_3_address0, "LBoostTree_left_chil_3_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_3_ce0, "LBoostTree_left_chil_3_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_3_q0, "LBoostTree_left_chil_3_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_2_address0, "LBoostTree_left_chil_2_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_2_ce0, "LBoostTree_left_chil_2_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_2_q0, "LBoostTree_left_chil_2_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_1_address0, "LBoostTree_left_chil_1_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_1_ce0, "LBoostTree_left_chil_1_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_1_q0, "LBoostTree_left_chil_1_q0");
    sc_trace(mVcdFile, LBoostTree_left_chil_address0, "LBoostTree_left_chil_address0");
    sc_trace(mVcdFile, LBoostTree_left_chil_ce0, "LBoostTree_left_chil_ce0");
    sc_trace(mVcdFile, LBoostTree_left_chil_q0, "LBoostTree_left_chil_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_3_address0, "LBoostTree_right_chi_3_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_3_ce0, "LBoostTree_right_chi_3_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_3_q0, "LBoostTree_right_chi_3_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_2_address0, "LBoostTree_right_chi_2_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_2_ce0, "LBoostTree_right_chi_2_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_2_q0, "LBoostTree_right_chi_2_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_1_address0, "LBoostTree_right_chi_1_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_1_ce0, "LBoostTree_right_chi_1_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_1_q0, "LBoostTree_right_chi_1_q0");
    sc_trace(mVcdFile, LBoostTree_right_chi_address0, "LBoostTree_right_chi_address0");
    sc_trace(mVcdFile, LBoostTree_right_chi_ce0, "LBoostTree_right_chi_ce0");
    sc_trace(mVcdFile, LBoostTree_right_chi_q0, "LBoostTree_right_chi_q0");
    sc_trace(mVcdFile, i_fu_445_p2, "i_fu_445_p2");
    sc_trace(mVcdFile, i_reg_738, "i_reg_738");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln5_fu_471_p1, "zext_ln5_fu_471_p1");
    sc_trace(mVcdFile, zext_ln5_reg_743, "zext_ln5_reg_743");
    sc_trace(mVcdFile, icmp_ln16_fu_439_p2, "icmp_ln16_fu_439_p2");
    sc_trace(mVcdFile, mul_ln1_fu_483_p2, "mul_ln1_fu_483_p2");
    sc_trace(mVcdFile, mul_ln1_reg_749, "mul_ln1_reg_749");
    sc_trace(mVcdFile, icmp_ln13_fu_489_p2, "icmp_ln13_fu_489_p2");
    sc_trace(mVcdFile, icmp_ln13_reg_754, "icmp_ln13_reg_754");
    sc_trace(mVcdFile, icmp_ln13_1_fu_495_p2, "icmp_ln13_1_fu_495_p2");
    sc_trace(mVcdFile, icmp_ln13_1_reg_761, "icmp_ln13_1_reg_761");
    sc_trace(mVcdFile, icmp_ln13_2_fu_501_p2, "icmp_ln13_2_fu_501_p2");
    sc_trace(mVcdFile, icmp_ln13_2_reg_768, "icmp_ln13_2_reg_768");
    sc_trace(mVcdFile, or_ln13_fu_507_p2, "or_ln13_fu_507_p2");
    sc_trace(mVcdFile, or_ln13_reg_773, "or_ln13_reg_773");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, node_value_fu_602_p3, "node_value_fu_602_p3");
    sc_trace(mVcdFile, node_value_reg_882, "node_value_reg_882");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, node_left_child_V_fu_609_p6, "node_left_child_V_fu_609_p6");
    sc_trace(mVcdFile, node_left_child_V_reg_889, "node_left_child_V_reg_889");
    sc_trace(mVcdFile, node_right_child_V_fu_622_p6, "node_right_child_V_fu_622_p6");
    sc_trace(mVcdFile, node_right_child_V_reg_894, "node_right_child_V_reg_894");
    sc_trace(mVcdFile, node_is_leaf_fu_560_p3, "node_is_leaf_fu_560_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln31_fu_685_p2, "icmp_ln31_fu_685_p2");
    sc_trace(mVcdFile, icmp_ln31_reg_909, "icmp_ln31_reg_909");
    sc_trace(mVcdFile, icmp_ln31_1_fu_691_p2, "icmp_ln31_1_fu_691_p2");
    sc_trace(mVcdFile, icmp_ln31_1_reg_914, "icmp_ln31_1_reg_914");
    sc_trace(mVcdFile, icmp_ln31_2_fu_697_p2, "icmp_ln31_2_fu_697_p2");
    sc_trace(mVcdFile, icmp_ln31_2_reg_919, "icmp_ln31_2_reg_919");
    sc_trace(mVcdFile, icmp_ln31_3_fu_703_p2, "icmp_ln31_3_fu_703_p2");
    sc_trace(mVcdFile, icmp_ln31_3_reg_924, "icmp_ln31_3_reg_924");
    sc_trace(mVcdFile, select_ln31_fu_729_p3, "select_ln31_fu_729_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_429_p2, "grp_fu_429_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, sum_0_reg_395, "sum_0_reg_395");
    sc_trace(mVcdFile, i_0_reg_407, "i_0_reg_407");
    sc_trace(mVcdFile, curren_0_reg_418, "curren_0_reg_418");
    sc_trace(mVcdFile, zext_ln1_2_fu_522_p1, "zext_ln1_2_fu_522_p1");
    sc_trace(mVcdFile, sext_ln544_fu_645_p1, "sext_ln544_fu_645_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, lshr_ln5_fu_451_p4, "lshr_ln5_fu_451_p4");
    sc_trace(mVcdFile, trunc_ln1_fu_475_p1, "trunc_ln1_fu_475_p1");
    sc_trace(mVcdFile, mul_ln1_fu_483_p1, "mul_ln1_fu_483_p1");
    sc_trace(mVcdFile, trunc_ln5_1_fu_461_p4, "trunc_ln5_1_fu_461_p4");
    sc_trace(mVcdFile, zext_ln1_1_fu_513_p1, "zext_ln1_1_fu_513_p1");
    sc_trace(mVcdFile, add_ln1_fu_517_p2, "add_ln1_fu_517_p2");
    sc_trace(mVcdFile, select_ln13_fu_546_p3, "select_ln13_fu_546_p3");
    sc_trace(mVcdFile, select_ln13_1_fu_553_p3, "select_ln13_1_fu_553_p3");
    sc_trace(mVcdFile, select_ln13_3_fu_567_p3, "select_ln13_3_fu_567_p3");
    sc_trace(mVcdFile, select_ln13_4_fu_574_p3, "select_ln13_4_fu_574_p3");
    sc_trace(mVcdFile, select_ln13_6_fu_588_p3, "select_ln13_6_fu_588_p3");
    sc_trace(mVcdFile, select_ln13_7_fu_595_p3, "select_ln13_7_fu_595_p3");
    sc_trace(mVcdFile, node_feature_index_V_fu_581_p3, "node_feature_index_V_fu_581_p3");
    sc_trace(mVcdFile, zext_ln215_fu_635_p1, "zext_ln215_fu_635_p1");
    sc_trace(mVcdFile, ret_V_fu_639_p2, "ret_V_fu_639_p2");
    sc_trace(mVcdFile, bitcast_ln31_fu_650_p1, "bitcast_ln31_fu_650_p1");
    sc_trace(mVcdFile, bitcast_ln31_1_fu_668_p1, "bitcast_ln31_1_fu_668_p1");
    sc_trace(mVcdFile, tmp_fu_654_p4, "tmp_fu_654_p4");
    sc_trace(mVcdFile, trunc_ln31_fu_664_p1, "trunc_ln31_fu_664_p1");
    sc_trace(mVcdFile, tmp_3_fu_671_p4, "tmp_3_fu_671_p4");
    sc_trace(mVcdFile, trunc_ln31_1_fu_681_p1, "trunc_ln31_1_fu_681_p1");
    sc_trace(mVcdFile, or_ln31_fu_709_p2, "or_ln31_fu_709_p2");
    sc_trace(mVcdFile, or_ln31_1_fu_713_p2, "or_ln31_1_fu_713_p2");
    sc_trace(mVcdFile, and_ln31_fu_717_p2, "and_ln31_fu_717_p2");
    sc_trace(mVcdFile, grp_fu_434_p2, "grp_fu_434_p2");
    sc_trace(mVcdFile, and_ln31_1_fu_723_p2, "and_ln31_1_fu_723_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln1_fu_483_p10, "mul_ln1_fu_483_p10");
    sc_trace(mVcdFile, ap_return, "ap_return");
#endif

    }
    mHdltvinHandle.open("predict_ensemble.hdltvin.dat");
    mHdltvoutHandle.open("predict_ensemble.hdltvout.dat");
}

predict_ensemble::~predict_ensemble() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete LBoostTree_is_leaf_3_U;
    delete LBoostTree_is_leaf_0_U;
    delete LBoostTree_is_leaf_1_U;
    delete LBoostTree_is_leaf_2_U;
    delete LBoostTree_feature_i_U;
    delete LBoostTree_feature_i_3_U;
    delete LBoostTree_feature_i_2_U;
    delete LBoostTree_feature_i_1_U;
    delete LBoostTree_value_3_U;
    delete LBoostTree_value_0_U;
    delete LBoostTree_value_1_U;
    delete LBoostTree_value_2_U;
    delete LBoostTree_left_chil_3_U;
    delete LBoostTree_left_chil_2_U;
    delete LBoostTree_left_chil_1_U;
    delete LBoostTree_left_chil_U;
    delete LBoostTree_right_chi_3_U;
    delete LBoostTree_right_chi_2_U;
    delete LBoostTree_right_chi_1_U;
    delete LBoostTree_right_chi_U;
    delete predict_ensemble_CTRL_BUS_s_axi_U;
    delete predict_ensemble_vdy_U1;
    delete predict_ensemble_wdI_U2;
    delete predict_ensemble_xdS_U3;
    delete predict_ensemble_xdS_U4;
}

void predict_ensemble::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void predict_ensemble::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_5;
}

void predict_ensemble::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        curren_0_reg_418 = select_ln31_fu_729_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln16_fu_439_p2.read(), ap_const_lv1_0))) {
        curren_0_reg_418 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_0_reg_407 = i_reg_738.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_407 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sum_0_reg_395 = grp_fu_429_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sum_0_reg_395 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_738 = i_fu_445_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln16_fu_439_p2.read(), ap_const_lv1_0))) {
        icmp_ln13_1_reg_761 = icmp_ln13_1_fu_495_p2.read();
        icmp_ln13_2_reg_768 = icmp_ln13_2_fu_501_p2.read();
        icmp_ln13_reg_754 = icmp_ln13_fu_489_p2.read();
        mul_ln1_reg_749 = mul_ln1_fu_483_p2.read();
        or_ln13_reg_773 = or_ln13_fu_507_p2.read();
        zext_ln5_reg_743 = zext_ln5_fu_471_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln31_1_reg_914 = icmp_ln31_1_fu_691_p2.read();
        icmp_ln31_2_reg_919 = icmp_ln31_2_fu_697_p2.read();
        icmp_ln31_3_reg_924 = icmp_ln31_3_fu_703_p2.read();
        icmp_ln31_reg_909 = icmp_ln31_fu_685_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        node_left_child_V_reg_889 = node_left_child_V_fu_609_p6.read();
        node_right_child_V_reg_894 = node_right_child_V_fu_622_p6.read();
        node_value_reg_882 = node_value_fu_602_p3.read();
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_1_address0() {
    LBoostTree_feature_i_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_feature_i_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_2_address0() {
    LBoostTree_feature_i_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_feature_i_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_3_address0() {
    LBoostTree_feature_i_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_feature_i_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_feature_i_address0() {
    LBoostTree_feature_i_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_feature_i_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_feature_i_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_feature_i_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_0_address0() {
    LBoostTree_is_leaf_0_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_is_leaf_0_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_0_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_1_address0() {
    LBoostTree_is_leaf_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_is_leaf_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_2_address0() {
    LBoostTree_is_leaf_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_is_leaf_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_is_leaf_3_address0() {
    LBoostTree_is_leaf_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_is_leaf_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_is_leaf_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_is_leaf_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_1_address0() {
    LBoostTree_left_chil_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_left_chil_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_2_address0() {
    LBoostTree_left_chil_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_left_chil_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_3_address0() {
    LBoostTree_left_chil_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_left_chil_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_left_chil_address0() {
    LBoostTree_left_chil_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_left_chil_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_left_chil_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_left_chil_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_1_address0() {
    LBoostTree_right_chi_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_right_chi_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_2_address0() {
    LBoostTree_right_chi_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_right_chi_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_3_address0() {
    LBoostTree_right_chi_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_right_chi_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_right_chi_address0() {
    LBoostTree_right_chi_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_right_chi_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_right_chi_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_right_chi_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_0_address0() {
    LBoostTree_value_0_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_value_0_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_0_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_1_address0() {
    LBoostTree_value_1_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_value_1_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_1_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_2_address0() {
    LBoostTree_value_2_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_value_2_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_2_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_LBoostTree_value_3_address0() {
    LBoostTree_value_3_address0 =  (sc_lv<12>) (zext_ln1_2_fu_522_p1.read());
}

void predict_ensemble::thread_LBoostTree_value_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        LBoostTree_value_3_ce0 = ap_const_logic_1;
    } else {
        LBoostTree_value_3_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_add_ln1_fu_517_p2() {
    add_ln1_fu_517_p2 = (!mul_ln1_reg_749.read().is_01() || !zext_ln1_1_fu_513_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(mul_ln1_reg_749.read()) + sc_biguint<12>(zext_ln1_1_fu_513_p1.read()));
}

void predict_ensemble::thread_and_ln31_1_fu_723_p2() {
    and_ln31_1_fu_723_p2 = (and_ln31_fu_717_p2.read() & grp_fu_434_p2.read());
}

void predict_ensemble::thread_and_ln31_fu_717_p2() {
    and_ln31_fu_717_p2 = (or_ln31_fu_709_p2.read() & or_ln31_1_fu_713_p2.read());
}

void predict_ensemble::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void predict_ensemble::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void predict_ensemble::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void predict_ensemble::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void predict_ensemble::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void predict_ensemble::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void predict_ensemble::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void predict_ensemble::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void predict_ensemble::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_439_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_439_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void predict_ensemble::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void predict_ensemble::thread_bitcast_ln31_1_fu_668_p1() {
    bitcast_ln31_1_fu_668_p1 = node_value_reg_882.read();
}

void predict_ensemble::thread_bitcast_ln31_fu_650_p1() {
    bitcast_ln31_fu_650_p1 = features_q0.read();
}

void predict_ensemble::thread_features_address0() {
    features_address0 =  (sc_lv<4>) (sext_ln544_fu_645_p1.read());
}

void predict_ensemble::thread_features_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        features_ce0 = ap_const_logic_1;
    } else {
        features_ce0 = ap_const_logic_0;
    }
}

void predict_ensemble::thread_i_fu_445_p2() {
    i_fu_445_p2 = (!i_0_reg_407.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_407.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void predict_ensemble::thread_icmp_ln13_1_fu_495_p2() {
    icmp_ln13_1_fu_495_p2 = (!trunc_ln5_1_fu_461_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln5_1_fu_461_p4.read() == ap_const_lv2_0);
}

void predict_ensemble::thread_icmp_ln13_2_fu_501_p2() {
    icmp_ln13_2_fu_501_p2 = (!trunc_ln5_1_fu_461_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln5_1_fu_461_p4.read() == ap_const_lv2_1);
}

void predict_ensemble::thread_icmp_ln13_fu_489_p2() {
    icmp_ln13_fu_489_p2 = (!trunc_ln5_1_fu_461_p4.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln5_1_fu_461_p4.read() == ap_const_lv2_2);
}

void predict_ensemble::thread_icmp_ln16_fu_439_p2() {
    icmp_ln16_fu_439_p2 = (!i_0_reg_407.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_407.read() == ap_const_lv7_40);
}

void predict_ensemble::thread_icmp_ln31_1_fu_691_p2() {
    icmp_ln31_1_fu_691_p2 = (!trunc_ln31_fu_664_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln31_fu_664_p1.read() == ap_const_lv23_0);
}

void predict_ensemble::thread_icmp_ln31_2_fu_697_p2() {
    icmp_ln31_2_fu_697_p2 = (!tmp_3_fu_671_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_671_p4.read() != ap_const_lv8_FF);
}

void predict_ensemble::thread_icmp_ln31_3_fu_703_p2() {
    icmp_ln31_3_fu_703_p2 = (!trunc_ln31_1_fu_681_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln31_1_fu_681_p1.read() == ap_const_lv23_0);
}

void predict_ensemble::thread_icmp_ln31_fu_685_p2() {
    icmp_ln31_fu_685_p2 = (!tmp_fu_654_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_654_p4.read() != ap_const_lv8_FF);
}

void predict_ensemble::thread_lshr_ln5_fu_451_p4() {
    lshr_ln5_fu_451_p4 = i_0_reg_407.read().range(6, 4);
}

void predict_ensemble::thread_mul_ln1_fu_483_p1() {
    mul_ln1_fu_483_p1 =  (sc_lv<4>) (mul_ln1_fu_483_p10.read());
}

void predict_ensemble::thread_mul_ln1_fu_483_p10() {
    mul_ln1_fu_483_p10 = esl_zext<12,4>(trunc_ln1_fu_475_p1.read());
}

void predict_ensemble::thread_mul_ln1_fu_483_p2() {
    mul_ln1_fu_483_p2 = (!ap_const_lv12_C4.is_01() || !mul_ln1_fu_483_p1.read().is_01())? sc_lv<12>(): sc_biguint<12>(ap_const_lv12_C4) * sc_biguint<4>(mul_ln1_fu_483_p1.read());
}

void predict_ensemble::thread_node_feature_index_V_fu_581_p3() {
    node_feature_index_V_fu_581_p3 = (!or_ln13_reg_773.read()[0].is_01())? sc_lv<4>(): ((or_ln13_reg_773.read()[0].to_bool())? select_ln13_3_fu_567_p3.read(): select_ln13_4_fu_574_p3.read());
}

void predict_ensemble::thread_node_is_leaf_fu_560_p3() {
    node_is_leaf_fu_560_p3 = (!or_ln13_reg_773.read()[0].is_01())? sc_lv<1>(): ((or_ln13_reg_773.read()[0].to_bool())? select_ln13_fu_546_p3.read(): select_ln13_1_fu_553_p3.read());
}

void predict_ensemble::thread_node_value_fu_602_p3() {
    node_value_fu_602_p3 = (!icmp_ln13_reg_754.read()[0].is_01())? sc_lv<32>(): ((icmp_ln13_reg_754.read()[0].to_bool())? LBoostTree_value_2_q0.read(): select_ln13_7_fu_595_p3.read());
}

void predict_ensemble::thread_or_ln13_fu_507_p2() {
    or_ln13_fu_507_p2 = (icmp_ln13_fu_489_p2.read() | icmp_ln13_2_fu_501_p2.read());
}

void predict_ensemble::thread_or_ln31_1_fu_713_p2() {
    or_ln31_1_fu_713_p2 = (icmp_ln31_3_reg_924.read() | icmp_ln31_2_reg_919.read());
}

void predict_ensemble::thread_or_ln31_fu_709_p2() {
    or_ln31_fu_709_p2 = (icmp_ln31_1_reg_914.read() | icmp_ln31_reg_909.read());
}

void predict_ensemble::thread_ret_V_fu_639_p2() {
    ret_V_fu_639_p2 = (!ap_const_lv5_1F.is_01() || !zext_ln215_fu_635_p1.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_1F) + sc_biguint<5>(zext_ln215_fu_635_p1.read()));
}

void predict_ensemble::thread_select_ln13_1_fu_553_p3() {
    select_ln13_1_fu_553_p3 = (!icmp_ln13_1_reg_761.read()[0].is_01())? sc_lv<1>(): ((icmp_ln13_1_reg_761.read()[0].to_bool())? LBoostTree_is_leaf_0_q0.read(): LBoostTree_is_leaf_3_q0.read());
}

void predict_ensemble::thread_select_ln13_3_fu_567_p3() {
    select_ln13_3_fu_567_p3 = (!icmp_ln13_reg_754.read()[0].is_01())? sc_lv<4>(): ((icmp_ln13_reg_754.read()[0].to_bool())? LBoostTree_feature_i_1_q0.read(): LBoostTree_feature_i_2_q0.read());
}

void predict_ensemble::thread_select_ln13_4_fu_574_p3() {
    select_ln13_4_fu_574_p3 = (!icmp_ln13_1_reg_761.read()[0].is_01())? sc_lv<4>(): ((icmp_ln13_1_reg_761.read()[0].to_bool())? LBoostTree_feature_i_3_q0.read(): LBoostTree_feature_i_q0.read());
}

void predict_ensemble::thread_select_ln13_6_fu_588_p3() {
    select_ln13_6_fu_588_p3 = (!icmp_ln13_1_reg_761.read()[0].is_01())? sc_lv<32>(): ((icmp_ln13_1_reg_761.read()[0].to_bool())? LBoostTree_value_0_q0.read(): LBoostTree_value_3_q0.read());
}

void predict_ensemble::thread_select_ln13_7_fu_595_p3() {
    select_ln13_7_fu_595_p3 = (!icmp_ln13_2_reg_768.read()[0].is_01())? sc_lv<32>(): ((icmp_ln13_2_reg_768.read()[0].to_bool())? LBoostTree_value_1_q0.read(): select_ln13_6_fu_588_p3.read());
}

void predict_ensemble::thread_select_ln13_fu_546_p3() {
    select_ln13_fu_546_p3 = (!icmp_ln13_reg_754.read()[0].is_01())? sc_lv<1>(): ((icmp_ln13_reg_754.read()[0].to_bool())? LBoostTree_is_leaf_2_q0.read(): LBoostTree_is_leaf_1_q0.read());
}

void predict_ensemble::thread_select_ln31_fu_729_p3() {
    select_ln31_fu_729_p3 = (!and_ln31_1_fu_723_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln31_1_fu_723_p2.read()[0].to_bool())? node_left_child_V_reg_889.read(): node_right_child_V_reg_894.read());
}

void predict_ensemble::thread_sext_ln544_fu_645_p1() {
    sext_ln544_fu_645_p1 = esl_sext<64,5>(ret_V_fu_639_p2.read());
}

void predict_ensemble::thread_tmp_3_fu_671_p4() {
    tmp_3_fu_671_p4 = bitcast_ln31_1_fu_668_p1.read().range(30, 23);
}

void predict_ensemble::thread_tmp_fu_654_p4() {
    tmp_fu_654_p4 = bitcast_ln31_fu_650_p1.read().range(30, 23);
}

void predict_ensemble::thread_trunc_ln1_fu_475_p1() {
    trunc_ln1_fu_475_p1 = i_0_reg_407.read().range(4-1, 0);
}

void predict_ensemble::thread_trunc_ln31_1_fu_681_p1() {
    trunc_ln31_1_fu_681_p1 = bitcast_ln31_1_fu_668_p1.read().range(23-1, 0);
}

void predict_ensemble::thread_trunc_ln31_fu_664_p1() {
    trunc_ln31_fu_664_p1 = bitcast_ln31_fu_650_p1.read().range(23-1, 0);
}

void predict_ensemble::thread_trunc_ln5_1_fu_461_p4() {
    trunc_ln5_1_fu_461_p4 = i_0_reg_407.read().range(5, 4);
}

void predict_ensemble::thread_zext_ln1_1_fu_513_p1() {
    zext_ln1_1_fu_513_p1 = esl_zext<12,8>(curren_0_reg_418.read());
}

void predict_ensemble::thread_zext_ln1_2_fu_522_p1() {
    zext_ln1_2_fu_522_p1 = esl_zext<64,12>(add_ln1_fu_517_p2.read());
}

void predict_ensemble::thread_zext_ln215_fu_635_p1() {
    zext_ln215_fu_635_p1 = esl_zext<5,4>(node_feature_index_V_fu_581_p3.read());
}

void predict_ensemble::thread_zext_ln5_fu_471_p1() {
    zext_ln5_fu_471_p1 = esl_zext<32,3>(lshr_ln5_fu_451_p4.read());
}

void predict_ensemble::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln16_fu_439_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, node_is_leaf_fu_560_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXX";
            break;
    }
}

void predict_ensemble::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"features_address0\" :  \"" << features_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"features_ce0\" :  \"" << features_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"features_q0\" :  \"" << features_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

