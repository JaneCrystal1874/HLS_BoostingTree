// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_Mgi_H__
#define __predict_ensemble_Mgi_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_Mgi_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_Mgi_ram) {
        ram[0] = "0b00111111011011101111101110100000";
        ram[1] = "0b00111100011001101111111101111110";
        ram[2] = "0b00111111000111011001001110100011";
        ram[3] = "0b10111100010101111110000000100110";
        ram[4] = "0b00111101011100001111111100010001";
        ram[5] = "0b00111100100101001000011101110111";
        ram[6] = "0b10111001111001001001011011101110";
        ram[7] = "0b00111110110010101001011011110110";
        ram[8] = "0b00111101100001110101011010000110";
        ram[9] = "0b10111100101000101110010111011110";
        ram[10] = "0b00111110110010001001110101001001";
        ram[11] = "0b00111100001100111001111000101000";
        ram[12] = "0b00111101101000111110111110101110";
        ram[13] = "0b00111011010111101000111101101101";
        ram[14] = "0b10111011101100110011110110110000";
        ram[15] = "0b10111100011001011011100001010110";
        ram[16] = "0b00111101101100100010000011111111";
        ram[17] = "0b00111100100100111100111011101010";
        ram[18] = "0b00111101110010011000110101000111";
        ram[19] = "0b10111100000111001000010000110000";
        ram[20] = "0b00111101110100110000010110010110";
        ram[21] = "0b00111100100100000101110000000011";
        ram[22] = "0b00111101111101100010100001000110";
        ram[23] = "0b00111111001000010001101010000111";
        ram[24] = "0b00111101111111010000101101110100";
        ram[25] = "0b00111101111000011111010110111110";
        ram[26] = "0b00111100001110101010100110110101";
        ram[27] = "0b10111100000101101101110100100111";
        ram[28] = "0b00111111010110111010001011110000";
        ram[29] = "0b00111011001111010110011000100111";
        ram[30] = "0b10111010110010110010100101011111";
        ram[31] = "0b00111110100100001110010001010100";
        ram[32] = "0b00111111001010011010111111110011";
        ram[33] = "0b00111110000001111010000000110000";
        ram[34] = "0b00111110100101110010000101110001";
        ram[35] = "0b00111100010000011011100101110011";
        ram[36] = "0b10111010010000110100110000011011";
        ram[37] = "0b00111110101110101111110010101101";
        ram[38] = "0b00111110000101001010100011000001";
        ram[39] = "0b00111110101011101100001001101010";
        ram[40] = "0b00111111010010100010111010010000";
        ram[41] = "0b00111110111011001010001110000011";
        ram[42] = "0b00111100000010100000010011010001";
        ram[43] = "0b10111100001011100010000100010000";
        ram[44] = "0b00111110110111001110110100101101";
        ram[45] = "0b00111100100001011111110100000101";
        ram[46] = "0b00111110111000000001011100110011";
        ram[47] = "0b00111110000000101011001001111101";
        ram[48] = "0b10111100000011100110010010110010";
        ram[49] = "0b10111011100101010110001110101010";
        ram[50] = "0b00111110111100010011111101101100";
        ram[51] = "0b10111011111010001101100101110011";
        ram[52] = "0b00111110100111110101000100000101";
        ram[53] = "0b00111011101110011010100111011010";
        ram[54] = "0b10111001100101000101111110011110";
        ram[55] = "0b00111100000011100010000110010110";
        ram[56] = "0b00111110101100010000100011000100";
        ram[57] = "0b00111011100000111010000100001010";
        ram[58] = "0b00111110110101110001111010001110";
        ram[59] = "0b00111111000001101000000010001101";
        ram[60] = "0b00111110001011010011000100110011";
        ram[61] = "0b00111110111001100001110100000000";
        ram[62] = "0b00111110100110010010101010110111";
        ram[63] = "0b00111011001110011010100111011010";
        ram[64] = "0b00111110111011110111000111101011";
        ram[65] = "0b00111110101011010101001110101100";
        ram[66] = "0b10111011010011011010011011100111";
        ram[67] = "0b10111011110011101011001101010111";
        ram[68] = "0b00111111000110000000101110101010";
        ram[69] = "0b00111110101011100110111010000111";
        ram[70] = "0b00111110101010110011111000110110";
        ram[71] = "0b00111100001100011100110010010110";
        ram[72] = "0b00111110100110100010111001111111";
        ram[73] = "0b10111001011000010111000110011111";
        ram[74] = "0b10111010110111001101101100111000";
        ram[75] = "0b00111011011101100000010110101011";
        ram[76] = "0b00111001111010000100001001110100";
        ram[77] = "0b10111011000111110001111100010101";
        ram[78] = "0b00111001100111111110100001101000";
        ram[79] = "0b10111011101000010010111110010000";
        ram[80] = "0b00111110101001011101000110000001";
        ram[81] = "0b10111100001001010110100110110001";
        ram[82] = "0b10111011110011100110011111010111";
        ram[83] = "0b00111111000100100011010000000001";
        ram[84] = "0b00111110101101001011111010000011";
        ram[85] = "0b00111011101011110001110010111001";
        ram[86] = "0b00111010001011111110011000001100";
        ram[87] = "0b00111110101110111011011110110111";
        ram[88] = "0b00111110110101110011011110111001";
        ram[89] = "0b00111011110011111101000010001101";
        ram[90] = "0b00111111001100001110011011010001";
        ram[91] = "0b00111100000010100110010101001001";
        ram[92] = "0b00111010110010101100010010110101";
        ram[93] = "0b00111110101101011010010111111100";
        ram[94] = "0b00111111000100110000101000011100";
        ram[95] = "0b00111111011010100000010110011010";
        ram[96] = "0b10111011101001100011101101101001";
        ram[97] = "0b00111110111010110101110110101011";
        ram[98] = "0b10111011110100000010010001110000";
        ram[99] = "0b00111100000010101101111011101100";
        ram[100] = "0b00111110110101100011100101010000";
        ram[101] = "0b00111110000011010100110001110111";
        ram[102] = "0b10111011101100000111010010100111";
        ram[103] = "0b10111010100000101000110000110111";
        ram[104] = "0b00111011011101011110010000011101";
        ram[105] = "0b10111010111100101110000001011101";
        ram[106] = "0b00111011001011010000001111011010";
        ram[107] = "0b00111110000010011101111111011011";
        ram[108] = "0b00111110000100111010000101001101";
        ram[109] = "0b00111010100011010110110100111011";
        ram[110] = "0b10111100000110100110001011101101";
        ram[111] = "0b00111011101011110000001110001110";
        ram[112] = "0b00111110110001110101011100001100";
        ram[113] = "0b00111110101110111111011011000010";
        ram[114] = "0b00111111000010110001100100111111";
        ram[115] = "0b00111010011101110011001110101001";
        ram[116] = "0b00111111000100000000000000000000";
        ram[117] = "0b00111111000010111111100010101001";
        ram[118] = "0b00111111000011001000110101111110";
        ram[119] = "0b10111010000100011100000010000111";
        ram[120] = "0b00111110111000100101001111011010";
        ram[121] = "0b00111110110111011001100101100111";
        ram[122] = "0b00111011101101010100010111001000";
        ram[123] = "0b10111011111110111100101000010000";
        ram[124] = "0b00111111010001111011000101001011";
        ram[125] = "0b10111011100000101000001111010011";
        ram[126] = "0b10111100000010110001000101000001";
        ram[127] = "0b00111110110110011000001100001110";
        ram[128] = "0b00111110101010011000100010010000";
        ram[129] = "0b00111111010100000010011011011101";
        ram[130] = "0b10111011100000010110011010011101";
        ram[131] = "0b10111010110011011100100001110101";
        ram[132] = "0b00111111001000000000111110001000";
        ram[133] = "0b00111011100100110000011110101111";
        ram[134] = "0b00111111001011111011011011011101";
        ram[135] = "0b00111111010001001111101010101101";
        ram[136] = "0b00111111000111111010101000100110";
        ram[137] = "0b00111100000011011111001101110011";
        ram[138] = "0b00111110110111101101110111001110";
        ram[139] = "0b00111111000110111101110010011100";
        ram[140] = "0b00111111001001000011110101000111";
        ram[141] = "0b00111111000000101101000000111110";
        ram[142] = "0b00111011101111010101110111000100";
        ram[143] = "0b00111110001010101000000100010011";
        ram[144] = "0b00111111000111111010101110101000";
        ram[145] = "0b10111011000101001010001010111010";
        ram[146] = "0b00111011101011000110110011011011";
        ram[147] = "0b00111110111001101010000000010010";
        ram[148] = "0b00111011000110100011010011001010";
        ram[149] = "0b00111111001000111110000000010101";
        ram[150] = "0b00111111011011010011010011110000";
        ram[151] = "0b00111111000000011100110100111110";
        ram[152] = "0b00111110110101010011011101111110";
        ram[153] = "0b10111011001010101010011111011111";
        ram[154] = "0b10111011101110111001000001100100";
        ram[155] = "0b00111010101100011111111011101011";
        ram[156] = "0b10111011000010001101011011010100";
        ram[157] = "0b00111111000110100111111100111101";
        ram[158] = "0b00111111001111001000111101000011";
        ram[159] = "0b00111011101110110011010000011110";
        ram[160] = "0b00111111000110111111010010101010";
        ram[161] = "0b00111111011010010000111011111110";
        ram[162] = "0b10111011010111111010110010100011";
        ram[163] = "0b10111011110011000101111111000000";
        ram[164] = "0b10111010111111100100011110011001";
        ram[165] = "0b00111111000100110101011010010111";
        ram[166] = "0b10111011001100011011101111001111";
        ram[167] = "0b10111011000000111000011111011111";
        ram[168] = "0b10111011100110010011100100100010";
        ram[169] = "0b00111110111000000011110010110000";
        ram[170] = "0b10111011100010001010110011100010";
        ram[171] = "0b10111010110100000100010111111110";
        ram[172] = "0b00111010111101000000111001011010";
        ram[173] = "0b00111110110111011001111100001010";
        ram[174] = "0b00111011101111010010101101101111";
        ram[175] = "0b00111111010001110011110100101001";
        ram[176] = "0b00111011101000011111000010000000";
        ram[177] = "0b10111011010100000011010100110111";
        ram[178] = "0b00111111000010110110001100001011";
        ram[179] = "0b00111111001101001101101001011110";
        ram[180] = "0b10111011001000111111100010011000";
        ram[181] = "0b10111011011110001101011100010111";
        ram[182] = "0b00111010111001000101001111010010";
        ram[183] = "0b00111111001010011110011110100111";
        ram[184] = "0b00111011001001100001000101110111";
        ram[185] = "0b10111010101001111000001010010000";
        ram[186] = "0b00111110110010011111100111001111";
        ram[187] = "0b10111011000101101100110001100000";
        ram[188] = "0b00111000011111111101101001000000";
        ram[189] = "0b00111010011101000000111001011010";
        ram[190] = "0b00111011000111110111001011110111";
        ram[191] = "0b00000000000000000000000000000000";
        ram[192] = "0b00000000000000000000000000000000";
        ram[193] = "0b00000000000000000000000000000000";
        ram[194] = "0b00000000000000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_Mgi) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_Mgi_ram* meminst;


SC_CTOR(predict_ensemble_Mgi) {
meminst = new predict_ensemble_Mgi_ram("predict_ensemble_Mgi_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_Mgi() {
    delete meminst;
}


};//endmodule
#endif
