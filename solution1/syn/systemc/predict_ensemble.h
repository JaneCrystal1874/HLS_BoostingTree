// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _predict_ensemble_HH_
#define _predict_ensemble_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "predict_ensemble_vdy.h"
#include "predict_ensemble_wdI.h"
#include "predict_ensemble_xdS.h"
#include "predict_ensemble_bkb.h"
#include "predict_ensemble_cud.h"
#include "predict_ensemble_dEe.h"
#include "predict_ensemble_eOg.h"
#include "predict_ensemble_fYi.h"
#include "predict_ensemble_g8j.h"
#include "predict_ensemble_hbi.h"
#include "predict_ensemble_ibs.h"
#include "predict_ensemble_jbC.h"
#include "predict_ensemble_kbM.h"
#include "predict_ensemble_lbW.h"
#include "predict_ensemble_mb6.h"
#include "predict_ensemble_ncg.h"
#include "predict_ensemble_ocq.h"
#include "predict_ensemble_pcA.h"
#include "predict_ensemble_qcK.h"
#include "predict_ensemble_rcU.h"
#include "predict_ensemble_sc4.h"
#include "predict_ensemble_tde.h"
#include "predict_ensemble_udo.h"
#include "predict_ensemble_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct predict_ensemble : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<4> > features_address0;
    sc_out< sc_logic > features_ce0;
    sc_in< sc_lv<32> > features_q0;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    predict_ensemble(sc_module_name name);
    SC_HAS_PROCESS(predict_ensemble);

    ~predict_ensemble();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    predict_ensemble_bkb* LBoostTree_is_leaf_3_U;
    predict_ensemble_cud* LBoostTree_is_leaf_0_U;
    predict_ensemble_dEe* LBoostTree_is_leaf_1_U;
    predict_ensemble_eOg* LBoostTree_is_leaf_2_U;
    predict_ensemble_fYi* LBoostTree_feature_i_U;
    predict_ensemble_g8j* LBoostTree_feature_i_3_U;
    predict_ensemble_hbi* LBoostTree_feature_i_2_U;
    predict_ensemble_ibs* LBoostTree_feature_i_1_U;
    predict_ensemble_jbC* LBoostTree_value_3_U;
    predict_ensemble_kbM* LBoostTree_value_0_U;
    predict_ensemble_lbW* LBoostTree_value_1_U;
    predict_ensemble_mb6* LBoostTree_value_2_U;
    predict_ensemble_ncg* LBoostTree_left_chil_3_U;
    predict_ensemble_ocq* LBoostTree_left_chil_2_U;
    predict_ensemble_pcA* LBoostTree_left_chil_1_U;
    predict_ensemble_qcK* LBoostTree_left_chil_U;
    predict_ensemble_rcU* LBoostTree_right_chi_3_U;
    predict_ensemble_sc4* LBoostTree_right_chi_2_U;
    predict_ensemble_tde* LBoostTree_right_chi_1_U;
    predict_ensemble_udo* LBoostTree_right_chi_U;
    predict_ensemble_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* predict_ensemble_CTRL_BUS_s_axi_U;
    predict_ensemble_vdy<1,4,32,32,32>* predict_ensemble_vdy_U1;
    predict_ensemble_wdI<1,2,32,32,1>* predict_ensemble_wdI_U2;
    predict_ensemble_xdS<1,1,8,8,8,8,32,8>* predict_ensemble_xdS_U3;
    predict_ensemble_xdS<1,1,8,8,8,8,32,8>* predict_ensemble_xdS_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<12> > LBoostTree_is_leaf_3_address0;
    sc_signal< sc_logic > LBoostTree_is_leaf_3_ce0;
    sc_signal< sc_lv<1> > LBoostTree_is_leaf_3_q0;
    sc_signal< sc_lv<12> > LBoostTree_is_leaf_0_address0;
    sc_signal< sc_logic > LBoostTree_is_leaf_0_ce0;
    sc_signal< sc_lv<1> > LBoostTree_is_leaf_0_q0;
    sc_signal< sc_lv<12> > LBoostTree_is_leaf_1_address0;
    sc_signal< sc_logic > LBoostTree_is_leaf_1_ce0;
    sc_signal< sc_lv<1> > LBoostTree_is_leaf_1_q0;
    sc_signal< sc_lv<12> > LBoostTree_is_leaf_2_address0;
    sc_signal< sc_logic > LBoostTree_is_leaf_2_ce0;
    sc_signal< sc_lv<1> > LBoostTree_is_leaf_2_q0;
    sc_signal< sc_lv<12> > LBoostTree_feature_i_address0;
    sc_signal< sc_logic > LBoostTree_feature_i_ce0;
    sc_signal< sc_lv<4> > LBoostTree_feature_i_q0;
    sc_signal< sc_lv<12> > LBoostTree_feature_i_3_address0;
    sc_signal< sc_logic > LBoostTree_feature_i_3_ce0;
    sc_signal< sc_lv<4> > LBoostTree_feature_i_3_q0;
    sc_signal< sc_lv<12> > LBoostTree_feature_i_2_address0;
    sc_signal< sc_logic > LBoostTree_feature_i_2_ce0;
    sc_signal< sc_lv<4> > LBoostTree_feature_i_2_q0;
    sc_signal< sc_lv<12> > LBoostTree_feature_i_1_address0;
    sc_signal< sc_logic > LBoostTree_feature_i_1_ce0;
    sc_signal< sc_lv<4> > LBoostTree_feature_i_1_q0;
    sc_signal< sc_lv<12> > LBoostTree_value_3_address0;
    sc_signal< sc_logic > LBoostTree_value_3_ce0;
    sc_signal< sc_lv<32> > LBoostTree_value_3_q0;
    sc_signal< sc_lv<12> > LBoostTree_value_0_address0;
    sc_signal< sc_logic > LBoostTree_value_0_ce0;
    sc_signal< sc_lv<32> > LBoostTree_value_0_q0;
    sc_signal< sc_lv<12> > LBoostTree_value_1_address0;
    sc_signal< sc_logic > LBoostTree_value_1_ce0;
    sc_signal< sc_lv<32> > LBoostTree_value_1_q0;
    sc_signal< sc_lv<12> > LBoostTree_value_2_address0;
    sc_signal< sc_logic > LBoostTree_value_2_ce0;
    sc_signal< sc_lv<32> > LBoostTree_value_2_q0;
    sc_signal< sc_lv<12> > LBoostTree_left_chil_3_address0;
    sc_signal< sc_logic > LBoostTree_left_chil_3_ce0;
    sc_signal< sc_lv<8> > LBoostTree_left_chil_3_q0;
    sc_signal< sc_lv<12> > LBoostTree_left_chil_2_address0;
    sc_signal< sc_logic > LBoostTree_left_chil_2_ce0;
    sc_signal< sc_lv<8> > LBoostTree_left_chil_2_q0;
    sc_signal< sc_lv<12> > LBoostTree_left_chil_1_address0;
    sc_signal< sc_logic > LBoostTree_left_chil_1_ce0;
    sc_signal< sc_lv<8> > LBoostTree_left_chil_1_q0;
    sc_signal< sc_lv<12> > LBoostTree_left_chil_address0;
    sc_signal< sc_logic > LBoostTree_left_chil_ce0;
    sc_signal< sc_lv<8> > LBoostTree_left_chil_q0;
    sc_signal< sc_lv<12> > LBoostTree_right_chi_3_address0;
    sc_signal< sc_logic > LBoostTree_right_chi_3_ce0;
    sc_signal< sc_lv<8> > LBoostTree_right_chi_3_q0;
    sc_signal< sc_lv<12> > LBoostTree_right_chi_2_address0;
    sc_signal< sc_logic > LBoostTree_right_chi_2_ce0;
    sc_signal< sc_lv<8> > LBoostTree_right_chi_2_q0;
    sc_signal< sc_lv<12> > LBoostTree_right_chi_1_address0;
    sc_signal< sc_logic > LBoostTree_right_chi_1_ce0;
    sc_signal< sc_lv<8> > LBoostTree_right_chi_1_q0;
    sc_signal< sc_lv<12> > LBoostTree_right_chi_address0;
    sc_signal< sc_logic > LBoostTree_right_chi_ce0;
    sc_signal< sc_lv<8> > LBoostTree_right_chi_q0;
    sc_signal< sc_lv<7> > i_fu_445_p2;
    sc_signal< sc_lv<7> > i_reg_738;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > zext_ln5_fu_471_p1;
    sc_signal< sc_lv<32> > zext_ln5_reg_743;
    sc_signal< sc_lv<1> > icmp_ln16_fu_439_p2;
    sc_signal< sc_lv<12> > mul_ln1_fu_483_p2;
    sc_signal< sc_lv<12> > mul_ln1_reg_749;
    sc_signal< sc_lv<1> > icmp_ln13_fu_489_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_754;
    sc_signal< sc_lv<1> > icmp_ln13_1_fu_495_p2;
    sc_signal< sc_lv<1> > icmp_ln13_1_reg_761;
    sc_signal< sc_lv<1> > icmp_ln13_2_fu_501_p2;
    sc_signal< sc_lv<1> > icmp_ln13_2_reg_768;
    sc_signal< sc_lv<1> > or_ln13_fu_507_p2;
    sc_signal< sc_lv<1> > or_ln13_reg_773;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > node_value_fu_602_p3;
    sc_signal< sc_lv<32> > node_value_reg_882;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > node_left_child_V_fu_609_p6;
    sc_signal< sc_lv<8> > node_left_child_V_reg_889;
    sc_signal< sc_lv<8> > node_right_child_V_fu_622_p6;
    sc_signal< sc_lv<8> > node_right_child_V_reg_894;
    sc_signal< sc_lv<1> > node_is_leaf_fu_560_p3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln31_fu_685_p2;
    sc_signal< sc_lv<1> > icmp_ln31_reg_909;
    sc_signal< sc_lv<1> > icmp_ln31_1_fu_691_p2;
    sc_signal< sc_lv<1> > icmp_ln31_1_reg_914;
    sc_signal< sc_lv<1> > icmp_ln31_2_fu_697_p2;
    sc_signal< sc_lv<1> > icmp_ln31_2_reg_919;
    sc_signal< sc_lv<1> > icmp_ln31_3_fu_703_p2;
    sc_signal< sc_lv<1> > icmp_ln31_3_reg_924;
    sc_signal< sc_lv<8> > select_ln31_fu_729_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_429_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > sum_0_reg_395;
    sc_signal< sc_lv<7> > i_0_reg_407;
    sc_signal< sc_lv<8> > curren_0_reg_418;
    sc_signal< sc_lv<64> > zext_ln1_2_fu_522_p1;
    sc_signal< sc_lv<64> > sext_ln544_fu_645_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > lshr_ln5_fu_451_p4;
    sc_signal< sc_lv<4> > trunc_ln1_fu_475_p1;
    sc_signal< sc_lv<4> > mul_ln1_fu_483_p1;
    sc_signal< sc_lv<2> > trunc_ln5_1_fu_461_p4;
    sc_signal< sc_lv<12> > zext_ln1_1_fu_513_p1;
    sc_signal< sc_lv<12> > add_ln1_fu_517_p2;
    sc_signal< sc_lv<1> > select_ln13_fu_546_p3;
    sc_signal< sc_lv<1> > select_ln13_1_fu_553_p3;
    sc_signal< sc_lv<4> > select_ln13_3_fu_567_p3;
    sc_signal< sc_lv<4> > select_ln13_4_fu_574_p3;
    sc_signal< sc_lv<32> > select_ln13_6_fu_588_p3;
    sc_signal< sc_lv<32> > select_ln13_7_fu_595_p3;
    sc_signal< sc_lv<4> > node_feature_index_V_fu_581_p3;
    sc_signal< sc_lv<5> > zext_ln215_fu_635_p1;
    sc_signal< sc_lv<5> > ret_V_fu_639_p2;
    sc_signal< sc_lv<32> > bitcast_ln31_fu_650_p1;
    sc_signal< sc_lv<32> > bitcast_ln31_1_fu_668_p1;
    sc_signal< sc_lv<8> > tmp_fu_654_p4;
    sc_signal< sc_lv<23> > trunc_ln31_fu_664_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_671_p4;
    sc_signal< sc_lv<23> > trunc_ln31_1_fu_681_p1;
    sc_signal< sc_lv<1> > or_ln31_fu_709_p2;
    sc_signal< sc_lv<1> > or_ln31_1_fu_713_p2;
    sc_signal< sc_lv<1> > and_ln31_fu_717_p2;
    sc_signal< sc_lv<1> > grp_fu_434_p2;
    sc_signal< sc_lv<1> > and_ln31_1_fu_723_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_lv<12> > mul_ln1_fu_483_p10;
    sc_signal< sc_lv<32> > ap_return;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<12> ap_const_lv12_C4;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_LBoostTree_feature_i_1_address0();
    void thread_LBoostTree_feature_i_1_ce0();
    void thread_LBoostTree_feature_i_2_address0();
    void thread_LBoostTree_feature_i_2_ce0();
    void thread_LBoostTree_feature_i_3_address0();
    void thread_LBoostTree_feature_i_3_ce0();
    void thread_LBoostTree_feature_i_address0();
    void thread_LBoostTree_feature_i_ce0();
    void thread_LBoostTree_is_leaf_0_address0();
    void thread_LBoostTree_is_leaf_0_ce0();
    void thread_LBoostTree_is_leaf_1_address0();
    void thread_LBoostTree_is_leaf_1_ce0();
    void thread_LBoostTree_is_leaf_2_address0();
    void thread_LBoostTree_is_leaf_2_ce0();
    void thread_LBoostTree_is_leaf_3_address0();
    void thread_LBoostTree_is_leaf_3_ce0();
    void thread_LBoostTree_left_chil_1_address0();
    void thread_LBoostTree_left_chil_1_ce0();
    void thread_LBoostTree_left_chil_2_address0();
    void thread_LBoostTree_left_chil_2_ce0();
    void thread_LBoostTree_left_chil_3_address0();
    void thread_LBoostTree_left_chil_3_ce0();
    void thread_LBoostTree_left_chil_address0();
    void thread_LBoostTree_left_chil_ce0();
    void thread_LBoostTree_right_chi_1_address0();
    void thread_LBoostTree_right_chi_1_ce0();
    void thread_LBoostTree_right_chi_2_address0();
    void thread_LBoostTree_right_chi_2_ce0();
    void thread_LBoostTree_right_chi_3_address0();
    void thread_LBoostTree_right_chi_3_ce0();
    void thread_LBoostTree_right_chi_address0();
    void thread_LBoostTree_right_chi_ce0();
    void thread_LBoostTree_value_0_address0();
    void thread_LBoostTree_value_0_ce0();
    void thread_LBoostTree_value_1_address0();
    void thread_LBoostTree_value_1_ce0();
    void thread_LBoostTree_value_2_address0();
    void thread_LBoostTree_value_2_ce0();
    void thread_LBoostTree_value_3_address0();
    void thread_LBoostTree_value_3_ce0();
    void thread_add_ln1_fu_517_p2();
    void thread_and_ln31_1_fu_723_p2();
    void thread_and_ln31_fu_717_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_bitcast_ln31_1_fu_668_p1();
    void thread_bitcast_ln31_fu_650_p1();
    void thread_features_address0();
    void thread_features_ce0();
    void thread_i_fu_445_p2();
    void thread_icmp_ln13_1_fu_495_p2();
    void thread_icmp_ln13_2_fu_501_p2();
    void thread_icmp_ln13_fu_489_p2();
    void thread_icmp_ln16_fu_439_p2();
    void thread_icmp_ln31_1_fu_691_p2();
    void thread_icmp_ln31_2_fu_697_p2();
    void thread_icmp_ln31_3_fu_703_p2();
    void thread_icmp_ln31_fu_685_p2();
    void thread_lshr_ln5_fu_451_p4();
    void thread_mul_ln1_fu_483_p1();
    void thread_mul_ln1_fu_483_p10();
    void thread_mul_ln1_fu_483_p2();
    void thread_node_feature_index_V_fu_581_p3();
    void thread_node_is_leaf_fu_560_p3();
    void thread_node_value_fu_602_p3();
    void thread_or_ln13_fu_507_p2();
    void thread_or_ln31_1_fu_713_p2();
    void thread_or_ln31_fu_709_p2();
    void thread_ret_V_fu_639_p2();
    void thread_select_ln13_1_fu_553_p3();
    void thread_select_ln13_3_fu_567_p3();
    void thread_select_ln13_4_fu_574_p3();
    void thread_select_ln13_6_fu_588_p3();
    void thread_select_ln13_7_fu_595_p3();
    void thread_select_ln13_fu_546_p3();
    void thread_select_ln31_fu_729_p3();
    void thread_sext_ln544_fu_645_p1();
    void thread_tmp_3_fu_671_p4();
    void thread_tmp_fu_654_p4();
    void thread_trunc_ln1_fu_475_p1();
    void thread_trunc_ln31_1_fu_681_p1();
    void thread_trunc_ln31_fu_664_p1();
    void thread_trunc_ln5_1_fu_461_p4();
    void thread_zext_ln1_1_fu_513_p1();
    void thread_zext_ln1_2_fu_522_p1();
    void thread_zext_ln215_fu_635_p1();
    void thread_zext_ln5_fu_471_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
