// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_ncg_H__
#define __predict_ensemble_ncg_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_ncg_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_ncg_ram) {
        ram[0] = "0b00111101011000111001110101011110";
        ram[1] = "0b00111110111101111101101011101000";
        ram[2] = "0b00111101100001110101011010000110";
        ram[3] = "0b00111101001110110100110000111100";
        ram[4] = "0b10111110000010000101010100010001";
        ram[5] = "0b00111111000000100000111111000011";
        ram[6] = "0b00111111011101110000001101101101";
        ram[7] = "0b00111100110000001001001111011001";
        ram[8] = "0b10111100100000101000110000110111";
        ram[9] = "0b10111100000100001110011001101101";
        ram[10] = "0b00111101100100010110100011111001";
        ram[11] = "0b00111101100111011011110100110000";
        ram[12] = "0b00111111001100001101110000010010";
        ram[13] = "0b00111101100010011111011110110110";
        ram[14] = "0b00111110000000010101111111001100";
        ram[15] = "0b10111101011010101110000110001011";
        ram[16] = "0b00111011100101001010001010111010";
        ram[17] = "0b00111110110001110010100110010001";
        ram[18] = "0b00111110001000101001010101100100";
        ram[19] = "0b00111101000101110001001110101101";
        ram[20] = "0b00111110111101011111101000000001";
        ram[21] = "0b00111110111101001001011010001001";
        ram[22] = "0b00111111011011101111101110100000";
        ram[23] = "0b00111110101000000111000010111001";
        ram[24] = "0b00111111011010110101101011011001";
        ram[25] = "0b00111111010101010111111011001100";
        ram[26] = "0b00111111000110011001011010100111";
        ram[27] = "0b00111100011001101111111101111110";
        ram[28] = "0b00111111000110100010001001100000";
        ram[29] = "0b10111100100111101110100010001110";
        ram[30] = "0b10111101100011110010101101100111";
        ram[31] = "0b00111101100110001111000011000111";
        ram[32] = "0b10111101000000111010101001111010";
        ram[33] = "0b00111110100010100001100110000111";
        ram[34] = "0b00111111000011100001101010100100";
        ram[35] = "0b00111110000011011001100100000011";
        ram[36] = "0b00111100100010100011101101011000";
        ram[37] = "0b10111100111011100000010011000000";
        ram[38] = "0b00111101011110001111111011101111";
        ram[39] = "0b00111101011100011101001011100001";
        ram[40] = "0b10111100000001100111101011011001";
        ram[41] = "0b10111011100110001110110110100010";
        ram[42] = "0b00111100111011001011100101100111";
        ram[43] = "0b00111101100011011100011011100011";
        ram[44] = "0b00111101001001101100111000110110";
        ram[45] = "0b10111100111010100110001110110111";
        ram[46] = "0b10111011110010111101000100100100";
        ram[47] = "0b00111101001010101101100100100111";
        ram[48] = "0b00111110000010101000011000001110";
        ram[49] = "0b10111010100000100010011110001101";
        ram[50] = "0b00111101001100111110101010110011";
        ram[51] = "0b00111110000001101000011011101000";
        ram[52] = "0b00111110111110000000001100000100";
        ram[53] = "0b00111110101010010001000101001001";
        ram[54] = "0b10111101010001011010111001100000";
        ram[55] = "0b00111111011011010100101010010000";
        ram[56] = "0b00111111000111010000111011101101";
        ram[57] = "0b00111111001000011100001011010010";
        ram[58] = "0b00111110011110010011111100101001";
        ram[59] = "0b00111110011111000101100000100101";
        ram[60] = "0b00111100111010000001100010000011";
        ram[61] = "0b00111111010111000011010101101001";
        ram[62] = "0b10111100111110011111000000011100";
        ram[63] = "0b00111100110101101001001010110100";
        ram[64] = "0b10111100100010010001111000100001";
        ram[65] = "0b10111011111011111111010111000111";
        ram[66] = "0b10111101001101100110110001101110";
        ram[67] = "0b00111111000100101110100011000000";
        ram[68] = "0b00111110110111101110100110011010";
        ram[69] = "0b00111111010011111101010011110001";
        ram[70] = "0b00111100100011000101110010011010";
        ram[71] = "0b10111101000010001011100101111000";
        ram[72] = "0b10111011110100110110101101001100";
        ram[73] = "0b00111111001010001111111011101111";
        ram[74] = "0b00111110101100111100111111110110";
        ram[75] = "0b00111110110100100101101110111000";
        ram[76] = "0b10111100101111100110001111101001";
        ram[77] = "0b00111110110010000010001001010111";
        ram[78] = "0b00111111001011110110000011110010";
        ram[79] = "0b00111101000111000000010101001111";
        ram[80] = "0b00111111001010100010111010010000";
        ram[81] = "0b10111100100001110011111111111011";
        ram[82] = "0b00111111000011111100111110010010";
        ram[83] = "0b00111110101001001100000100100010";
        ram[84] = "0b00111110110100001011101010100110";
        ram[85] = "0b00111101010000010111111111000111";
        ram[86] = "0b00111111001110010110011001101011";
        ram[87] = "0b00111110101011001011110110011000";
        ram[88] = "0b00111110100110101010110001010100";
        ram[89] = "0b00111111001011001010011011101100";
        ram[90] = "0b00111111001001000111100110000001";
        ram[91] = "0b00111111010010100010111010010000";
        ram[92] = "0b10111101001010000010110001101111";
        ram[93] = "0b00111101000101010111110111100001";
        ram[94] = "0b00111110111111111001010110110011";
        ram[95] = "0b00111111001100101011010011011001";
        ram[96] = "0b00111100100000100011010000100010";
        ram[97] = "0b00111111000101111100010000111011";
        ram[98] = "0b00111110110011101010111011000000";
        ram[99] = "0b00111011010001110100101110000100";
        ram[100] = "0b00111101001011100010101110001100";
        ram[101] = "0b00111110110111010011100101010100";
        ram[102] = "0b10111011100010011011000011101110";
        ram[103] = "0b10111100110110101010001011100100";
        ram[104] = "0b00111111000101001110110011101010";
        ram[105] = "0b00111110001111001011011010000101";
        ram[106] = "0b10111100101110110011010000011110";
        ram[107] = "0b00111111000111101000101110100000";
        ram[108] = "0b00111110111111011110111010111011";
        ram[109] = "0b10111011111111000000010011001001";
        ram[110] = "0b10111100101011111001100001110100";
        ram[111] = "0b00111011100000010101010111010110";
        ram[112] = "0b00111100111010000000000101110001";
        ram[113] = "0b10111100100010111110001011111000";
        ram[114] = "0b00111111000001010000010001001111";
        ram[115] = "0b00111100110011111010100010110101";
        ram[116] = "0b00111111001110111011111111101000";
        ram[117] = "0b10111100011101110101010100110111";
        ram[118] = "0b00111111000110101000000100000010";
        ram[119] = "0b00111011110111000100010000111001";
        ram[120] = "0b00111110111000100101000111000010";
        ram[121] = "0b00111110010000110001110110110100";
        ram[122] = "0b00111110001110011001001111010101";
        ram[123] = "0b10111100111100100011001001001101";
        ram[124] = "0b10111010101110111101001110000000";
        ram[125] = "0b00111110100101100111101100111110";
        ram[126] = "0b00111110110001100101101100100001";
        ram[127] = "0b10111010100100100100011010111111";
        ram[128] = "0b00111100001011000011111010111000";
        ram[129] = "0b00111111001101010001111100111111";
        ram[130] = "0b00111111001010001100010000110111";
        ram[131] = "0b10111011010011010000111111101001";
        ram[132] = "0b10111100100001111111011001101111";
        ram[133] = "0b00111100111100000010101000110101";
        ram[134] = "0b00111110000000100100000011111011";
        ram[135] = "0b10111100100011010000010001100000";
        ram[136] = "0b00111111001111010011010011110000";
        ram[137] = "0b10111100100101010100011001001110";
        ram[138] = "0b10111010011010111110110111111010";
        ram[139] = "0b00111100101000110111000001001000";
        ram[140] = "0b00111001100101100111100001111101";
        ram[141] = "0b00111110100100001010001010000111";
        ram[142] = "0b00111111010001010010011110110011";
        ram[143] = "0b00111110111000011000001001100110";
        ram[144] = "0b00111111001011000111000010000110";
        ram[145] = "0b10111100101000011110001111101011";
        ram[146] = "0b00111111000010110111010110100111";
        ram[147] = "0b10111011111000011110111101110100";
        ram[148] = "0b00111011100101101101010011000011";
        ram[149] = "0b00111010110000100110000100111001";
        ram[150] = "0b00111101000100011101010001110100";
        ram[151] = "0b00111110111110100010111001111111";
        ram[152] = "0b00111110111010001000001100010010";
        ram[153] = "0b10111101000111010111000000011110";
        ram[154] = "0b10111100011010000100011010100110";
        ram[155] = "0b00111100001010101111111111110011";
        ram[156] = "0b00111111010011011111110001001100";
        ram[157] = "0b00111110111010110100001010101011";
        ram[158] = "0b00111111000001010000000001010000";
        ram[159] = "0b00111011000110000011110101111001";
        ram[160] = "0b10111100110101000001011101000100";
        ram[161] = "0b10111100011111110100011101110011";
        ram[162] = "0b00111111011011010011010011110000";
        ram[163] = "0b00111111010100101111000111111110";
        ram[164] = "0b00111100000010010110100110100001";
        ram[165] = "0b10111100001111001101111111110000";
        ram[166] = "0b00111100000010110101010001011100";
        ram[167] = "0b00111101000000011010001001100010";
        ram[168] = "0b00111100000100110111000010001011";
        ram[169] = "0b00111110111000011011011010110011";
        ram[170] = "0b00111110111001000101011010110100";
        ram[171] = "0b10111010111100110000000111101011";
        ram[172] = "0b10111100011101110011001110101001";
        ram[173] = "0b00111111001101000110110110100100";
        ram[174] = "0b00111111010111011010101000001101";
        ram[175] = "0b10111100110001000110000011101110";
        ram[176] = "0b00111111010010000110000001000110";
        ram[177] = "0b00111100110011100001011000001110";
        ram[178] = "0b00111100010100001111000111110101";
        ram[179] = "0b10111010111101001101011110101110";
        ram[180] = "0b00111011110101101101110000011010";
        ram[181] = "0b00111100001001011000101100111111";
        ram[182] = "0b00111110001111011011000101100100";
        ram[183] = "0b10111100011101111001110010000100";
        ram[184] = "0b00111100000111011100001011110100";
        for (unsigned i = 185; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_ncg) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_ncg_ram* meminst;


SC_CTOR(predict_ensemble_ncg) {
meminst = new predict_ensemble_ncg_ram("predict_ensemble_ncg_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_ncg() {
    delete meminst;
}


};//endmodule
#endif
