// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_cyx_H__
#define __predict_ensemble_cyx_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_cyx_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_cyx_ram) {
        ram[0] = "0b00111101001110110100110000111100";
        ram[1] = "0b00111001101110100001111101001011";
        ram[2] = "0b00111101010100110010010100001011";
        ram[3] = "0b10111010000000101100111101010011";
        ram[4] = "0b00111100111111110110001010110111";
        ram[5] = "0b00111001101011111010001011110000";
        ram[6] = "0b00111111011010111111011000001010";
        ram[7] = "0b00111101011101100011101100100101";
        ram[8] = "0b10111001111011101000110100010001";
        ram[9] = "0b00111110110010010101110010100111";
        ram[10] = "0b00111101100010100001101101011100";
        ram[11] = "0b10111000001110001000110010100100";
        ram[12] = "0b00111001110010101110011001000011";
        ram[13] = "0b10111010000010011010000000100111";
        ram[14] = "0b00111101000011100110110100010110";
        ram[15] = "0b00111001100100110101001100101110";
        ram[16] = "0b00111111011000001101001010100010";
        ram[17] = "0b00111111010110101100101000000100";
        ram[18] = "0b00111001001111001011111001100010";
        ram[19] = "0b00111111010101000110110000110011";
        ram[20] = "0b10111001100100101100110011110111";
        ram[21] = "0b00111111011100001100111011110110";
        ram[22] = "0b00111001100000001111100110010000";
        ram[23] = "0b00111110000011000001100011111000";
        ram[24] = "0b00111110101011010010010100100100";
        ram[25] = "0b00111110000011011010101111100010";
        ram[26] = "0b00111101100111001011000101000110";
        ram[27] = "0b00111000111111011100000101100001";
        ram[28] = "0b10111001101101100111001111000101";
        ram[29] = "0b00111101110000111010000110010000";
        ram[30] = "0b00111001010010100110000000001011";
        ram[31] = "0b10111001001100010011010110011000";
        ram[32] = "0b00111110001001111011101001100111";
        ram[33] = "0b00111110010011000000010111010101";
        ram[34] = "0b10111000010010010101001110011100";
        ram[35] = "0b00111111000000000001001001011010";
        ram[36] = "0b00111110010010010011100110101000";
        ram[37] = "0b00110111111100110100010100000111";
        ram[38] = "0b00111001000000001111100110010000";
        ram[39] = "0b10111001000101001110010111010110";
        ram[40] = "0b00110110010010010101001110011100";
        ram[41] = "0b00111001001010011101111010001011";
        ram[42] = "0b00111111010011000011101100111111";
        ram[43] = "0b00111110010100001100100001000111";
        ram[44] = "0b10111000111010101110000110001011";
        ram[45] = "0b10111000111001101010111111001101";
        ram[46] = "0b00111111011001011111001100001110";
        ram[47] = "0b00111110100001110011110100111010";
        ram[48] = "0b00111000111001101010111111001101";
        ram[49] = "0b00111110111110001110111100010011";
        ram[50] = "0b00111110011000011100111010101111";
        ram[51] = "0b00111110100100001011010001111100";
        ram[52] = "0b00111000111001101010111111001101";
        ram[53] = "0b10111000101000111001001111101110";
        ram[54] = "0b00111110101000111001010110000001";
        ram[55] = "0b00111110110001110111011100101001";
        ram[56] = "0b00111110001110011001001111010101";
        ram[57] = "0b00111110110000001011010011100001";
        ram[58] = "0b00111110100000011111000110101110";
        ram[59] = "0b00111110101100000011000100100111";
        ram[60] = "0b00111111000001001010011000010001";
        ram[61] = "0b00110111110110100001101010010011";
        ram[62] = "0b00111001000000110001001001101111";
        ram[63] = "0b10111000111110011000111110100011";
        ram[64] = "0b00111110100011001101101110111110";
        ram[65] = "0b00111000101100000010100100101000";
        ram[66] = "0b00111111011101010111110101111100";
        ram[67] = "0b10110110010010010101001110011100";
        ram[68] = "0b00111000010101011110100011010101";
        ram[69] = "0b10111000101111101101011101000001";
        ram[70] = "0b00110110010010010101001110011100";
        ram[71] = "0b00111000000011101001101100111001";
        ram[72] = "0b00111110100000100110001111111010";
        ram[73] = "0b00111111011101100001100010001011";
        ram[74] = "0b00111000100010000101000010011100";
        ram[75] = "0b00111110011101010010101011000111";
        ram[76] = "0b10111000000001100011011110111101";
        ram[77] = "0b00111111010001011010000000010111";
        ram[78] = "0b10111000101000111001001111101110";
        ram[79] = "0b10110111101100000010100100101000";
        ram[80] = "0b00110101100001100011011110111101";
        ram[81] = "0b00111101110100110000010110010110";
        ram[82] = "0b10111000010101011110100011010101";
        ram[83] = "0b00111110111001011010101110011111";
        ram[84] = "0b00111111011001001110100111010101";
        ram[85] = "0b00111001000010000101000010011100";
        ram[86] = "0b00111111000111001001100000101101";
        ram[87] = "0b00111111011110100011100001110110";
        ram[88] = "0b00111101101010000011100001111110";
        ram[89] = "0b10111000100110110011000001110011";
        ram[90] = "0b00111000010001010010000111011110";
        ram[91] = "0b00111111011100100010111001101111";
        ram[92] = "0b00111000001010111111011101101010";
        ram[93] = "0b00111000001111001011111001100010";
        ram[94] = "0b00110111101001111100010110101100";
        ram[95] = "0b00111101111000001100000111111101";
        ram[96] = "0b10111000000010100110100101111011";
        ram[97] = "0b10111000000011101001101100111001";
        ram[98] = "0b00111110101010100100011000111001";
        ram[99] = "0b00111110111010111111001000001010";
        ram[100] = "0b00111110101100110101110000111010";
        ram[101] = "0b00111111000110000000101110101010";
        ram[102] = "0b10111000010110100001101010010011";
        ram[103] = "0b00111000000001100011011110111101";
        ram[104] = "0b00111110101111000100001111110110";
        ram[105] = "0b00110111001001111100010110101100";
        ram[106] = "0b00111110000000000011100100100110";
        ram[107] = "0b00111110101110110000010101010011";
        ram[108] = "0b00111111001111100000000110101100";
        ram[109] = "0b00110110111010101110000110001011";
        ram[110] = "0b10110111001110001000110010100100";
        ram[111] = "0b10000000000000000000000000000000";
        ram[112] = "0b10110111111010101110000110001011";
        ram[113] = "0b00111110000000000000000000000000";
        ram[114] = "0b00110111111100110100010100000111";
        ram[115] = "0b00110111100101101111111010110101";
        ram[116] = "0b00111111011101000101011101101101";
        ram[117] = "0b00111110000011011001100100000011";
        ram[118] = "0b00110111100101101111111010110101";
        ram[119] = "0b00111110110010100111101100101101";
        ram[120] = "0b00111110000101110100111101110010";
        ram[121] = "0b00111111000000100110101111111000";
        ram[122] = "0b10110111111010101110000110001011";
        ram[123] = "0b00110111111000100111111000001111";
        ram[124] = "0b00111110001100110100101000000010";
        ram[125] = "0b10110110110010010101001110011100";
        ram[126] = "0b00110111100111110110001000110000";
        ram[127] = "0b00111111000101011101000101110000";
        ram[128] = "0b00111110001111011110011000010101";
        ram[129] = "0b00110110111010101110000110001011";
        ram[130] = "0b00111111000111010001100100100110";
        ram[131] = "0b00111111000110010011001110001111";
        ram[132] = "0b00111110100101111011010011100101";
        ram[133] = "0b10110111001001111100010110101100";
        ram[134] = "0b10111000000010100110100101111011";
        ram[135] = "0b00110101100001100011011110111101";
        ram[136] = "0b00110111101110001000110010100100";
        ram[137] = "0b00111111011110101001001111000000";
        ram[138] = "0b00111110100000110000101100111001";
        ram[139] = "0b00111111000101011000101100101111";
        ram[140] = "0b00111101111100010100011101101011";
        ram[141] = "0b00110111010010010101001110011100";
        ram[142] = "0b00111110111111011111010000011011";
        ram[143] = "0b10110110101001111100010110101100";
        ram[144] = "0b10110111101100000010100100101000";
        ram[145] = "0b10000000000000000000000000000000";
        ram[146] = "0b00110110101001111100010110101100";
        ram[147] = "0b00111110101011100111101110100010";
        ram[148] = "0b00111110100101000101110100100000";
        ram[149] = "0b00111111000111010110110011101000";
        ram[150] = "0b00111110110001110101011100001100";
        ram[151] = "0b00110111000101101111111010110101";
        ram[152] = "0b00111111000111010000111011101101";
        ram[153] = "0b00110110000001100011011110111101";
        ram[154] = "0b00110111010110100001101010010011";
        ram[155] = "0b10110111011110111010100010000010";
        ram[156] = "0b00111110110100010000100101001010";
        ram[157] = "0b00111111010000010010101000100000";
        ram[158] = "0b10110110111010101110000110001011";
        ram[159] = "0b00110111000101101111111010110101";
        ram[160] = "0b00111111001001110100010111010000";
        ram[161] = "0b00111111000010010000000100001000";
        ram[162] = "0b00111111000011110000101001110000";
        ram[163] = "0b00111110111010101100011110111001";
        ram[164] = "0b00111111010000101010000111000111";
        ram[165] = "0b00111110111101100101001001011001";
        ram[166] = "0b00111111000000011111011010011000";
        ram[167] = "0b00111110101110101100100111110011";
        ram[168] = "0b00110111010010010101001110011100";
        ram[169] = "0b00110111000001100011011110111101";
        ram[170] = "0b00111110110111101010010001000100";
        ram[171] = "0b10110110000001100011011110111101";
        ram[172] = "0b10110111001110001000110010100100";
        ram[173] = "0b00110110111010101110000110001011";
        ram[174] = "0b00111111000011010001011101000000";
        ram[175] = "0b10110110010010010101001110011100";
        ram[176] = "0b00111111000101000000110111100101";
        ram[177] = "0b10110101100001100011011110111101";
        ram[178] = "0b00110110101001111100010110101100";
        ram[179] = "0b10110110111010101110000110001011";
        ram[180] = "0b00111110111100110011111111101010";
        ram[181] = "0b00000000000000000000000000000000";
        ram[182] = "0b00110110010010010101001110011100";
        ram[183] = "0b10110101100001100011011110111101";
        ram[184] = "0b00110110010010010101001110011100";
        ram[185] = "0b00111111001110110111011000011101";
        ram[186] = "0b00111111000000100111100001011011";
        ram[187] = "0b10110101100001100011011110111101";
        ram[188] = "0b00110110101001111100010110101100";
        ram[189] = "0b10110111000001100011011110111101";
        for (unsigned i = 190; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_cyx) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_cyx_ram* meminst;


SC_CTOR(predict_ensemble_cyx) {
meminst = new predict_ensemble_cyx_ram("predict_ensemble_cyx_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_cyx() {
    delete meminst;
}


};//endmodule
#endif
