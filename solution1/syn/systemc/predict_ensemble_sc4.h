// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_sc4_H__
#define __predict_ensemble_sc4_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_sc4_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_sc4_ram) {
        ram[0] = "0b00111101100100001111111000000100";
        ram[1] = "0b00111101100001000010011101000010";
        ram[2] = "0b00111101101111010101110000110001";
        ram[3] = "0b00111110111110011100110101100000";
        ram[4] = "0b10111101101111010100000011101110";
        ram[5] = "0b00111111000001111010000011010111";
        ram[6] = "0b00111111010110001011101000110000";
        ram[7] = "0b00111110111010000110011000011011";
        ram[8] = "0b10111101011010001010100000101010";
        ram[9] = "0b00111101100101101000010010001100";
        ram[10] = "0b00111011001001000011101110110100";
        ram[11] = "0b00111101111010011001111110100001";
        ram[12] = "0b00111110010101011011110100001110";
        ram[13] = "0b00111110110010101110000101101001";
        ram[14] = "0b00111100111011110110100101000100";
        ram[15] = "0b00111110111100100111010111101111";
        ram[16] = "0b00111110000001100100010001010010";
        ram[17] = "0b00111001101011111010001011110000";
        ram[18] = "0b10111101000100010010001000110010";
        ram[19] = "0b10111100001101110010110001010010";
        ram[20] = "0b00111100001100001001001000000100";
        ram[21] = "0b10111011011101111011100111100000";
        ram[22] = "0b00111101001011001001110100010111";
        ram[23] = "0b00111110111010011110011001000111";
        ram[24] = "0b00111111011011110111110010011010";
        ram[25] = "0b00111110110011000011100100010101";
        ram[26] = "0b00111111000000100111111000100000";
        ram[27] = "0b00111101000001100011111000001000";
        ram[28] = "0b00111111001100000111100101001111";
        ram[29] = "0b10111100100000110110000000000111";
        ram[30] = "0b10111101010101101101111101000000";
        ram[31] = "0b10111100010100000010000000111110";
        ram[32] = "0b00111101001001001001110000101100";
        ram[33] = "0b00111101010001000010110010000000";
        ram[34] = "0b00111101110101101101000100011000";
        ram[35] = "0b10111101001011000010110011100100";
        ram[36] = "0b00111011111000111110011011000101";
        ram[37] = "0b10111100101111101110001111010110";
        ram[38] = "0b00111110000011110100010110011110";
        ram[39] = "0b00111111000000011100000010101001";
        ram[40] = "0b00111110011111100001010111001010";
        ram[41] = "0b10111101000111100001100011110000";
        ram[42] = "0b00111011111001000001100100011010";
        ram[43] = "0b00111110100001011100100100011101";
        ram[44] = "0b00111111011110000111011001111101";
        ram[45] = "0b00111110010010111110111010000000";
        ram[46] = "0b00111101100111001000011111011011";
        ram[47] = "0b00111110110111100011110000110010";
        ram[48] = "0b00111100101011010010110111001011";
        ram[49] = "0b00111101000100100010100001010110";
        ram[50] = "0b00111011110010101000100111111100";
        ram[51] = "0b10111100101011100101011110010111";
        ram[52] = "0b00111110001010010001011001000100";
        ram[53] = "0b00111110111011011000101001110110";
        ram[54] = "0b00111111000000000000000010101000";
        ram[55] = "0b00111101111111001011101111000011";
        ram[56] = "0b00111110101000001100101000011101";
        ram[57] = "0b00111110101100111010100000111111";
        ram[58] = "0b00111110100111101000010100010010";
        ram[59] = "0b00111110111100101101100011100100";
        ram[60] = "0b00111111011001110000101101111100";
        ram[61] = "0b00111110100001101101101011101100";
        ram[62] = "0b00111111000010101110110111111110";
        ram[63] = "0b10111100010010011000010111110000";
        ram[64] = "0b00111100011000011010110001011000";
        ram[65] = "0b10111101000011110111010001000111";
        ram[66] = "0b00111010111000001010100001001100";
        ram[67] = "0b00111111000011001010000101001001";
        ram[68] = "0b00111110101110100001100010011100";
        ram[69] = "0b00111110111010111010001011100000";
        ram[70] = "0b10111100001100001100000000100111";
        ram[71] = "0b00111110001111001011011001000001";
        ram[72] = "0b00111100100000101000101000011110";
        ram[73] = "0b00111100000001111111000000100100";
        ram[74] = "0b10111100000000010011100001111010";
        ram[75] = "0b00111100111001101010000100011111";
        ram[76] = "0b00111100001000111100001000010010";
        ram[77] = "0b00111110100011001110101101111001";
        ram[78] = "0b00111110100111100110001100100000";
        ram[79] = "0b00111110100010100001100110000111";
        ram[80] = "0b00111110110101111001100010110111";
        ram[81] = "0b00111101001110000110100011111101";
        ram[82] = "0b00111110101110000100001001110100";
        ram[83] = "0b00111111011011000001001001111011";
        ram[84] = "0b00111110111100000001111011101111";
        ram[85] = "0b00111011110000010110110111110100";
        ram[86] = "0b10111010110100110000011010100011";
        ram[87] = "0b00111110011101000001010101101110";
        ram[88] = "0b00111110110011011100111011100001";
        ram[89] = "0b00111110110110110001111101101000";
        ram[90] = "0b00111101000000000000110110100010";
        ram[91] = "0b10111100001011000001100011111000";
        ram[92] = "0b00111011000011001101011000111101";
        ram[93] = "0b10111011011010100100101010001100";
        ram[94] = "0b00111100111101111111110011111100";
        ram[95] = "0b00111110111100010111010001100000";
        ram[96] = "0b00111111000111001101100110010100";
        ram[97] = "0b00111111000100011100011110111101";
        ram[98] = "0b00111110110010101110011000100001";
        ram[99] = "0b00111011110010110100001010001001";
        ram[100] = "0b00111110110101110001010000110100";
        ram[101] = "0b10111100111101001111110101101101";
        ram[102] = "0b10111100000100001011010000011000";
        ram[103] = "0b00111100010000011100011000001001";
        ram[104] = "0b00111110111001100000111010110110";
        ram[105] = "0b00111100011000010110110101101110";
        ram[106] = "0b00111111001000010111010001100000";
        ram[107] = "0b00111100000010101101001001010110";
        ram[108] = "0b00111100101010100010101000001011";
        ram[109] = "0b00111111000001100100010100011100";
        ram[110] = "0b00111110111101010100100111011000";
        ram[111] = "0b00111110110000100011100100011101";
        ram[112] = "0b00111110111010000110000000110101";
        ram[113] = "0b00111111001111101010101000001000";
        ram[114] = "0b10111010010101010001111110000010";
        ram[115] = "0b00111010010010001000101001001000";
        ram[116] = "0b10111100000000110111101101001010";
        ram[117] = "0b00111110001011110101100000111010";
        ram[118] = "0b00111111000110000100111101001100";
        ram[119] = "0b00111110110110000110111110001011";
        ram[120] = "0b00111110111101010100011001101111";
        ram[121] = "0b00111110100110110100001010001001";
        ram[122] = "0b00111100110100010011111110001110";
        ram[123] = "0b00111011010010100111000011010010";
        ram[124] = "0b10111101001000010101101110011010";
        ram[125] = "0b00111111011011100000101011011001";
        ram[126] = "0b00111110111010001010101111010110";
        ram[127] = "0b10111100101101001110001100110111";
        ram[128] = "0b10111100001100011100000000000001";
        ram[129] = "0b10111100100011100001010100000001";
        ram[130] = "0b10111010110111101000111101101101";
        ram[131] = "0b10111011010010010100001011010101";
        ram[132] = "0b00111011111000110101100000101010";
        ram[133] = "0b00111100100001000001001001001001";
        ram[134] = "0b00111110110001100011010010011000";
        ram[135] = "0b10111100101000001011110000111000";
        ram[136] = "0b10111010110001111100000011110100";
        ram[137] = "0b00111100100000110100000010010010";
        ram[138] = "0b10111011111011110110111110001111";
        ram[139] = "0b00111110110110100101100011010110";
        ram[140] = "0b00111100001000011100111011110010";
        ram[141] = "0b00111110011110100010111001111111";
        ram[142] = "0b00111110101100111011101101100010";
        ram[143] = "0b10111011101000000010001100100001";
        ram[144] = "0b00111011100010111111110000100010";
        ram[145] = "0b00111110011101010010100000101000";
        ram[146] = "0b00111011101000100100010001100011";
        ram[147] = "0b00111100110110001111000011000111";
        ram[148] = "0b00111101110001000101001000111111";
        ram[149] = "0b00111110101110010001001111101000";
        ram[150] = "0b00111111000001101000001011011000";
        ram[151] = "0b10111100110110011001111011011000";
        ram[152] = "0b00111111001100110001111101000111";
        ram[153] = "0b10111100000000100111101101110000";
        ram[154] = "0b00111111010000001110000000010001";
        ram[155] = "0b00111011111001000000100001010011";
        ram[156] = "0b00111111000010011101011010101110";
        ram[157] = "0b00111110110010111010001011100000";
        ram[158] = "0b00111110010100110101101001000010";
        ram[159] = "0b00111110111001010110001000111001";
        ram[160] = "0b00111110111110100010111001111111";
        ram[161] = "0b00111011011101100001011001110010";
        ram[162] = "0b00111100100000101001000001101001";
        ram[163] = "0b10111100110001111000101001101110";
        ram[164] = "0b00111110111101101001011000111110";
        ram[165] = "0b10111100001111011110001111111100";
        ram[166] = "0b10111010101010100000000000011001";
        ram[167] = "0b00111111000101001011110100100011";
        ram[168] = "0b00111111001001100011011110001011";
        ram[169] = "0b00111111001000100111100011000000";
        ram[170] = "0b10111100010011100000001100101110";
        ram[171] = "0b10111100101111101101000011110110";
        ram[172] = "0b10111011111110101100011000000100";
        ram[173] = "0b10111100100011100010111000101100";
        ram[174] = "0b00111110111000000110110011001010";
        ram[175] = "0b10111011111110001111100010100101";
        ram[176] = "0b00111011000011000001110110110000";
        ram[177] = "0b00111111000100010110010011101001";
        ram[178] = "0b00111100011101001000110000101110";
        ram[179] = "0b10111011100110011111000110101110";
        ram[180] = "0b00111100100001110101100100100101";
        ram[181] = "0b00111100000101110101101011111011";
        ram[182] = "0b10111011010110000111011100100101";
        ram[183] = "0b00111111001101100101000010110101";
        ram[184] = "0b10111011010101000010001111011001";
        ram[185] = "0b00111100010000100100100000001111";
        ram[186] = "0b00111011100101000010010011100110";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_sc4) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_sc4_ram* meminst;


SC_CTOR(predict_ensemble_sc4) {
meminst = new predict_ensemble_sc4_ram("predict_ensemble_sc4_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_sc4() {
    delete meminst;
}


};//endmodule
#endif
