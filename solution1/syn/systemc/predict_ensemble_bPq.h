// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_bPq_H__
#define __predict_ensemble_bPq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_bPq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_bPq_ram) {
        ram[0] = "0b00111100010101010110001010011110";
        ram[1] = "0b00111111000000011000101111100111";
        ram[2] = "0b00111101011100001010011011111100";
        ram[3] = "0b10111010100000001111100110010000";
        ram[4] = "0b00111011010111110100011111111010";
        ram[5] = "0b10111011000101100100011000101000";
        ram[6] = "0b00111111011110000011101001000011";
        ram[7] = "0b00111101010100110010010100001011";
        ram[8] = "0b00111010010101000001001100010010";
        ram[9] = "0b10111010001011100001000001001001";
        ram[10] = "0b00111111010110001011101000110000";
        ram[11] = "0b00111101110010101110100111101110";
        ram[12] = "0b00111111000011100011010111111000";
        ram[13] = "0b00111110101101100110001101000001";
        ram[14] = "0b00111110010110001000000101011110";
        ram[15] = "0b00111110110010100101010101101101";
        ram[16] = "0b10111010000110100110011100011111";
        ram[17] = "0b00111001101011000111110110100010";
        ram[18] = "0b00111110111100001110100011101010";
        ram[19] = "0b00111111001010100100001100000011";
        ram[20] = "0b00111110010000000000100100101101";
        ram[21] = "0b00111110011101100000111100011011";
        ram[22] = "0b00111010100111110100000010100011";
        ram[23] = "0b10111010100000111101101111000010";
        ram[24] = "0b00111110111010111100100011000001";
        ram[25] = "0b00111111001001000110111011000001";
        ram[26] = "0b00111010000010101110111110110011";
        ram[27] = "0b00111110101000101011101001011010";
        ram[28] = "0b00111111011100010101000010101001";
        ram[29] = "0b00111010001010011101111010001011";
        ram[30] = "0b00000000000000000000000000000000";
        ram[31] = "0b00111001100100001011010000011000";
        ram[32] = "0b10111010001000100100010001100011";
        ram[33] = "0b00111001110001011010100000010101";
        ram[34] = "0b10111001101110101010010110000011";
        ram[35] = "0b00111110100100010000011010001010";
        ram[36] = "0b10111010010000101100010111100011";
        ram[37] = "0b00111111010100111010010101111111";
        ram[38] = "0b00111010000110111011011010101010";
        ram[39] = "0b00111110100011111010011110101000";
        ram[40] = "0b00111110100111010000000100011001";
        ram[41] = "0b00111110010110110010011101000110";
        ram[42] = "0b00111111010001100110111110110101";
        ram[43] = "0b00111110111011001110010111110111";
        ram[44] = "0b10111010000000111001100010100110";
        ram[45] = "0b00111001110111111101111011111000";
        ram[46] = "0b10111000001000111001001111101110";
        ram[47] = "0b00111001100010101110111110110011";
        ram[48] = "0b00111101110111111101011100011011";
        ram[49] = "0b00111000000111110110001000110000";
        ram[50] = "0b10111010010001100010111001001101";
        ram[51] = "0b00111000011110111010100010000010";
        ram[52] = "0b10111001011111111101101001000000";
        ram[53] = "0b00111001010110010000111000100100";
        ram[54] = "0b00111110000000101011001001111101";
        ram[55] = "0b00111110110111101000111010100100";
        ram[56] = "0b00111101100100010101110101110000";
        ram[57] = "0b00111111000110000101010000000100";
        ram[58] = "0b00111101111101111111011010110010";
        ram[59] = "0b00111001010110100001101010010011";
        ram[60] = "0b00111110011000000111100111100110";
        ram[61] = "0b10111001100101101111111010110101";
        ram[62] = "0b10110111111000100111111000001111";
        ram[63] = "0b00111000011001101010111111001101";
        ram[64] = "0b10111000110101011110100011010101";
        ram[65] = "0b00111111000000101110011011111011";
        ram[66] = "0b00111110011100110011011110101000";
        ram[67] = "0b00111000001000111001001111101110";
        ram[68] = "0b00111001001101111000000000110100";
        ram[69] = "0b00111110011000110010110000011111";
        ram[70] = "0b00111111010000001100010111101011";
        ram[71] = "0b00110110010010010101001110011100";
        ram[72] = "0b10111001011101010101110111100110";
        ram[73] = "0b00111111001111101010110111010110";
        ram[74] = "0b00111111011000110000100111011001";
        ram[75] = "0b00111111011011110001001010010000";
        ram[76] = "0b10111000110100011011011100010111";
        ram[77] = "0b00111001011001001001011011101110";
        ram[78] = "0b10110111110010010101001110011100";
        ram[79] = "0b00111110110100111000011100111000";
        ram[80] = "0b00111111001000100000000011010010";
        ram[81] = "0b00111111011000111010111001000111";
        ram[82] = "0b00111111010001111110111001001110";
        ram[83] = "0b10111000010001010010000111011110";
        ram[84] = "0b00111001010001100010111001001101";
        ram[85] = "0b00111111010110110111100110110111";
        ram[86] = "0b00111001011011110001001101001001";
        ram[87] = "0b00111111011000111100111001000010";
        ram[88] = "0b10111001000011111010011110101000";
        ram[89] = "0b00111110100110100001111101101101";
        ram[90] = "0b10111000110101011110100011010101";
        ram[91] = "0b00111111011010001110110010010110";
        ram[92] = "0b00111110111111111100010101101001";
        ram[93] = "0b00111110101010001011101000011111";
        ram[94] = "0b00111110101011101010101101111010";
        ram[95] = "0b00111111010101010100010001111000";
        ram[96] = "0b00111001000010110111010111101010";
        ram[97] = "0b00110111011110111010100010000010";
        ram[98] = "0b10111001000110000000101100100100";
        ram[99] = "0b10111000101000010111101100001111";
        ram[100] = "0b00111110111010000111111111101101";
        ram[101] = "0b00111001000101001110010111010110";
        ram[102] = "0b00111110101111000001011000010110";
        ram[103] = "0b00111111011010110101101011011001";
        ram[104] = "0b10111001000000110001001001101111";
        ram[105] = "0b00111110110001110011001101000100";
        ram[106] = "0b00111000011000100111111000001111";
        ram[107] = "0b00111110100101111010100000101111";
        ram[108] = "0b00111110111111111000001110011101";
        ram[109] = "0b00111110101010111010001011100000";
        ram[110] = "0b00111000100110010001011110010100";
        ram[111] = "0b00110111111000100111111000001111";
        ram[112] = "0b10111000101111001011111001100010";
        ram[113] = "0b10111000001100000010100100101000";
        ram[114] = "0b10110110010010010101001110011100";
        ram[115] = "0b00111110100110101000101010000011";
        ram[116] = "0b00111000111010101110000110001011";
        ram[117] = "0b00111110101000000000000000000000";
        ram[118] = "0b00111111001010101110111011001000";
        ram[119] = "0b10111000000110110011000001110011";
        ram[120] = "0b00111110111100010100100000010011";
        ram[121] = "0b00111111000010100100111001111011";
        ram[122] = "0b00111000110001010010000111011110";
        ram[123] = "0b00111110101101101110110111101110";
        ram[124] = "0b00111111010010101101000101011011";
        ram[125] = "0b00111001000000100000010111111111";
        ram[126] = "0b00110110101001111100010110101100";
        ram[127] = "0b10110111100111110110001000110000";
        ram[128] = "0b00111111001001110010000011111011";
        ram[129] = "0b00111110101100000011000110001100";
        ram[130] = "0b00111110110000010011111100000111";
        ram[131] = "0b00111111001010111111110001110110";
        ram[132] = "0b00110111100101101111111010110101";
        ram[133] = "0b00111000101010011101111010001011";
        ram[134] = "0b10110111000101101111111010110101";
        ram[135] = "0b00111110101101011110101111111011";
        ram[136] = "0b00111110110100110110100111111101";
        ram[137] = "0b00111110111111101100101111011010";
        ram[138] = "0b00111111001000011101100110010000";
        ram[139] = "0b10111001001001101011100100111101";
        ram[140] = "0b00111111001101111001101100000010";
        ram[141] = "0b00111111001001110100010111010000";
        ram[142] = "0b00111110111000101100111001000110";
        ram[143] = "0b10111001001110011001100100010011";
        ram[144] = "0b10111000001111001011111001100010";
        ram[145] = "0b00111111001110100000110010011110";
        ram[146] = "0b00111001001000101000011101111111";
        ram[147] = "0b00111111000010110110001110100010";
        ram[148] = "0b00111111001010111111101011100011";
        ram[149] = "0b00110110110010010101001110011100";
        ram[150] = "0b10111000101011100001000001001001";
        ram[151] = "0b00111000110010110110110001111010";
        ram[152] = "0b00111110100001001001101111101001";
        ram[153] = "0b10110111110010010101001110011100";
        ram[154] = "0b10111000111000000110010100110000";
        ram[155] = "0b00111110111001101000101010010011";
        ram[156] = "0b10110111101100000010100100101000";
        ram[157] = "0b00111110111000001000101101110110";
        ram[158] = "0b00111111010110111101011010110110";
        ram[159] = "0b00111000101000111001001111101110";
        ram[160] = "0b00111110101000011011111011010011";
        ram[161] = "0b10111000001110001000110010100100";
        ram[162] = "0b00110111110100011011011100010111";
        ram[163] = "0b00111000001110001000110010100100";
        ram[164] = "0b00111000101111101101011101000001";
        ram[165] = "0b00111110111010101011010000001111";
        ram[166] = "0b00111111000001000101110100010000";
        ram[167] = "0b00111111011000001010101011111100";
        ram[168] = "0b00110111001001111100010110101100";
        ram[169] = "0b00111000011111111101101001000000";
        ram[170] = "0b00111111000110001011101000110000";
        ram[171] = "0b00111110100010111011101001010110";
        ram[172] = "0b00110111101110001000110010100100";
        ram[173] = "0b00111110110101000101110100100000";
        ram[174] = "0b00111111001010001011101000110000";
        ram[175] = "0b00111110111111001110000110100100";
        ram[176] = "0b10111000111110011000111110100011";
        ram[177] = "0b00110111011110111010100010000010";
        ram[178] = "0b10111000000011101001101100111001";
        ram[179] = "0b10111000101111101101011101000001";
        ram[180] = "0b10111000001110001000110010100100";
        ram[181] = "0b00111000010101011110100011010101";
        ram[182] = "0b10111000010010010101001110011100";
        ram[183] = "0b00111000111010001100100010101100";
        ram[184] = "0b00110111110110100001101010010011";
        ram[185] = "0b10111000100001000001111011011110";
        ram[186] = "0b00110111001001111100010110101100";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_bPq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_bPq_ram* meminst;


SC_CTOR(predict_ensemble_bPq) {
meminst = new predict_ensemble_bPq_ram("predict_ensemble_bPq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_bPq() {
    delete meminst;
}


};//endmodule
#endif
