// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_dcE_H__
#define __predict_ensemble_dcE_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_dcE_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_dcE_ram) {
        ram[0] = "0b00111101001011000010100010110011";
        ram[1] = "0b10111001101001001010000001011110";
        ram[2] = "0b00111101010011111101101100001010";
        ram[3] = "0b00111001111011100000011011011001";
        ram[4] = "0b00111111011110000011101001000011";
        ram[5] = "0b00111101100010111101110000100111";
        ram[6] = "0b10111001101001100011001100000101";
        ram[7] = "0b00111110101011100110001110100110";
        ram[8] = "0b00111111011101100101011000010101";
        ram[9] = "0b10111000111010001100100010101100";
        ram[10] = "0b00111001100001100011011110111101";
        ram[11] = "0b00111111011011100101000000001101";
        ram[12] = "0b10111001000011111010011110101000";
        ram[13] = "0b00111101000101111101110100000001";
        ram[14] = "0b00111001001100000010100100101000";
        ram[15] = "0b00111000111011001111101001101010";
        ram[16] = "0b00111101011000010010011000100000";
        ram[17] = "0b10111001001111101101011101000001";
        ram[18] = "0b00111101000011100110110100010110";
        ram[19] = "0b00111111000101011101000000110001";
        ram[20] = "0b00111101110011111110100100110010";
        ram[21] = "0b10110101100001100011011110111101";
        ram[22] = "0b00111001001100010011010110011000";
        ram[23] = "0b10111000110110000000000110110100";
        ram[24] = "0b00111101101000011101111110111001";
        ram[25] = "0b10111000110011011000010101011001";
        ram[26] = "0b00111110000111001100000001111011";
        ram[27] = "0b00111000101111101101011101000001";
        ram[28] = "0b00111111011110001100011011100111";
        ram[29] = "0b00111111011010111110100011001101";
        ram[30] = "0b10111000011110111010100010000010";
        ram[31] = "0b00111110010110111100011101110001";
        ram[32] = "0b00111000011011110001001101001001";
        ram[33] = "0b10111000010100011011011100010111";
        ram[34] = "0b00111111011100011001001010111000";
        ram[35] = "0b00111111010101010000000111010010";
        ram[36] = "0b00111110101111100010110101100010";
        ram[37] = "0b00111111010000100010100111011000";
        ram[38] = "0b00111000101110001000110010100100";
        ram[39] = "0b10111001000010010101110100001011";
        ram[40] = "0b00111110110111000101100101110101";
        ram[41] = "0b00111101101111110111100101000010";
        ram[42] = "0b10111000010010010101001110011100";
        ram[43] = "0b10110111011010101110000110001011";
        ram[44] = "0b00111111000010101000100010011100";
        ram[45] = "0b00111111000111101001101110101110";
        ram[46] = "0b00111110010100101111001010110110";
        ram[47] = "0b00110110101001111100010110101100";
        ram[48] = "0b00110111110000001111000000100000";
        ram[49] = "0b00111000011011110001001101001001";
        ram[50] = "0b00000000000000000000000000000000";
        ram[51] = "0b00111101111111110011010010010100";
        ram[52] = "0b00111110100001001100111100000111";
        ram[53] = "0b00111110111101101101110000011010";
        ram[54] = "0b10110110010010010101001110011100";
        ram[55] = "0b00111110101010011000000110011101";
        ram[56] = "0b00111111010101010010101101001110";
        ram[57] = "0b10110111001001111100010110101100";
        ram[58] = "0b10111000100011101001101100111001";
        ram[59] = "0b10110110000001100011011110111101";
        ram[60] = "0b00111000101101000101101011100110";
        ram[61] = "0b00111111010110001011101000110000";
        ram[62] = "0b10111000010101011110100011010101";
        ram[63] = "0b00111111010001101101110001111111";
        ram[64] = "0b00111110111110110101110000011000";
        ram[65] = "0b00111111011110100011100001110110";
        ram[66] = "0b00111000000000100000010111111111";
        ram[67] = "0b00111000011101110111011011000101";
        ram[68] = "0b10110110100001100011011110111101";
        ram[69] = "0b00111111011100101010010000110011";
        ram[70] = "0b00111000000000100000010111111111";
        ram[71] = "0b00111111001101010100111011000010";
        ram[72] = "0b00111111000110101001111000011011";
        ram[73] = "0b00111111011000011110000101111110";
        ram[74] = "0b00110111110110100001101010010011";
        ram[75] = "0b00111111000011111100001111000110";
        ram[76] = "0b10111000010101011110100011010101";
        ram[77] = "0b00111110000001011101011101000101";
        ram[78] = "0b00110111100001100011011110111101";
        ram[79] = "0b10110111110100011011011100010111";
        ram[80] = "0b00110111010010010101001110011100";
        ram[81] = "0b10110111010010010101001110011100";
        ram[82] = "0b00111111011000100011011011110100";
        ram[83] = "0b00111110000100100101010010100100";
        ram[84] = "0b00111111011011101000000000101000";
        ram[85] = "0b10110111010110100001101010010011";
        ram[86] = "0b00111110100101101010101101111010";
        ram[87] = "0b00111111011010010110100101101110";
        ram[88] = "0b10000000000000000000000000000000";
        ram[89] = "0b00110111100101101111111010110101";
        ram[90] = "0b00111111010011111001011100000011";
        ram[91] = "0b10110111001110001000110010100100";
        ram[92] = "0b10110111100001100011011110111101";
        ram[93] = "0b00111111011010100110001000100100";
        ram[94] = "0b00111111011010110101101011011001";
        ram[95] = "0b00111111010010101100001011011111";
        ram[96] = "0b10110111010110100001101010010011";
        ram[97] = "0b00111111000110110111100001111001";
        ram[98] = "0b00110111100011101001101100111001";
        ram[99] = "0b00111111001111110010110101011110";
        ram[100] = "0b00111111010011110010000110010010";
        ram[101] = "0b00111111001110000001000100111100";
        ram[102] = "0b10110110000001100011011110111101";
        ram[103] = "0b00111111001010101111101111100011";
        ram[104] = "0b00110111000101101111111010110101";
        ram[105] = "0b10110111100001100011011110111101";
        ram[106] = "0b00111111000110100011010110100100";
        ram[107] = "0b00110110000001100011011110111101";
        ram[108] = "0b00000000000000000000000000000000";
        ram[109] = "0b00111111011001011000011010000111";
        ram[110] = "0b00111111001011101101010000001011";
        ram[111] = "0b10110110101001111100010110101100";
        ram[112] = "0b00110110101001111100010110101100";
        ram[113] = "0b00111110101100010011000100000001";
        ram[114] = "0b00110111001001111100010110101100";
        ram[115] = "0b10110111000101101111111010110101";
        ram[116] = "0b00111110111001111001100000001111";
        ram[117] = "0b00111110101011011001011011101010";
        ram[118] = "0b00111110011010110011101000100110";
        ram[119] = "0b00110110010010010101001110011100";
        ram[120] = "0b00111111000001111010000100001010";
        ram[121] = "0b00111110011000100110110110001011";
        ram[122] = "0b00110111010010010101001110011100";
        ram[123] = "0b10110110110010010101001110011100";
        ram[124] = "0b00111110100010011001001110010010";
        ram[125] = "0b00111111000000000101110000100101";
        ram[126] = "0b10110101100001100011011110111101";
        ram[127] = "0b00110110110010010101001110011100";
        ram[128] = "0b00111111000001010000000001010000";
        ram[129] = "0b00111110101001111010100011111000";
        ram[130] = "0b00111110100011111100111111000100";
        ram[131] = "0b10110110010010010101001110011100";
        ram[132] = "0b10110111000001100011011110111101";
        ram[133] = "0b10110110010010010101001110011100";
        ram[134] = "0b00110101100001100011011110111101";
        ram[135] = "0b00111111000100010100110111010111";
        ram[136] = "0b10110111010110100001101010010011";
        ram[137] = "0b00110111000101101111111010110101";
        ram[138] = "0b00111110101100110111011101011100";
        ram[139] = "0b00111110111000011000101001000100";
        ram[140] = "0b00110110101001111100010110101100";
        ram[141] = "0b00110110110010010101001110011100";
        ram[142] = "0b00111110000000101011001001111101";
        ram[143] = "0b00111110100100100111111100111101";
        ram[144] = "0b10110110110010010101001110011100";
        ram[145] = "0b10110110100001100011011110111101";
        ram[146] = "0b00111110011110000010111000000010";
        ram[147] = "0b00111110001001100111001001110101";
        ram[148] = "0b00111110100101011101101010001100";
        ram[149] = "0b10110110100001100011011110111101";
        ram[150] = "0b00111110101011101110010000111011";
        ram[151] = "0b10110110010010010101001110011100";
        ram[152] = "0b00111111000010100011001101111011";
        ram[153] = "0b10110110000001100011011110111101";
        ram[154] = "0b10110110100001100011011110111101";
        ram[155] = "0b00111110100011100011011000101010";
        ram[156] = "0b00111110001010010111100111100001";
        ram[157] = "0b10000000000000000000000000000000";
        ram[158] = "0b00110110010010010101001110011100";
        ram[159] = "0b00000000000000000000000000000000";
        ram[160] = "0b00110110111010101110000110001011";
        ram[161] = "0b10110110100001100011011110111101";
        ram[162] = "0b00111110110001000001110010000010";
        ram[163] = "0b00111110111100101111101000101111";
        ram[164] = "0b00111110110010001011101000011111";
        ram[165] = "0b00111111000111010110110011101000";
        ram[166] = "0b00000000000000000000000000000000";
        ram[167] = "0b00110110101001111100010110101100";
        ram[168] = "0b00111110101100000000100100001011";
        ram[169] = "0b10110110100001100011011110111101";
        ram[170] = "0b10110110000001100011011110111101";
        ram[171] = "0b00110101100001100011011110111101";
        ram[172] = "0b00111110110011010100101101101010";
        ram[173] = "0b10110110000001100011011110111101";
        ram[174] = "0b00111110111011010011110010011011";
        ram[175] = "0b00110101100001100011011110111101";
        ram[176] = "0b00111111001001001001111011101101";
        ram[177] = "0b00111111000111100010001010110100";
        ram[178] = "0b00110101100001100011011110111101";
        ram[179] = "0b00111111000010011011010101110100";
        ram[180] = "0b10110110000001100011011110111101";
        ram[181] = "0b00111111000000110110111001010000";
        ram[182] = "0b00111111000011001001010011000100";
        ram[183] = "0b10000000000000000000000000000000";
        ram[184] = "0b00110101100001100011011110111101";
        ram[185] = "0b10110101100001100011011110111101";
        ram[186] = "0b00111111000100010101001001011101";
        ram[187] = "0b10000000000000000000000000000000";
        ram[188] = "0b00110101100001100011011110111101";
        for (unsigned i = 189; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_dcE) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_dcE_ram* meminst;


SC_CTOR(predict_ensemble_dcE) {
meminst = new predict_ensemble_dcE_ram("predict_ensemble_dcE_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_dcE() {
    delete meminst;
}


};//endmodule
#endif
