// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_bvn_H__
#define __predict_ensemble_bvn_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_bvn_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_bvn_ram) {
        ram[0] = "0b00111100000100011011001111110010";
        ram[1] = "0b00111011100111011001110100110100";
        ram[2] = "0b00111100010110000011100000111011";
        ram[3] = "0b10111011100010100111101001000010";
        ram[4] = "0b00111111011110010011001100001001";
        ram[5] = "0b00111101010010110010010100101101";
        ram[6] = "0b00111010110001110111110111011000";
        ram[7] = "0b10111010110111011010010010001011";
        ram[8] = "0b00111111010111000010011100100000";
        ram[9] = "0b00111110001001101111101111010010";
        ram[10] = "0b00111111011101010110101001001000";
        ram[11] = "0b10111011000001110001000111011000";
        ram[12] = "0b00111101101001111010010110110001";
        ram[13] = "0b00111111001011101010011010100000";
        ram[14] = "0b10111010011011110001001101001001";
        ram[15] = "0b00111110111010111000101011100011";
        ram[16] = "0b00111101111110110011110110001110";
        ram[17] = "0b00111011001010001100000101010101";
        ram[18] = "0b00111001101100000010100100101000";
        ram[19] = "0b00111101100000101110010011010010";
        ram[20] = "0b10111011001101111001000011111011";
        ram[21] = "0b00111110110011111000000001010110";
        ram[22] = "0b00111111011101100101011000010101";
        ram[23] = "0b00111101010111100000111001110011";
        ram[24] = "0b00111011001111000001011010011100";
        ram[25] = "0b10111011000100001011010000011000";
        ram[26] = "0b00111111001011000111001111001101";
        ram[27] = "0b00111110001000111001100010100110";
        ram[28] = "0b10111010011001000101001111010010";
        ram[29] = "0b00111010100010001101011011010100";
        ram[30] = "0b10111010010000001010110100000100";
        ram[31] = "0b00111101110110111011010110011110";
        ram[32] = "0b10111010000100001011010000011000";
        ram[33] = "0b00111110111111000010011111001000";
        ram[34] = "0b00111111010110001011101000110000";
        ram[35] = "0b00111010011110101101111100101111";
        ram[36] = "0b00111000110100011011011100010111";
        ram[37] = "0b10111010011100111000100000100010";
        ram[38] = "0b10111001000010110111010111101010";
        ram[39] = "0b00111111011010000010011111111010";
        ram[40] = "0b00111111000010110111111010110011";
        ram[41] = "0b00111111010110111001011110011010";
        ram[42] = "0b00111010000011110010000101110001";
        ram[43] = "0b00111001001110101010010110000011";
        ram[44] = "0b00111010100110001001000101011100";
        ram[45] = "0b00111111011011010111110000101101";
        ram[46] = "0b10111001110110000000000110110100";
        ram[47] = "0b00111111001001110100010111010000";
        ram[48] = "0b00111111011101010111110101111100";
        ram[49] = "0b00111110001101110010100001100011";
        ram[50] = "0b00111111010010010000000011100111";
        ram[51] = "0b10111010001001110011111101110101";
        ram[52] = "0b10111000010111100100110001010001";
        ram[53] = "0b00111010101100010001010000001010";
        ram[54] = "0b00111110000110111101111100001001";
        ram[55] = "0b00111111010001101011010001010011";
        ram[56] = "0b00111010000101011010111100101001";
        ram[57] = "0b00111110110101000011010100100110";
        ram[58] = "0b00111111010111000011011101010000";
        ram[59] = "0b00111110000000110110001000100000";
        ram[60] = "0b10111001111010001100100010101100";
        ram[61] = "0b00111010100001000001111011011110";
        ram[62] = "0b00111001000101101111111010110101";
        ram[63] = "0b00111110011010101110100011100010";
        ram[64] = "0b00111111010110110111100000100101";
        ram[65] = "0b10111010000001101011110111110101";
        ram[66] = "0b00111110010100100110111011011011";
        ram[67] = "0b10111001110000001111000000100000";
        ram[68] = "0b00111110110101000011100100110111";
        ram[69] = "0b00111010001010101110101011111011";
        ram[70] = "0b00111111001011110000101011110110";
        ram[71] = "0b10111001111010000100001001110100";
        ram[72] = "0b00111110101111000011100010110000";
        ram[73] = "0b00111110110001011010001011010111";
        ram[74] = "0b00111111000111101000101110100000";
        ram[75] = "0b00111001101010000100101111100100";
        ram[76] = "0b10111000110000110000100011111111";
        ram[77] = "0b00111110100000111100110101111001";
        ram[78] = "0b00111110111100101110011100101110";
        ram[79] = "0b00111110100010110110011001010001";
        ram[80] = "0b00111111001000000000111110001000";
        ram[81] = "0b00111110001011000111000100001101";
        ram[82] = "0b00111111000010101110000100010101";
        ram[83] = "0b00111001010010000100011100101100";
        ram[84] = "0b00111111010000010111010001100000";
        ram[85] = "0b00111101111011111110110011011101";
        ram[86] = "0b00111111010000001101010000110101";
        ram[87] = "0b00111110111100010101100001110101";
        ram[88] = "0b10111001101110101010010110000011";
        ram[89] = "0b00111010010000100011111110101011";
        ram[90] = "0b00111110110110011000001100001110";
        ram[91] = "0b10111010000001100111101011011001";
        ram[92] = "0b00111111011010001101010010101010";
        ram[93] = "0b10111000100000100000010111111111";
        ram[94] = "0b00111111001000010100000100110001";
        ram[95] = "0b00111000101110101010010110000011";
        ram[96] = "0b00111110101011100100101110001000";
        ram[97] = "0b10111001100000000111001101011000";
        ram[98] = "0b00111110001100100010000011111111";
        ram[99] = "0b00111111000001101111110100000000";
        ram[100] = "0b00111111001010101011100000110000";
        ram[101] = "0b00111110101010001100110001111001";
        ram[102] = "0b10111000101010111111011101101010";
        ram[103] = "0b00111001101110011001100100010011";
        ram[104] = "0b00111001000100101100110011110111";
        ram[105] = "0b00111111011000001101100000110100";
        ram[106] = "0b00111001100101000101111110011110";
        ram[107] = "0b00111001010111110101100011000001";
        ram[108] = "0b00111010000101000001110010000010";
        ram[109] = "0b10111001101010001101001000011100";
        ram[110] = "0b10111010000010010101110100001011";
        ram[111] = "0b00111001101010101110101011111011";
        ram[112] = "0b00111110001111001001011100001111";
        ram[113] = "0b10111001111111100100011110011001";
        ram[114] = "0b10111000111011110001001101001001";
        ram[115] = "0b00111001110011001111111100100010";
        ram[116] = "0b10111001000101101111111010110101";
        ram[117] = "0b00111110101010001100111001110000";
        ram[118] = "0b00111000101100000010100100101000";
        ram[119] = "0b00111110111101111001100100111101";
        ram[120] = "0b10111001110101100110111100001101";
        ram[121] = "0b00111001101011110001110010111001";
        ram[122] = "0b00111111000001011101011000010111";
        ram[123] = "0b00111001111011100000011011011001";
        ram[124] = "0b00111001000001000001111011011110";
        ram[125] = "0b00111110001110100010111001111111";
        ram[126] = "0b00111110111001101011010100001011";
        ram[127] = "0b00111110100001000111110000110001";
        ram[128] = "0b00111111001111010001011101000000";
        ram[129] = "0b10111010000010110111010111101010";
        ram[130] = "0b00111110111101100110011011101101";
        ram[131] = "0b00111111001000001001011101100011";
        ram[132] = "0b00111110101101100010100110110111";
        ram[133] = "0b00111110100001100010110001010110";
        ram[134] = "0b00111110101100111010111111111011";
        ram[135] = "0b10111000011110111010100010000010";
        ram[136] = "0b10111001001100100100001000000111";
        ram[137] = "0b00111110101001001101111001011101";
        ram[138] = "0b00111111000000010010110000010111";
        ram[139] = "0b00111010001001100011001100000101";
        ram[140] = "0b10110111001001111100010110101100";
        ram[141] = "0b10111001100110011001110111001011";
        ram[142] = "0b00111110110101111101111000001101";
        ram[143] = "0b00111111001000011100001011010010";
        ram[144] = "0b00111110110011010001000100111000";
        ram[145] = "0b00111110111101011100011101101001";
        ram[146] = "0b10000000000000000000000000000000";
        ram[147] = "0b00111111000000100100001001101100";
        ram[148] = "0b00111110101010111000101100100110";
        ram[149] = "0b00111001100000010111111111000111";
        ram[150] = "0b10110111111010101110000110001011";
        ram[151] = "0b00111110101001101001010001101000";
        ram[152] = "0b00111111011000011111011010001000";
        ram[153] = "0b00111001101010001101001000011100";
        ram[154] = "0b00110110100001100011011110111101";
        ram[155] = "0b10111001110101110111101101111100";
        ram[156] = "0b10111000010001010010000111011110";
        ram[157] = "0b00111110101100111101111100101011";
        ram[158] = "0b00111000000111110110001000110000";
        ram[159] = "0b00111001000111100101010111000001";
        ram[160] = "0b00111111001011001000001110101001";
        ram[161] = "0b10111001100100000010110111100000";
        ram[162] = "0b10111010000011111110101011000100";
        ram[163] = "0b10111001011110101001110000010011";
        ram[164] = "0b10111000101101000101101011100110";
        ram[165] = "0b00111111010011110011010101111110";
        ram[166] = "0b00111001010010100110000000001011";
        ram[167] = "0b00111110101010101010011000001001";
        ram[168] = "0b00111001110000101000001011000111";
        ram[169] = "0b10111001101110011001100100010011";
        ram[170] = "0b00111111001101010100101101001001";
        ram[171] = "0b00111111010001010100101011100100";
        ram[172] = "0b10111001001100000010100100101000";
        ram[173] = "0b00111000100011101001101100111001";
        ram[174] = "0b00111001101011101001011010000001";
        ram[175] = "0b10111000011100110100010100000111";
        ram[176] = "0b00111001001011110001110010111001";
        ram[177] = "0b00111111000100101110100011000000";
        ram[178] = "0b00111001101011101001011010000001";
        ram[179] = "0b00111111001111011001010100100101";
        ram[180] = "0b10111001000011011000111011001001";
        ram[181] = "0b00111111000110011000011001100110";
        ram[182] = "0b00111001010011000111100011101010";
        ram[183] = "0b00111000110111100100110001010001";
        ram[184] = "0b00111110110000101110100011000000";
        ram[185] = "0b00110111011010101110000110001011";
        ram[186] = "0b10111000111110011000111110100011";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_bvn) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_bvn_ram* meminst;


SC_CTOR(predict_ensemble_bvn) {
meminst = new predict_ensemble_bvn_ram("predict_ensemble_bvn_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_bvn() {
    delete meminst;
}


};//endmodule
#endif
