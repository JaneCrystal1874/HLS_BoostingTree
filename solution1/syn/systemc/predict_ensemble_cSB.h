// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_cSB_H__
#define __predict_ensemble_cSB_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_cSB_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_cSB_ram) {
        ram[0] = "0b00111101011110000011011010101000";
        ram[1] = "0b10111110101000011110100001100000";
        ram[2] = "0b00111111011000010111010001100000";
        ram[3] = "0b00111110101011011001010000101001";
        ram[4] = "0b00111110100010100011000101000000";
        ram[5] = "0b00111110101001001110001110011011";
        ram[6] = "0b00111101111101110011001000010110";
        ram[7] = "0b00111111000100011111100100111000";
        ram[8] = "0b00111111001001100000100100110101";
        ram[9] = "0b10111110110001100010110001010110";
        ram[10] = "0b00111111001111001001001111101010";
        ram[11] = "0b00111111010100110000100011111111";
        ram[12] = "0b00111111010001100110111110110101";
        ram[13] = "0b00111101101111100011111110111100";
        ram[14] = "0b00111111001101010100100111101001";
        ram[15] = "0b00111111001100110011001101100110";
        ram[16] = "0b10111110110001001110010000000000";
        ram[17] = "0b00111110101010110111100111111011";
        ram[18] = "0b10111110100111101110101010000101";
        ram[19] = "0b00111111001111000011111111100110";
        ram[20] = "0b10111101110001100010000010101011";
        ram[21] = "0b00111111001011011100110011011001";
        ram[22] = "0b00111110101001100000000100010101";
        ram[23] = "0b10111110011010101001111110111110";
        ram[24] = "0b00111111001011100010001000101101";
        ram[25] = "0b00111111000000011000101111100111";
        ram[26] = "0b00111111001010100100001100000011";
        ram[27] = "0b00111111001110011000010101111011";
        ram[28] = "0b10111110110001000000011001011011";
        ram[29] = "0b00111111000100010110101010011100";
        ram[30] = "0b00111101111000110010010111010101";
        ram[31] = "0b00111101110011110001101100100110";
        ram[32] = "0b00111111000000000110100111111001";
        ram[33] = "0b00111110010101000110001011000011";
        ram[34] = "0b10111101101000010110010110010000";
        ram[35] = "0b00111111000000000110001100010111";
        ram[36] = "0b00111111001101000010000010100011";
        ram[37] = "0b00111111001000001000000111100100";
        ram[38] = "0b00111111010111001110110011001000";
        ram[39] = "0b00111110111110101010110111100110";
        ram[40] = "0b00111111010111011101101000000110";
        ram[41] = "0b10111110111100010100011101101011";
        ram[42] = "0b10111100100000110100001010101011";
        ram[43] = "0b00111110110110110000001111000000";
        ram[44] = "0b00111111001011001110010010101000";
        ram[45] = "0b10111110011100100000101000110001";
        ram[46] = "0b10111100010001000001000100111100";
        ram[47] = "0b00111111011100110010000010000110";
        ram[48] = "0b10111111001110000101110111111011";
        ram[49] = "0b00111111001011110111001111010010";
        ram[50] = "0b00111111011000100011011011110100";
        ram[51] = "0b00111100100111011101111000110111";
        ram[52] = "0b10111110001100101001111101011010";
        ram[53] = "0b00111110010000101101011100110000";
        ram[54] = "0b00111111010101111111000010011001";
        ram[55] = "0b00111110111100110100010001011111";
        ram[56] = "0b00111110111000000000100100001011";
        ram[57] = "0b00111111000000000101000010011100";
        ram[58] = "0b00111111001101101101000110101111";
        ram[59] = "0b10111110001110101011100000100000";
        ram[60] = "0b00111111000110011010000111111101";
        ram[61] = "0b00111101000010101101010101111100";
        ram[62] = "0b10111011011010001000010110010000";
        ram[63] = "0b00111110110111000110000111111010";
        ram[64] = "0b10111111001101010000011011011101";
        ram[65] = "0b00111111010001111110111001001110";
        ram[66] = "0b00111111000001000001101100110011";
        ram[67] = "0b00111110111100101000100101110110";
        ram[68] = "0b00111111000110111100101010111000";
        ram[69] = "0b00111101001111100000010110001010";
        ram[70] = "0b00111111010010000111010001000011";
        ram[71] = "0b00111110111011111110111000001011";
        ram[72] = "0b00111111000000011101010110010001";
        ram[73] = "0b00111110111100100101100001110001";
        ram[74] = "0b00111110110000010111010111110011";
        ram[75] = "0b10111110011000001010100001001100";
        ram[76] = "0b00111111000101001001000011100110";
        ram[77] = "0b10111101110011111001011011100001";
        ram[78] = "0b00111101100100010100111000111100";
        ram[79] = "0b00111110111011101100011001111010";
        ram[80] = "0b00111011100001011011100111101001";
        ram[81] = "0b00111111000110001011101000110000";
        ram[82] = "0b10111111000000110010111110011000";
        ram[83] = "0b00111111000010001011001110110011";
        ram[84] = "0b10111101110000101101111000000001";
        ram[85] = "0b00111110110001001000011011001111";
        ram[86] = "0b00111110100111110110010000000110";
        ram[87] = "0b00111101111010111011000110101111";
        ram[88] = "0b00111110110100011110101000010100";
        ram[89] = "0b00111111000100001001001101010011";
        ram[90] = "0b00111111001011010110011000111000";
        ram[91] = "0b10111101100010001101000110010110";
        ram[92] = "0b10111110010011000101100101110101";
        ram[93] = "0b00111110110111101100111001010111";
        ram[94] = "0b00111111000001000110011100000110";
        ram[95] = "0b00111110101100011110101001111001";
        ram[96] = "0b00111110110001100011010010011000";
        ram[97] = "0b00111110100010000010011000000011";
        ram[98] = "0b10111110100001111010100111100011";
        ram[99] = "0b00111110111001000000111101000101";
        ram[100] = "0b00111110100011011010001001110011";
        ram[101] = "0b00111111000011101100111010001001";
        ram[102] = "0b00111101100110101111001110100001";
        ram[103] = "0b00111110110111011011110010001000";
        ram[104] = "0b00111110100101111001011000111010";
        ram[105] = "0b00111111000000100001000010011101";
        ram[106] = "0b00111110101101001110110010000101";
        ram[107] = "0b00111111011001010100100011111110";
        ram[108] = "0b10111110000110111011011010101010";
        ram[109] = "0b00111110100100011000001100001110";
        ram[110] = "0b00111111001001110101100011100010";
        ram[111] = "0b00111101100111010001110000111011";
        ram[112] = "0b00111110001101111010011101000100";
        ram[113] = "0b10111101100110001010110110101100";
        ram[114] = "0b00111111000000000100001000110001";
        ram[115] = "0b00111100001110100100100100111101";
        ram[116] = "0b10111110011010011001001110010010";
        ram[117] = "0b00111101100110111101001110000000";
        ram[118] = "0b00111110110101001011110101110111";
        ram[119] = "0b00111110010001111100100001001011";
        ram[120] = "0b10111101111001011001001110100011";
        ram[121] = "0b00111110011000011110101101000010";
        ram[122] = "0b10111110100010011000100100010110";
        ram[123] = "0b00111110100011011100100010111000";
        ram[124] = "0b10111101101111101111100001001000";
        ram[125] = "0b00111110010011111111001101101011";
        ram[126] = "0b10111101000001110001100100101111";
        ram[127] = "0b00111100000100011011001111110010";
        ram[128] = "0b00111110001101000001000111000011";
        ram[129] = "0b00111110000100111011001000010100";
        ram[130] = "0b00111111000001001001001111011001";
        ram[131] = "0b00111111001111000000110001100011";
        ram[132] = "0b00111111000111000100001010010110";
        ram[133] = "0b00111110111100010100110110110110";
        ram[134] = "0b10111111001100011010000011001111";
        ram[135] = "0b10111110001100110011110011100110";
        ram[136] = "0b00111110110000001101010111101001";
        ram[137] = "0b00111101100011001111010100101100";
        ram[138] = "0b00111111000110000110110011011011";
        ram[139] = "0b00111100100001100011111000001000";
        ram[140] = "0b00111110001111110000011100111010";
        ram[141] = "0b10111101111101100111000000011001";
        ram[142] = "0b00111101010000011100011100010101";
        ram[143] = "0b00111110011110100100000010010110";
        ram[144] = "0b00111110111011011000101001110110";
        ram[145] = "0b00111101100001001001011001101000";
        ram[146] = "0b10111110100000110110000001001010";
        ram[147] = "0b10111110000101111101001101001110";
        ram[148] = "0b00111110111110110101111001010011";
        ram[149] = "0b00111101111111000010100001110000";
        ram[150] = "0b00111111001001011001000111111111";
        ram[151] = "0b00111110111101001100000011011111";
        ram[152] = "0b00111110110011111011000000101101";
        ram[153] = "0b10111100011100111110000000110111";
        ram[154] = "0b00111101100010010011110110010110";
        ram[155] = "0b00111110101011101000110101110110";
        ram[156] = "0b00111110100101001010100000111011";
        ram[157] = "0b00111111001100101110100011000000";
        ram[158] = "0b00111110000101111110100110010110";
        ram[159] = "0b00111110100100010001110011010010";
        ram[160] = "0b10111101101100000111110110010001";
        ram[161] = "0b10111110001111111011111000110100";
        ram[162] = "0b00111110100011100000010001111101";
        ram[163] = "0b00111111010000000101110101000010";
        ram[164] = "0b00111110100011010011001101001100";
        ram[165] = "0b10111101110110010011000101000100";
        ram[166] = "0b00111110111001011111000100010111";
        ram[167] = "0b00111111001011010001011101000000";
        ram[168] = "0b00111101100100101111011111110101";
        ram[169] = "0b00111111010001000101110100010000";
        ram[170] = "0b00111110011110110100001001000110";
        ram[171] = "0b00111110110011000011100110111101";
        ram[172] = "0b00111101010001001001101110100110";
        ram[173] = "0b10111101100100111010011110011000";
        ram[174] = "0b00111110011001010000100101111101";
        ram[175] = "0b10111101011100100001101100111011";
        ram[176] = "0b00111101110011101101101010101001";
        ram[177] = "0b10111100110111001011100110101010";
        ram[178] = "0b00111100101011111100110011100010";
        ram[179] = "0b00111101111111100111111110110010";
        ram[180] = "0b10111100110011110110011110110010";
        for (unsigned i = 181; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_cSB) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_cSB_ram* meminst;


SC_CTOR(predict_ensemble_cSB) {
meminst = new predict_ensemble_cSB_ram("predict_ensemble_cSB_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_cSB() {
    delete meminst;
}


};//endmodule
#endif
