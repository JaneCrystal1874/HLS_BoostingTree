// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_eES_H__
#define __predict_ensemble_eES_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_eES_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_eES_ram) {
        ram[0] = "0b00111111010111101000101110100000";
        ram[1] = "0b00111101001011000010100010110011";
        ram[2] = "0b00111111011011010001011101000000";
        ram[3] = "0b10111110010111000101011110011111";
        ram[4] = "0b00111110001000011010010101000100";
        ram[5] = "0b10111110010101110111111010100010";
        ram[6] = "0b00111011001100011001101001000001";
        ram[7] = "0b00111110000111000011011001010100";
        ram[8] = "0b00111111011100111000001100000110";
        ram[9] = "0b00111110000010001111110111100011";
        ram[10] = "0b00111110110100101011100010000100";
        ram[11] = "0b00111111011001011001110101100111";
        ram[12] = "0b00111110000100100101110110001101";
        ram[13] = "0b10111110101001010101001111001110";
        ram[14] = "0b00111110101111111111000101010010";
        ram[15] = "0b00111110101001000101001010100100";
        ram[16] = "0b10111110010101010100100101110011";
        ram[17] = "0b00111110101111100111011010000110";
        ram[18] = "0b00111111000001111010110000111111";
        ram[19] = "0b00111110010011101110111111100101";
        ram[20] = "0b00111110101100010000001010011011";
        ram[21] = "0b00111110110110000100110000000110";
        ram[22] = "0b10111110010000011100110011011001";
        ram[23] = "0b00111111011001010000101000110101";
        ram[24] = "0b00111111000110100011111000001000";
        ram[25] = "0b10111110001101011101100000001110";
        ram[26] = "0b00111111001100100000100011000000";
        ram[27] = "0b00111111000000100111011001110101";
        ram[28] = "0b00111111010000110100011101100011";
        ram[29] = "0b00111110110011000100111100011010";
        ram[30] = "0b00111110011000001011001110010010";
        ram[31] = "0b00111111010111011111111100001101";
        ram[32] = "0b00111110111000000001001110101001";
        ram[33] = "0b00111110000000111011111110110110";
        ram[34] = "0b00111111001000100001010000010110";
        ram[35] = "0b00111111000101100001101000111111";
        ram[36] = "0b00111110010100110000010111011001";
        ram[37] = "0b00111110101011000100110111001011";
        ram[38] = "0b00111111000000000000000000000000";
        ram[39] = "0b00111110100100010000011010001010";
        ram[40] = "0b00111110100111010010010011000000";
        ram[41] = "0b00111110100110111100000001111111";
        ram[42] = "0b10111110011001110110100010011101";
        ram[43] = "0b00111110110011011111101110010100";
        ram[44] = "0b10111101101101001011011000100000";
        ram[45] = "0b00111101101110111111010110010100";
        ram[46] = "0b00111110110110111100110001101100";
        ram[47] = "0b00111110111011001110001010001111";
        ram[48] = "0b00111101101100111110010001101001";
        ram[49] = "0b00111111001010110100100010000000";
        ram[50] = "0b10111100100000001111101110101001";
        ram[51] = "0b00111110010001011010110111011010";
        ram[52] = "0b00111110100010101100001110101000";
        ram[53] = "0b10111101111100111011010110111111";
        ram[54] = "0b10111110100000110001000010111010";
        ram[55] = "0b00111100010101111101101111110101";
        ram[56] = "0b10111101010100100010010100110001";
        ram[57] = "0b10111101111010101111000101000101";
        ram[58] = "0b00111111011101001010101110110100";
        ram[59] = "0b10111110101011101100101011101111";
        ram[60] = "0b00111110110000010100001101111100";
        ram[61] = "0b10111101001011101111001111010100";
        ram[62] = "0b00111101101110000110100001110111";
        ram[63] = "0b00111101011110001001111001110111";
        ram[64] = "0b00111110101000110101110100000011";
        ram[65] = "0b10111110100101100100111110011000";
        ram[66] = "0b10111101000011011010000110101001";
        ram[67] = "0b00111110010110000011110001101101";
        ram[68] = "0b00111101110011001100011010000010";
        ram[69] = "0b10111100111001000001001011001111";
        ram[70] = "0b00111111001100101110100011000000";
        ram[71] = "0b00111101111001110001010110000011";
        ram[72] = "0b00111110101001101001110101010010";
        ram[73] = "0b00111111000011000111000010111001";
        ram[74] = "0b10111110000011000011001111111000";
        ram[75] = "0b10111110001101010111101101000010";
        ram[76] = "0b00111111000001110100010111010000";
        ram[77] = "0b00111111001010111001010010010110";
        ram[78] = "0b00111110100111101110110110101011";
        ram[79] = "0b10111101000011110000111110011101";
        ram[80] = "0b00111101111101001100000110101001";
        ram[81] = "0b00111011011111110011001001111011";
        ram[82] = "0b00111111000001010001101110010011";
        ram[83] = "0b00111111000101011111111101100001";
        ram[84] = "0b00111111001011100001110110101000";
        ram[85] = "0b10111101110001011100101110111100";
        ram[86] = "0b00111111000000100111100001011011";
        ram[87] = "0b00111110011000000011111110110011";
        ram[88] = "0b00111101010100010010111111010011";
        ram[89] = "0b00111110001010010000001101100100";
        ram[90] = "0b00111110101010111000111010001111";
        ram[91] = "0b10111110001001101010100001110110";
        ram[92] = "0b10111101110000011001000100010101";
        ram[93] = "0b00111110110011101110000000001001";
        ram[94] = "0b10111110100000011010010110000111";
        ram[95] = "0b00111111000100110101111010010110";
        ram[96] = "0b00111111001101101111010110111010";
        ram[97] = "0b00111110000001100000100101010111";
        ram[98] = "0b00111111001001011001011001010011";
        ram[99] = "0b10111101101111111000001000101100";
        ram[100] = "0b00111101011100100110111100011110";
        ram[101] = "0b00111111011010100101011010111101";
        ram[102] = "0b00111111010101111100011110110100";
        ram[103] = "0b00111100000010111001011101111000";
        ram[104] = "0b00111111001001111000000001010110";
        ram[105] = "0b10111101110010100000110000101000";
        ram[106] = "0b00111111001010111000000011111110";
        ram[107] = "0b00111100100010111101110010101101";
        ram[108] = "0b10111101111001000110110011111101";
        ram[109] = "0b00111101110001011100111001011011";
        ram[110] = "0b00111111000111000011111011001001";
        ram[111] = "0b00111111001110001011101000110000";
        ram[112] = "0b10111110010110100011100111000101";
        ram[113] = "0b00111111000100110101111111100101";
        ram[114] = "0b00111110010101110110010001101011";
        ram[115] = "0b00111110100111101101011010011001";
        ram[116] = "0b00111110010010111111010011001011";
        ram[117] = "0b00111111001110000101110010011010";
        ram[118] = "0b00111111010100011101010001000001";
        ram[119] = "0b00111111011011110001001010010000";
        ram[120] = "0b00111111001100101110001111100111";
        ram[121] = "0b00111110010010111010001100000001";
        ram[122] = "0b00111110110001011100100010010111";
        ram[123] = "0b00111110110000001100101011000101";
        ram[124] = "0b10111110000001110101101011111011";
        ram[125] = "0b00111101111010111010011000100110";
        ram[126] = "0b00111101011000111100110110011010";
        ram[127] = "0b00111110110111010001011101000000";
        ram[128] = "0b00111111010101010011011100101010";
        ram[129] = "0b00111110110101011011000110100111";
        ram[130] = "0b00111101110111101110010111101111";
        ram[131] = "0b00111111000111100001001101011110";
        ram[132] = "0b00111100111101001010111111010101";
        ram[133] = "0b00111111000100001001111001000101";
        ram[134] = "0b00111110100000001011111011111001";
        ram[135] = "0b00111111010010100010111010010000";
        ram[136] = "0b00111010001110101010010110000011";
        ram[137] = "0b00111110001101000100000111111111";
        ram[138] = "0b00111110111110111111001001101111";
        ram[139] = "0b10111101111110010111100100011000";
        ram[140] = "0b10111011101110010011110011001101";
        ram[141] = "0b00111110000001101000110000100110";
        ram[142] = "0b00111111001111010010011101011111";
        ram[143] = "0b10111101000101110110001001010010";
        ram[144] = "0b00111111001000101100011000110111";
        ram[145] = "0b10111101101110000010010001001111";
        ram[146] = "0b00111111001001101011000100011100";
        ram[147] = "0b10111100001110111000110000110011";
        ram[148] = "0b00111101101011110101111101001110";
        ram[149] = "0b10111101111101000100100010001100";
        ram[150] = "0b00111110110100011011011111100001";
        ram[151] = "0b00111110000111100001111111000001";
        ram[152] = "0b00111101000111101011110110010000";
        ram[153] = "0b00111101101100001000110101001100";
        ram[154] = "0b00111110100110110100110010100001";
        ram[155] = "0b10111101101110011111011011101100";
        ram[156] = "0b00111111010111011111110000101011";
        ram[157] = "0b00111111001011010011000100010010";
        ram[158] = "0b00111101110001011111000001101111";
        ram[159] = "0b00111111001110110000111101111100";
        ram[160] = "0b10111101100011101100100111100010";
        ram[161] = "0b00111110101111101110010101101001";
        ram[162] = "0b00111110110111001000011110011000";
        ram[163] = "0b10111110000101001000000001100011";
        ram[164] = "0b00111111000100100001101010010011";
        ram[165] = "0b00111101111001001011111001000000";
        ram[166] = "0b10111011001100110000101101011011";
        ram[167] = "0b00111101000010001110111011110010";
        ram[168] = "0b10111100110011111010101011001110";
        ram[169] = "0b10111100110111110001101111101111";
        ram[170] = "0b00111010010111111001101111011100";
        ram[171] = "0b00111110100010100011111111001101";
        ram[172] = "0b00111101111110001001000001001111";
        ram[173] = "0b00111111000110010001011011101100";
        ram[174] = "0b10111101101101111100011011111100";
        ram[175] = "0b00111110110111110001000001100110";
        ram[176] = "0b00111101101001111001110001000001";
        ram[177] = "0b00111101001000010101000100011110";
        ram[178] = "0b00111110100101101100011111001001";
        ram[179] = "0b00111110110110100010111001111111";
        ram[180] = "0b10111101100001111001100010010110";
        ram[181] = "0b10111101100000011010100100110011";
        ram[182] = "0b00111101100000001111011001101010";
        ram[183] = "0b00111100011110111011110101111011";
        ram[184] = "0b10111101010111011111101110010100";
        ram[185] = "0b00111100100010110001110111010110";
        ram[186] = "0b10111101001011111001001000101001";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_eES) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_eES_ram* meminst;


SC_CTOR(predict_ensemble_eES) {
meminst = new predict_ensemble_eES_ram("predict_ensemble_eES_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_eES() {
    delete meminst;
}


};//endmodule
#endif
