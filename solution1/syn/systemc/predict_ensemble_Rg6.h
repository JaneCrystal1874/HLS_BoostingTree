// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_Rg6_H__
#define __predict_ensemble_Rg6_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_Rg6_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_Rg6_ram) {
        ram[0] = "0b00111111011101100000101010110111";
        ram[1] = "0b00111111011101000001100100111011";
        ram[2] = "0b00111110111101110001001000011011";
        ram[3] = "0b00111100000111001010010110111110";
        ram[4] = "0b00111100010011001000110111100011";
        ram[5] = "0b00111111000111110111110110010101";
        ram[6] = "0b00111111010010011101111010101101";
        ram[7] = "0b00111100000110110000101010110011";
        ram[8] = "0b00111101011100001010011011111100";
        ram[9] = "0b10111011010001111101000110111011";
        ram[10] = "0b10111100101101001011110101110111";
        ram[11] = "0b00111011110001110000000000000100";
        ram[12] = "0b10111011100100000001110100011001";
        ram[13] = "0b10111100000101110101111100101101";
        ram[14] = "0b00111111011100100100110110110001";
        ram[15] = "0b00111111011100110010000010000110";
        ram[16] = "0b00111011111110101001001110101111";
        ram[17] = "0b00111101100000101110010011010010";
        ram[18] = "0b10111011110100111010111001101000";
        ram[19] = "0b00111110100100011000010111001111";
        ram[20] = "0b00111101101000011101111110111001";
        ram[21] = "0b00111100010111100001000110011001";
        ram[22] = "0b00111101011000100011010010101000";
        ram[23] = "0b10111100010000100110100110011100";
        ram[24] = "0b00111101110011010101101011100010";
        ram[25] = "0b10111011111000010011111101001011";
        ram[26] = "0b00111011110011111011111111000110";
        ram[27] = "0b00111011111111000101000001001000";
        ram[28] = "0b00111110001010001011001111110110";
        ram[29] = "0b00111110101111110010000101001111";
        ram[30] = "0b00111101101011101000101101111110";
        ram[31] = "0b00111010110101011100011101000111";
        ram[32] = "0b00111011110000100001111000011101";
        ram[33] = "0b10111011100101001011001110000001";
        ram[34] = "0b00111110010110100010010010001001";
        ram[35] = "0b00111101101000000110011101001001";
        ram[36] = "0b00111110100000100101101001101000";
        ram[37] = "0b10110111110000001111000000100000";
        ram[38] = "0b10111011101110011100101101101000";
        ram[39] = "0b00111110000010000101010010001011";
        ram[40] = "0b00111110010010001001000011010110";
        ram[41] = "0b00111110111101011100100101100000";
        ram[42] = "0b00111100000000101001100011001100";
        ram[43] = "0b00111110001011011010100010111101";
        ram[44] = "0b00111101111110110011110110001110";
        ram[45] = "0b00111101111100010110110100101011";
        ram[46] = "0b10111011000110110110001011000111";
        ram[47] = "0b00111110001001011111100111011111";
        ram[48] = "0b10111100010101001011111100001010";
        ram[49] = "0b00111111001010001011101000110000";
        ram[50] = "0b00111111011010000010001101000010";
        ram[51] = "0b00111010000101001010001010111010";
        ram[52] = "0b00111011011000010000110011110110";
        ram[53] = "0b00111110001011011010010110011000";
        ram[54] = "0b00111011010011000110100000100011";
        ram[55] = "0b00111100001101000101011010110100";
        ram[56] = "0b10111010110001010010000111011110";
        ram[57] = "0b00111111010110010111111110100110";
        ram[58] = "0b00111111011100001010100011110100";
        ram[59] = "0b10111010001101010010010000111010";
        ram[60] = "0b10111011001110001000110010100100";
        ram[61] = "0b00111110101110011101000010000101";
        ram[62] = "0b10111011110001010010000111011110";
        ram[63] = "0b00111011110000101000001011000111";
        ram[64] = "0b00111001001111101101011101000001";
        ram[65] = "0b00111110110100000010110110011101";
        ram[66] = "0b00111110000001101010100011111100";
        ram[67] = "0b00111110100010101011111000000110";
        ram[68] = "0b00111011111101101100011010011011";
        ram[69] = "0b10111011110110100101110110101111";
        ram[70] = "0b00111110101000110101001011001010";
        ram[71] = "0b00111110100101110101110100010100";
        ram[72] = "0b00111110110110000001100010000011";
        ram[73] = "0b00111110100101011101011111001011";
        ram[74] = "0b00111110101011100011001000111100";
        ram[75] = "0b00111110110111000000010011101010";
        ram[76] = "0b00111011100111000011110011100010";
        ram[77] = "0b10111100000111110110011001100010";
        ram[78] = "0b00111110100001100111010111111111";
        ram[79] = "0b00111111000010111010001011110000";
        ram[80] = "0b10111011101111010111111101010010";
        ram[81] = "0b00111011011110010110111000010110";
        ram[82] = "0b00111110000010001100010101000011";
        ram[83] = "0b00111011011111010000100011010101";
        ram[84] = "0b00111110111101000100101001000001";
        ram[85] = "0b10111011000100000011111010100111";
        ram[86] = "0b00111011011000001011100100010011";
        ram[87] = "0b00111010011101110111011011000101";
        ram[88] = "0b10111011001000101000011101111111";
        ram[89] = "0b00111111010001101101001100110001";
        ram[90] = "0b00111111010011010010011001110100";
        ram[91] = "0b00111110100011100111110111011101";
        ram[92] = "0b00111110001011111101100010101110";
        ram[93] = "0b00111000011100110100010100000111";
        ram[94] = "0b10111011100100001111111110010111";
        ram[95] = "0b00111111011011100101110001011111";
        ram[96] = "0b00111111010010100111111110110010";
        ram[97] = "0b10111011010000111101001001010010";
        ram[98] = "0b00111010101101111110010011011110";
        ram[99] = "0b00111110011001001000010110100001";
        ram[100] = "0b00111011010001010000000001010000";
        ram[101] = "0b00111110000010001100101100001000";
        ram[102] = "0b10111011010010101100010010110101";
        ram[103] = "0b00111011101011110101111111010100";
        ram[104] = "0b00111010110111101111010000010111";
        ram[105] = "0b10111010100110100010010000000011";
        ram[106] = "0b00111010110111010110000101110000";
        ram[107] = "0b00111111010101100010011101101011";
        ram[108] = "0b00111110111000001011101011101001";
        ram[109] = "0b10111011111011101010011000111011";
        ram[110] = "0b00111110100010101100100001100000";
        ram[111] = "0b00111110101100000000111001101011";
        ram[112] = "0b00111110100111110110010000000110";
        ram[113] = "0b00111010101101101001010101010011";
        ram[114] = "0b10111000101101000101101011100110";
        ram[115] = "0b00111011101100110000101101011011";
        ram[116] = "0b00111110100000001010101101110001";
        ram[117] = "0b00111111000000111111000011101101";
        ram[118] = "0b00111111010000111000000111000111";
        ram[119] = "0b00111011001101100101001000110111";
        ram[120] = "0b00111110110100011011011111100001";
        ram[121] = "0b10111010101100111001000110010010";
        ram[122] = "0b10111011100111111001110011101001";
        ram[123] = "0b00111111001010100101001111101011";
        ram[124] = "0b10111011010110101001000000000100";
        ram[125] = "0b00111110110010101100000111010011";
        ram[126] = "0b00111110101010100010110000100011";
        ram[127] = "0b00111110111111011110111010111011";
        ram[128] = "0b00111110101111010001011101000000";
        ram[129] = "0b00111001001010001101001000011100";
        ram[130] = "0b10111011100010100111101001000010";
        ram[131] = "0b10111011000011000110000011001100";
        ram[132] = "0b00111110111001000010010100101001";
        ram[133] = "0b00111110110000010111001111011010";
        ram[134] = "0b00111111001110110000110010101010";
        ram[135] = "0b00111011100001000000010110110100";
        ram[136] = "0b10111010101000111101011100001010";
        ram[137] = "0b00111011011010110011010101101110";
        ram[138] = "0b00111010011100111100101100111110";
        ram[139] = "0b00111011000001111100101001100100";
        ram[140] = "0b00111110111010000000000001100101";
        ram[141] = "0b00111111000110101011110000110000";
        ram[142] = "0b00111111001010100000100001001010";
        ram[143] = "0b00111110110101111001001110011010";
        ram[144] = "0b00111111010101110111111011100101";
        ram[145] = "0b00111110111101110101000110001011";
        ram[146] = "0b00111111000000001100011101101101";
        ram[147] = "0b00111011100110101101010000101100";
        ram[148] = "0b00111111010001100101001101110110";
        ram[149] = "0b10111011001001011010110011001101";
        ram[150] = "0b00111111000001010011011111100011";
        ram[151] = "0b00111111011001010000101000110101";
        ram[152] = "0b10111011100001011110110000111110";
        ram[153] = "0b00111110111001101100110101101100";
        ram[154] = "0b00111110110011011110100101111101";
        ram[155] = "0b10111011100101001010001010111010";
        ram[156] = "0b00111111000100001110100111010101";
        ram[157] = "0b00111000101010011101111010001011";
        ram[158] = "0b00111011000000111100101011111011";
        ram[159] = "0b00111010111001011100010011101011";
        ram[160] = "0b10111010101010111101010111011100";
        ram[161] = "0b00111110111100110110011110100001";
        ram[162] = "0b10111011011011101010111010011111";
        ram[163] = "0b00111001111110001000001100110100";
        ram[164] = "0b10111010101110011011101010100001";
        ram[165] = "0b00111011110000010001000110101110";
        ram[166] = "0b10111001110010110110110001111010";
        ram[167] = "0b00111010101110001000110010100100";
        ram[168] = "0b00111111001011011100010101110010";
        ram[169] = "0b00111010100101111010011001111010";
        ram[170] = "0b10111011000100100000001110100011";
        ram[171] = "0b00111111000101111101101101011110";
        ram[172] = "0b00111111001101010010011110110011";
        ram[173] = "0b10111011001101101011011011100001";
        ram[174] = "0b00111111001001101000000111111110";
        ram[175] = "0b00111011001110111101001110000000";
        ram[176] = "0b00111111001100001101000111011001";
        ram[177] = "0b10111000011001101010111111001101";
        ram[178] = "0b10111010110011111110000101010100";
        ram[179] = "0b00111001110010101110011001000011";
        ram[180] = "0b10111010110111110111101001001110";
        for (unsigned i = 181; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_Rg6) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_Rg6_ram* meminst;


SC_CTOR(predict_ensemble_Rg6) {
meminst = new predict_ensemble_Rg6_ram("predict_ensemble_Rg6_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_Rg6() {
    delete meminst;
}


};//endmodule
#endif
