// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_cow_H__
#define __predict_ensemble_cow_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_cow_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_cow_ram) {
        ram[0] = "0b00111100000100011011001111110010";
        ram[1] = "0b00111010011010111110110111111010";
        ram[2] = "0b00111100010110000011100000111011";
        ram[3] = "0b10111010010000011111110010001111";
        ram[4] = "0b00111101010011011011010010001001";
        ram[5] = "0b00111001110001011010100000010101";
        ram[6] = "0b00111111011110000011101001000011";
        ram[7] = "0b00111101011101111010010111110100";
        ram[8] = "0b10111001110101001101110001100110";
        ram[9] = "0b00111110000100001111100111010011";
        ram[10] = "0b00111110010110100010010010001001";
        ram[11] = "0b10110111111100110100010100000111";
        ram[12] = "0b00111010000101001110010111010110";
        ram[13] = "0b00111110100110001111100110110001";
        ram[14] = "0b00111111011110000111011001111101";
        ram[15] = "0b10111010000110000000101100100100";
        ram[16] = "0b00111110000111001100000001111011";
        ram[17] = "0b00111111011000010111010001100000";
        ram[18] = "0b00111001001110111011000111110010";
        ram[19] = "0b00111001100101001110010111010110";
        ram[20] = "0b10111000111101010101110111100110";
        ram[21] = "0b00111111011010111100000111110000";
        ram[22] = "0b00111101110110000101010000000100";
        ram[23] = "0b00111101110001011101000110000001";
        ram[24] = "0b10111001000110100010010000000011";
        ram[25] = "0b00111000010001010010000111011110";
        ram[26] = "0b10111001100111001100001100011010";
        ram[27] = "0b00111110101001001100000100100010";
        ram[28] = "0b00111110101100101010000000000010";
        ram[29] = "0b10111000110010110110110001111010";
        ram[30] = "0b00111001101001011010110011001101";
        ram[31] = "0b00111101110001101100100101111110";
        ram[32] = "0b00111101011010000111010111010101";
        ram[33] = "0b00111001110010101110011001000011";
        ram[34] = "0b00111110110101100101001110000111";
        ram[35] = "0b10111001110100000010010001110000";
        ram[36] = "0b00111111010010001100011011010110";
        ram[37] = "0b00111110100101100101011000100110";
        ram[38] = "0b00111001010100001010101010101000";
        ram[39] = "0b00111110100010110001011100000101";
        ram[40] = "0b00111111000000010101111101000110";
        ram[41] = "0b00111110111101110000000001101001";
        ram[42] = "0b10111001010001000001010101101110";
        ram[43] = "0b10111000110110100001101010010011";
        ram[44] = "0b00111101100111011011110100110000";
        ram[45] = "0b10111001100100010011101001010000";
        ram[46] = "0b00111000100100101100110011110111";
        ram[47] = "0b00111110010100000110001010010001";
        ram[48] = "0b00111000101011100001000001001001";
        ram[49] = "0b00111000101010111111011101101010";
        ram[50] = "0b00111101101101100000110110001000";
        ram[51] = "0b00111110000101111101010101100111";
        ram[52] = "0b00111110011010001011001000100000";
        ram[53] = "0b10111000100110110011000001110011";
        ram[54] = "0b00111101111000010011000010011100";
        ram[55] = "0b00111101111001111101101100101011";
        ram[56] = "0b00111000110010010101001110011100";
        ram[57] = "0b00111110100000110010101111111110";
        ram[58] = "0b00111110110110001101100010001000";
        ram[59] = "0b00111111000110010010011100111101";
        ram[60] = "0b00111111010000011011111101111011";
        ram[61] = "0b00110111111000100111111000001111";
        ram[62] = "0b10110111111000100111111000001111";
        ram[63] = "0b10111000100110010001011110010100";
        ram[64] = "0b00111111000110101010011010001111";
        ram[65] = "0b00111000001101000101101011100110";
        ram[66] = "0b00111110010000100011100001010100";
        ram[67] = "0b00110111001001111100010110101100";
        ram[68] = "0b00111001000110010001011110010100";
        ram[69] = "0b00111111011010001110001010110000";
        ram[70] = "0b00111000100011001000001001011010";
        ram[71] = "0b10111000000100101100110011110111";
        ram[72] = "0b00110111010010010101001110011100";
        ram[73] = "0b10111000010111100100110001010001";
        ram[74] = "0b00111110111101011000000110101110";
        ram[75] = "0b00111111011001101110111001110100";
        ram[76] = "0b00111111011011110101001011001010";
        ram[77] = "0b00111111000011111000111000001000";
        ram[78] = "0b00111000001000111001001111101110";
        ram[79] = "0b00111111011000111100111001000010";
        ram[80] = "0b00111000011011110001001101001001";
        ram[81] = "0b10111000111011110001001101001001";
        ram[82] = "0b00111111011100101010010000110011";
        ram[83] = "0b00111110111100110111101011100101";
        ram[84] = "0b10110111111110111010100010000010";
        ram[85] = "0b00111111010111101101011001000101";
        ram[86] = "0b10111000011011110001001101001001";
        ram[87] = "0b00111000001100000010100100101000";
        ram[88] = "0b10110111010010010101001110011100";
        ram[89] = "0b00111110110000110110001000100000";
        ram[90] = "0b00110111101110001000110010100100";
        ram[91] = "0b00111110001101000101110011111111";
        ram[92] = "0b00111000000010100110100101111011";
        ram[93] = "0b00111110111001011111111000010001";
        ram[94] = "0b00111110110111001110110110010001";
        ram[95] = "0b00111111000100000010010011010101";
        ram[96] = "0b00111110010101110100010110111111";
        ram[97] = "0b00111110100100100101110111110010";
        ram[98] = "0b10111000000000100000010111111111";
        ram[99] = "0b00110111101100000010100100101000";
        ram[100] = "0b10110110100001100011011110111101";
        ram[101] = "0b10111000010111100100110001010001";
        ram[102] = "0b10110110100001100011011110111101";
        ram[103] = "0b00111000010000001111000000100000";
        ram[104] = "0b00111110011000010010010001001010";
        ram[105] = "0b10110111000101101111111010110101";
        ram[106] = "0b00110111000101101111111010110101";
        ram[107] = "0b10110111111110111010100010000010";
        ram[108] = "0b00111110101011011000101001110110";
        ram[109] = "0b00111110111101100110110010110001";
        ram[110] = "0b00111110000000100011100111100111";
        ram[111] = "0b10110101100001100011011110111101";
        ram[112] = "0b00111000010110100001101010010011";
        ram[113] = "0b10111000000011101001101100111001";
        ram[114] = "0b00111110000001110101100000011001";
        ram[115] = "0b00111000010100011011011100010111";
        ram[116] = "0b00111110011110011111010001001101";
        ram[117] = "0b10111000000100101100110011110111";
        ram[118] = "0b00111111001000101001111000101100";
        ram[119] = "0b00111111001000000001001010001100";
        ram[120] = "0b00111111011010010010101100111101";
        ram[121] = "0b00111110100010100000110101010110";
        ram[122] = "0b10111000010111100100110001010001";
        ram[123] = "0b00111111000000110110000000000111";
        ram[124] = "0b00111000001101000101101011100110";
        ram[125] = "0b00111110110110110111101110001101";
        ram[126] = "0b00111111011000000000001100010101";
        ram[127] = "0b10110111010110100001101010010011";
        ram[128] = "0b00111110010011111110001111110011";
        ram[129] = "0b00111111001101111001111011100000";
        ram[130] = "0b00110111110010010101001110011100";
        ram[131] = "0b00111111001000010111010001100000";
        ram[132] = "0b10110111100011101001101100111001";
        ram[133] = "0b10110111000101101111111010110101";
        ram[134] = "0b00111111000011001100101000101110";
        ram[135] = "0b10110110110010010101001110011100";
        ram[136] = "0b00110111010110100001101010010011";
        ram[137] = "0b00111110111010000100001100011100";
        ram[138] = "0b00111111000111010000111011101101";
        ram[139] = "0b00110111110100011011011100010111";
        ram[140] = "0b00110111010010010101001110011100";
        ram[141] = "0b00111111001101101110001010101000";
        ram[142] = "0b00111111001001111101000011000000";
        ram[143] = "0b00111110100101011111101001100110";
        ram[144] = "0b10110110110010010101001110011100";
        ram[145] = "0b00111111001001010011000010011100";
        ram[146] = "0b00111111001101000011001001000100";
        ram[147] = "0b00111110111101110100010111100001";
        ram[148] = "0b00110111101100000010100100101000";
        ram[149] = "0b10110110111010101110000110001011";
        ram[150] = "0b00111111010000010001011111000110";
        ram[151] = "0b00111111000011001000010011111001";
        ram[152] = "0b00111111000010010100000001010111";
        ram[153] = "0b10110111000101101111111010110101";
        ram[154] = "0b10110111111000100111111000001111";
        ram[155] = "0b00111111000010101001110101000001";
        ram[156] = "0b00111111000110011001010001011011";
        ram[157] = "0b00110111101001111100010110101100";
        ram[158] = "0b00111110001101001111000001010010";
        ram[159] = "0b00111110110100011000110000111011";
        ram[160] = "0b00111111000101011011010000000011";
        ram[161] = "0b10110110101001111100010110101100";
        ram[162] = "0b00110111001110001000110010100100";
        ram[163] = "0b00111111000010110100011101100011";
        ram[164] = "0b00110111011110111010100010000010";
        ram[165] = "0b00111111000000010011101001010000";
        ram[166] = "0b10110111011110111010100010000010";
        ram[167] = "0b00110111100001100011011110111101";
        ram[168] = "0b00111111001011101110101011101010";
        ram[169] = "0b00110111000001100011011110111101";
        ram[170] = "0b10110110111010101110000110001011";
        ram[171] = "0b10110111110000001111000000100000";
        ram[172] = "0b10110110110010010101001110011100";
        ram[173] = "0b00111110111101111000010011101100";
        ram[174] = "0b00111111001010100010110000010011";
        ram[175] = "0b10110111010110100001101010010011";
        ram[176] = "0b00111110111010101011010000001111";
        ram[177] = "0b10110110111010101110000110001011";
        ram[178] = "0b00111111001100100001011110110001";
        ram[179] = "0b00111110110111101100111111001000";
        ram[180] = "0b00110111011110111010100010000010";
        ram[181] = "0b10110111011110111010100010000010";
        ram[182] = "0b10110110000001100011011110111101";
        ram[183] = "0b10110110110010010101001110011100";
        ram[184] = "0b00111111000010001110011011010001";
        ram[185] = "0b00110111001110001000110010100100";
        ram[186] = "0b10000000000000000000000000000000";
        ram[187] = "0b00110110101001111100010110101100";
        ram[188] = "0b10110110101001111100010110101100";
        ram[189] = "0b00110110000001100011011110111101";
        ram[190] = "0b00110110101001111100010110101100";
        ram[191] = "0b00000000000000000000000000000000";
        ram[192] = "0b00000000000000000000000000000000";
        ram[193] = "0b00000000000000000000000000000000";
        ram[194] = "0b00000000000000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_cow) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_cow_ram* meminst;


SC_CTOR(predict_ensemble_cow) {
meminst = new predict_ensemble_cow_ram("predict_ensemble_cow_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_cow() {
    delete meminst;
}


};//endmodule
#endif
