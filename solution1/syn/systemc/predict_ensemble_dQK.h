// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_dQK_H__
#define __predict_ensemble_dQK_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_dQK_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_dQK_ram) {
        ram[0] = "0b00111111011110010011001100001001";
        ram[1] = "0b00111111010011010100000000010100";
        ram[2] = "0b00111000110111100100110001010001";
        ram[3] = "0b00111101010010110010010100101101";
        ram[4] = "0b00111110100111110010001100100101";
        ram[5] = "0b10111001101010101110101011111011";
        ram[6] = "0b00111111011100101110111100001011";
        ram[7] = "0b00111001101100011011101111001111";
        ram[8] = "0b00111110110011011011001111100001";
        ram[9] = "0b00111101011011001111110110001111";
        ram[10] = "0b10111000100110110011000001110011";
        ram[11] = "0b10111000111011110001001101001001";
        ram[12] = "0b00111110111000110110110111001010";
        ram[13] = "0b10111000010000001111000000100000";
        ram[14] = "0b00111101100001000111111101010110";
        ram[15] = "0b00111110110011010001000110011101";
        ram[16] = "0b00111000100011101001101100111001";
        ram[17] = "0b00111000110100011011011100010111";
        ram[18] = "0b00111101100111011011110100110000";
        ram[19] = "0b00111110001101110000001010100011";
        ram[20] = "0b00110111001110001000110010100100";
        ram[21] = "0b10111000100001000001111011011110";
        ram[22] = "0b00111101001010101101100100100111";
        ram[23] = "0b10110111010110100001101010010011";
        ram[24] = "0b10111000001001111100010110101100";
        ram[25] = "0b00111000001010111111011101101010";
        ram[26] = "0b00111111011101110011011111111100";
        ram[27] = "0b00111101011110001011001101110000";
        ram[28] = "0b10111000011110111010100010000010";
        ram[29] = "0b00111000010011011000010101011001";
        ram[30] = "0b00111110011011001111111100100010";
        ram[31] = "0b00111110100110010110101010101101";
        ram[32] = "0b00111111011000100001111001110001";
        ram[33] = "0b00111110011000011110101101000010";
        ram[34] = "0b00111110011110010101111000011000";
        ram[35] = "0b00111111011000001011100111101101";
        ram[36] = "0b00110111100011101001101100111001";
        ram[37] = "0b00110111101110001000110010100100";
        ram[38] = "0b00111110100010101111001010110110";
        ram[39] = "0b00110110101001111100010110101100";
        ram[40] = "0b00111000100010100110100101111011";
        ram[41] = "0b00111111010111000011000001101110";
        ram[42] = "0b10110111111100110100010100000111";
        ram[43] = "0b10110111101100000010100100101000";
        ram[44] = "0b00111110100111010111011100110010";
        ram[45] = "0b00111110101101011000001100011111";
        ram[46] = "0b00110111110000001111000000100000";
        ram[47] = "0b00111110100100010000011010001010";
        ram[48] = "0b00111110100001000110101000011010";
        ram[49] = "0b00111111001001001100101011010101";
        ram[50] = "0b00111110101110100110110001111111";
        ram[51] = "0b00111110100001001001110101011010";
        ram[52] = "0b00110111011110111010100010000010";
        ram[53] = "0b10110111011010101110000110001011";
        ram[54] = "0b00111110100100000000101111101101";
        ram[55] = "0b00111111001111111110000011110000";
        ram[56] = "0b10110111111000100111111000001111";
        ram[57] = "0b00111110110011010010000000101001";
        ram[58] = "0b00111110100011101110100011010001";
        ram[59] = "0b00110110101001111100010110101100";
        ram[60] = "0b10110110101001111100010110101100";
        ram[61] = "0b00110110111010101110000110001011";
        ram[62] = "0b10110111001110001000110010100100";
        ram[63] = "0b00111110111111001110000110100100";
        ram[64] = "0b00111110000001110001110001010100";
        ram[65] = "0b00110111110110100001101010010011";
        ram[66] = "0b00110110010010010101001110011100";
        ram[67] = "0b10110111000101101111111010110101";
        ram[68] = "0b00111111001100111101101010010100";
        ram[69] = "0b00111110001010110000001101011100";
        ram[70] = "0b00111110100011100011101000011001";
        ram[71] = "0b00111110110111010100001000111110";
        ram[72] = "0b00110111011010101110000110001011";
        ram[73] = "0b00111111001011111110110100110001";
        ram[74] = "0b00110111000001100011011110111101";
        ram[75] = "0b00111110011011101111111100011001";
        ram[76] = "0b00111111000011011110111100100000";
        ram[77] = "0b10110110111010101110000110001011";
        ram[78] = "0b00111110011001100111110000101000";
        ram[79] = "0b00110101100001100011011110111101";
        ram[80] = "0b10110110000001100011011110111101";
        ram[81] = "0b00111110100010101011000000100001";
        ram[82] = "0b10110111001110001000110010100100";
        ram[83] = "0b10110111100001100011011110111101";
        ram[84] = "0b10110111001001111100010110101100";
        ram[85] = "0b00111110011111110000011111000000";
        ram[86] = "0b10000000000000000000000000000000";
        ram[87] = "0b00110111000101101111111010110101";
        ram[88] = "0b00111110111000000011001000010010";
        ram[89] = "0b00110111000101101111111010110101";
        ram[90] = "0b00111110101000111000110001110110";
        ram[91] = "0b10110110000001100011011110111101";
        ram[92] = "0b10110111010010010101001110011100";
        ram[93] = "0b10110110100001100011011110111101";
        ram[94] = "0b00111110111001110011101001011000";
        ram[95] = "0b10110111001001111100010110101100";
        ram[96] = "0b00111110101010101111001011111010";
        ram[97] = "0b00110101100001100011011110111101";
        ram[98] = "0b10110101100001100011011110111101";
        ram[99] = "0b00111110101001111101011110100001";
        ram[100] = "0b00111111001011010010000000011001";
        ram[101] = "0b00111110111001111110000110010111";
        ram[102] = "0b10110111011110111010100010000010";
        ram[103] = "0b00111111001010010000101000100100";
        ram[104] = "0b00111110111010100001001101111111";
        ram[105] = "0b00110110101001111100010110101100";
        ram[106] = "0b10110101100001100011011110111101";
        ram[107] = "0b00111111011101110000001101101101";
        ram[108] = "0b10110111001110001000110010100100";
        ram[109] = "0b10000000000000000000000000000000";
        ram[110] = "0b00111110111111111100101110010010";
        ram[111] = "0b00111111010110110111101000101101";
        ram[112] = "0b00110110111010101110000110001011";
        ram[113] = "0b00110111010010010101001110011100";
        ram[114] = "0b00110110000001100011011110111101";
        ram[115] = "0b00111111010010100010111010010000";
        ram[116] = "0b00110110110010010101001110011100";
        ram[117] = "0b00111110110101010000011010111100";
        ram[118] = "0b00110110110010010101001110011100";
        ram[119] = "0b00111110001000001101001101001010";
        ram[120] = "0b00111101111110001011000101010111";
        ram[121] = "0b00110111010010010101001110011100";
        ram[122] = "0b00111110110001010001000010010000";
        ram[123] = "0b00111111000111011111001011001011";
        ram[124] = "0b00111111010100110110100110101001";
        ram[125] = "0b10110110010010010101001110011100";
        ram[126] = "0b00111110100110111111111001011101";
        ram[127] = "0b10110111010110100001101010010011";
        ram[128] = "0b10110110000001100011011110111101";
        ram[129] = "0b00111111010011011010000100000001";
        ram[130] = "0b00110110100001100011011110111101";
        ram[131] = "0b00110110000001100011011110111101";
        ram[132] = "0b00111111001001111110101001100000";
        ram[133] = "0b00111111001001100101010110110000";
        ram[134] = "0b00111110111010111111001000001010";
        ram[135] = "0b00111110110110010101011100000100";
        ram[136] = "0b10110101100001100011011110111101";
        ram[137] = "0b00111111001101000011101110010010";
        ram[138] = "0b10110110100001100011011110111101";
        ram[139] = "0b10110110110010010101001110011100";
        ram[140] = "0b10110101100001100011011110111101";
        ram[141] = "0b00000000000000000000000000000000";
        ram[142] = "0b00110101100001100011011110111101";
        ram[143] = "0b00111111010010000010100110011110";
        ram[144] = "0b00110110010010010101001110011100";
        ram[145] = "0b00111111010001010101101110111100";
        ram[146] = "0b10110110000001100011011110111101";
        ram[147] = "0b00111110000010100011001001101110";
        ram[148] = "0b00110110000001100011011110111101";
        ram[149] = "0b00110101100001100011011110111101";
        ram[150] = "0b00111111011100001011001011001000";
        ram[151] = "0b00111110111000100101111000110101";
        ram[152] = "0b10110110010010010101001110011100";
        ram[153] = "0b10110110000001100011011110111101";
        ram[154] = "0b00111110111101111011110111110001";
        ram[155] = "0b00110110000001100011011110111101";
        ram[156] = "0b00111111010101101110101111000100";
        ram[157] = "0b00111111011001110111100000000011";
        ram[158] = "0b00111111011011100100010011111010";
        ram[159] = "0b00111111001010101001000010011011";
        ram[160] = "0b10110110000001100011011110111101";
        ram[161] = "0b10000000000000000000000000000000";
        ram[162] = "0b00110110000001100011011110111101";
        ram[163] = "0b00111110111100111111000111101001";
        ram[164] = "0b00111111001011011100010101110010";
        ram[165] = "0b00111111000011101001000101110101";
        ram[166] = "0b00111110110011001101110010000111";
        ram[167] = "0b00110110000001100011011110111101";
        ram[168] = "0b00111110100011110011111010001010";
        ram[169] = "0b00111110110110000101010100010001";
        ram[170] = "0b00110101100001100011011110111101";
        ram[171] = "0b10110110000001100011011110111101";
        ram[172] = "0b00111111000110100001011101001100";
        ram[173] = "0b10000000000000000000000000000000";
        ram[174] = "0b00000000000000000000000000000000";
        ram[175] = "0b00000000000000000000000000000000";
        ram[176] = "0b10000000000000000000000000000000";
        ram[177] = "0b00111110001101100000110110001000";
        ram[178] = "0b10110110000001100011011110111101";
        ram[179] = "0b00110101100001100011011110111101";
        ram[180] = "0b10000000000000000000000000000000";
        for (unsigned i = 181; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_dQK) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_dQK_ram* meminst;


SC_CTOR(predict_ensemble_dQK) {
meminst = new predict_ensemble_dQK_ram("predict_ensemble_dQK_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_dQK() {
    delete meminst;
}


};//endmodule
#endif
