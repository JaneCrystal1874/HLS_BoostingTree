// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_dwH_H__
#define __predict_ensemble_dwH_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_dwH_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_dwH_ram) {
        ram[0] = "0b00111111011110010011001100001001";
        ram[1] = "0b00111111011110101011111000111000";
        ram[2] = "0b00111001011110001000001100110100";
        ram[3] = "0b00111101001110110100110000111100";
        ram[4] = "0b10111001000010010101110100001011";
        ram[5] = "0b00111001000001010010101101001110";
        ram[6] = "0b00111111001011010001011101000000";
        ram[7] = "0b00111110101000000011011101010000";
        ram[8] = "0b00111101100110101100000111010011";
        ram[9] = "0b00111001001111101101011101000001";
        ram[10] = "0b00111100000100011011001111110010";
        ram[11] = "0b00111111011011010000111000010011";
        ram[12] = "0b00111111011011000100111000011110";
        ram[13] = "0b00111000110010110110110001111010";
        ram[14] = "0b00111101100011000011110110101011";
        ram[15] = "0b10111001100001110100010000101100";
        ram[16] = "0b10110111110000001111000000100000";
        ram[17] = "0b00111110001001011010010010101101";
        ram[18] = "0b10111001000111110110001000110000";
        ram[19] = "0b00111110101011100110001110100110";
        ram[20] = "0b00111110101001111011111000010010";
        ram[21] = "0b10111000100110010001011110010100";
        ram[22] = "0b00111111000101101100100111010001";
        ram[23] = "0b10111000000101101111111010110101";
        ram[24] = "0b00111001001100000010100100101000";
        ram[25] = "0b10111000101000111001001111101110";
        ram[26] = "0b00111101101010010101000110000011";
        ram[27] = "0b00111110001100010100000010011010";
        ram[28] = "0b00111111010011010011110010111100";
        ram[29] = "0b10111000011101110111011011000101";
        ram[30] = "0b00111110000000101111011110110001";
        ram[31] = "0b00111000001111001011111001100010";
        ram[32] = "0b00111101110011100001000011001111";
        ram[33] = "0b00110111011010101110000110001011";
        ram[34] = "0b10111000100001000001111011011110";
        ram[35] = "0b00111111001011011010100110000110";
        ram[36] = "0b00111111010111101100110000011101";
        ram[37] = "0b10110111101110001000110010100100";
        ram[38] = "0b00111101111011000010101111011000";
        ram[39] = "0b00111100011110101010110011011010";
        ram[40] = "0b10111000101001011010110011001101";
        ram[41] = "0b00111111011100101010010000110011";
        ram[42] = "0b00111000000111110110001000110000";
        ram[43] = "0b00110111111110111010100010000010";
        ram[44] = "0b00111110001110110011101110111000";
        ram[45] = "0b00110111110100011011011100010111";
        ram[46] = "0b10110111101001111100010110101100";
        ram[47] = "0b00111111011010100101011010111101";
        ram[48] = "0b00111000000001100011011110111101";
        ram[49] = "0b10110111100011101001101100111001";
        ram[50] = "0b00111110011000100101111001010111";
        ram[51] = "0b00111111010100001011000101000110";
        ram[52] = "0b00111000001101000101101011100110";
        ram[53] = "0b00111110001100110110001001100011";
        ram[54] = "0b00111110010101010110111001101001";
        ram[55] = "0b00111110000011000010101110010101";
        ram[56] = "0b10110111101001111100010110101100";
        ram[57] = "0b10110111010010010101001110011100";
        ram[58] = "0b00111110111110111001001000011001";
        ram[59] = "0b00110111010110100001101010010011";
        ram[60] = "0b00111110011011000000000000010001";
        ram[61] = "0b00111111010011010001110111011110";
        ram[62] = "0b00111111010110001011000000101001";
        ram[63] = "0b00110110110010010101001110011100";
        ram[64] = "0b10110110101001111100010110101100";
        ram[65] = "0b10110111011110111010100010000010";
        ram[66] = "0b00111111000100100000010001011100";
        ram[67] = "0b10111000000100101100110011110111";
        ram[68] = "0b00111110110110111001000101001111";
        ram[69] = "0b00111111010111000010010101011011";
        ram[70] = "0b00111000000010100110100101111011";
        ram[71] = "0b00111111010101000101110100010000";
        ram[72] = "0b10110111000101101111111010110101";
        ram[73] = "0b00110111000101101111111010110101";
        ram[74] = "0b00111101101010001010101011001001";
        ram[75] = "0b00111110100000011111000110101110";
        ram[76] = "0b10110111010110100001101010010011";
        ram[77] = "0b00111111001000111000111110001010";
        ram[78] = "0b00110111000001100011011110111101";
        ram[79] = "0b10110110101001111100010110101100";
        ram[80] = "0b00110110101001111100010110101100";
        ram[81] = "0b00110111100001100011011110111101";
        ram[82] = "0b00111111010101100010011101101011";
        ram[83] = "0b00111111001110011100110111010101";
        ram[84] = "0b00111111010001110100001100100000";
        ram[85] = "0b00111111010011010100010011001100";
        ram[86] = "0b00110111010110100001101010010011";
        ram[87] = "0b00111110010000001001011011111111";
        ram[88] = "0b10110110111010101110000110001011";
        ram[89] = "0b00000000000000000000000000000000";
        ram[90] = "0b00110111000001100011011110111101";
        ram[91] = "0b00111110100011011010001101011101";
        ram[92] = "0b10110111011110111010100010000010";
        ram[93] = "0b00111110001010101111110110010111";
        ram[94] = "0b00111111000101010010001100101101";
        ram[95] = "0b00111110100100010111000101111110";
        ram[96] = "0b00111110100101101010101101111010";
        ram[97] = "0b00110110000001100011011110111101";
        ram[98] = "0b10110110101001111100010110101100";
        ram[99] = "0b00111110101111011111001101010010";
        ram[100] = "0b00110110010010010101001110011100";
        ram[101] = "0b00110111100001100011011110111101";
        ram[102] = "0b10110101100001100011011110111101";
        ram[103] = "0b10110111101100000010100100101000";
        ram[104] = "0b00111111001010101111000101000101";
        ram[105] = "0b00111110111101001101110000100011";
        ram[106] = "0b00111110101100101100101011011110";
        ram[107] = "0b00111111001101001101101100100111";
        ram[108] = "0b00110110100001100011011110111101";
        ram[109] = "0b00111110111000000001101100000000";
        ram[110] = "0b00110110010010010101001110011100";
        ram[111] = "0b10110110100001100011011110111101";
        ram[112] = "0b00111110111011001100000100000001";
        ram[113] = "0b00111111011001100010101001101111";
        ram[114] = "0b10110110100001100011011110111101";
        ram[115] = "0b00111110110101101001000101000011";
        ram[116] = "0b00111110010010011010010000010110";
        ram[117] = "0b00110101100001100011011110111101";
        ram[118] = "0b10110101100001100011011110111101";
        ram[119] = "0b00111111010001101110111000110001";
        ram[120] = "0b00110110010010010101001110011100";
        ram[121] = "0b00110101100001100011011110111101";
        ram[122] = "0b00111110101101000000100000110001";
        ram[123] = "0b00000000000000000000000000000000";
        ram[124] = "0b00110110000001100011011110111101";
        ram[125] = "0b00111111001110111100110110001010";
        ram[126] = "0b00110110100001100011011110111101";
        ram[127] = "0b10000000000000000000000000000000";
        ram[128] = "0b00000000000000000000000000000000";
        ram[129] = "0b00111111000001110111110111101001";
        ram[130] = "0b10110110000001100011011110111101";
        ram[131] = "0b00111111001001110100010111010000";
        ram[132] = "0b00111111010110100000000011010010";
        ram[133] = "0b00111111001001111011101110100101";
        ram[134] = "0b10110110010010010101001110011100";
        ram[135] = "0b00111111010010001011111111110100";
        ram[136] = "0b10110101100001100011011110111101";
        ram[137] = "0b00111111010000110000100101000010";
        ram[138] = "0b00111110110011100001000110011001";
        ram[139] = "0b00111110110111101001000111001001";
        ram[140] = "0b00111111000111000111001001101101";
        ram[141] = "0b00111110111100100110101010000111";
        ram[142] = "0b00111110001000100000001010010111";
        ram[143] = "0b10110110000001100011011110111101";
        ram[144] = "0b10000000000000000000000000000000";
        ram[145] = "0b00111111000100101010010000000001";
        ram[146] = "0b00111111000101101001010000100101";
        ram[147] = "0b10000000000000000000000000000000";
        ram[148] = "0b00110110101001111100010110101100";
        ram[149] = "0b00111110111010001101000111011001";
        ram[150] = "0b00111110111100111111110110110101";
        ram[151] = "0b10000000000000000000000000000000";
        ram[152] = "0b00111111000100101110001111100111";
        ram[153] = "0b00111111000000000111110001100011";
        ram[154] = "0b00111110101111010010101101001110";
        ram[155] = "0b10110110000001100011011110111101";
        ram[156] = "0b00111111000100001001001010011011";
        ram[157] = "0b00111110111001111011011000110101";
        ram[158] = "0b00111110111011010000000011110111";
        ram[159] = "0b10110110000001100011011110111101";
        ram[160] = "0b10000000000000000000000000000000";
        ram[161] = "0b00110101100001100011011110111101";
        ram[162] = "0b00110110010010010101001110011100";
        ram[163] = "0b00110101100001100011011110111101";
        ram[164] = "0b10110101100001100011011110111101";
        ram[165] = "0b00110110100001100011011110111101";
        ram[166] = "0b00110110000001100011011110111101";
        ram[167] = "0b00000000000000000000000000000000";
        ram[168] = "0b10110101100001100011011110111101";
        ram[169] = "0b00110110000001100011011110111101";
        ram[170] = "0b00111110100111101000011001000000";
        ram[171] = "0b10110101100001100011011110111101";
        ram[172] = "0b00111110101010011110111010101010";
        ram[173] = "0b00110101100001100011011110111101";
        ram[174] = "0b00111110110000111101111011000110";
        ram[175] = "0b00110101100001100011011110111101";
        ram[176] = "0b00111111000001101000111000101110";
        ram[177] = "0b10110101100001100011011110111101";
        ram[178] = "0b00000000000000000000000000000000";
        ram[179] = "0b00000000000000000000000000000000";
        ram[180] = "0b10110101100001100011011110111101";
        for (unsigned i = 181; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_dwH) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_dwH_ram* meminst;


SC_CTOR(predict_ensemble_dwH) {
meminst = new predict_ensemble_dwH_ram("predict_ensemble_dwH_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_dwH() {
    delete meminst;
}


};//endmodule
#endif
