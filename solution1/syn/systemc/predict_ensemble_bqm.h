// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_bqm_H__
#define __predict_ensemble_bqm_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_bqm_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_bqm_ram) {
        ram[0] = "0b00111100001110101000100000100111";
        ram[1] = "0b10111011100001001001110010110010";
        ram[2] = "0b00111101100110101011010010110111";
        ram[3] = "0b00111110010000011100010111000101";
        ram[4] = "0b00111101001110110100110000111100";
        ram[5] = "0b00111000101100100100001000000111";
        ram[6] = "0b00111011110010100000110000101000";
        ram[7] = "0b00111011001011001001111100110000";
        ram[8] = "0b00111111011110000011101001000011";
        ram[9] = "0b00111111011000000001100011100111";
        ram[10] = "0b10111010111001011110011001111001";
        ram[11] = "0b00111111001111000111101000101001";
        ram[12] = "0b00111111001110100001100001001000";
        ram[13] = "0b00111101110001101100100101111110";
        ram[14] = "0b00111110000110111110011011100110";
        ram[15] = "0b00111010000011110010000101110001";
        ram[16] = "0b10111011001100011000100101111010";
        ram[17] = "0b00111111000111101000101110100000";
        ram[18] = "0b00111110101111100011010100011110";
        ram[19] = "0b00111011000011101100110110001110";
        ram[20] = "0b00111111010110100100101010011101";
        ram[21] = "0b10111011100010011101001001111100";
        ram[22] = "0b00111110110001111011100110011101";
        ram[23] = "0b00111110110111110110011101101111";
        ram[24] = "0b00111110000000110001001010110010";
        ram[25] = "0b00111111010000000011001111000110";
        ram[26] = "0b00111010011110010000100101101100";
        ram[27] = "0b10111011010000001000101101110110";
        ram[28] = "0b00111111000001101111100111011011";
        ram[29] = "0b00111110110110110011010110001111";
        ram[30] = "0b00111110110010010110011110101001";
        ram[31] = "0b00111110110110110101101100001100";
        ram[32] = "0b00111101101000111011101010111010";
        ram[33] = "0b00111110110111101101011111101001";
        ram[34] = "0b10111001111111001011010011110010";
        ram[35] = "0b00111111000000010101011000011001";
        ram[36] = "0b10111010110111000111011010001110";
        ram[37] = "0b00111110001101001110110000100000";
        ram[38] = "0b10111010011000111100110110011010";
        ram[39] = "0b00111011001000101011100111010100";
        ram[40] = "0b00111111000011000101011001110001";
        ram[41] = "0b10111010101100111101010010101110";
        ram[42] = "0b10111010000001000001111011011110";
        ram[43] = "0b00111010000001000001111011011110";
        ram[44] = "0b00111111011001000100100101110111";
        ram[45] = "0b00111000011111111101101001000000";
        ram[46] = "0b00111001110011101001000111001001";
        ram[47] = "0b00111101011001100000111001010010";
        ram[48] = "0b00111011100100111010011100010001";
        ram[49] = "0b00111110001101101110010111001101";
        ram[50] = "0b00111111011011101101000111010000";
        ram[51] = "0b00111111000010011010111001100000";
        ram[52] = "0b00111010001010001101001000011100";
        ram[53] = "0b00111111001010010110111111111100";
        ram[54] = "0b10111010001010000100101111100100";
        ram[55] = "0b00111010010011000111100011101010";
        ram[56] = "0b00111001000110100010010000000011";
        ram[57] = "0b00111101101101000111110110000000";
        ram[58] = "0b10111010100100111101100101100110";
        ram[59] = "0b00111110010110110010011101000110";
        ram[60] = "0b00111010101011100001000001001001";
        ram[61] = "0b10111000110110000000000110110100";
        ram[62] = "0b00111001010101001101110001100110";
        ram[63] = "0b00111110100110100010111001111111";
        ram[64] = "0b00111111001101011101000101110000";
        ram[65] = "0b00111010001001101111110001011001";
        ram[66] = "0b00111110010011110000011111000000";
        ram[67] = "0b00111010100101101011101110011001";
        ram[68] = "0b00111110000000011101010111000011";
        ram[69] = "0b00111111010100011111110111011111";
        ram[70] = "0b00111110111001011101000110000001";
        ram[71] = "0b00111111011011000111000110100100";
        ram[72] = "0b10111010010101001101110001100110";
        ram[73] = "0b10111010011001110011011000000101";
        ram[74] = "0b00111110010110011111010010010000";
        ram[75] = "0b00111010000101010010100011110010";
        ram[76] = "0b00111110110011101111101101001100";
        ram[77] = "0b00111010011110011000111110100011";
        ram[78] = "0b00111110110010110000110100001111";
        ram[79] = "0b00111111001001000000010001010011";
        ram[80] = "0b00111110000010100101001100110011";
        ram[81] = "0b00111111011000100100000010010110";
        ram[82] = "0b00111010000001000110000111111010";
        ram[83] = "0b00111010001100100100001000000111";
        ram[84] = "0b00111111010110111010001011110000";
        ram[85] = "0b00111110101110010101010101110001";
        ram[86] = "0b10111001110100100011110101001111";
        ram[87] = "0b00111010000100001111011100110100";
        ram[88] = "0b10111000010010010101001110011100";
        ram[89] = "0b00111110110111100101001100100010";
        ram[90] = "0b00111001101110111011000111110010";
        ram[91] = "0b00111010000011110110010010001100";
        ram[92] = "0b00111110110011110011111010101011";
        ram[93] = "0b00111111010110110100001010111011";
        ram[94] = "0b00111001100111001100001100011010";
        ram[95] = "0b00111110100001100001110111101011";
        ram[96] = "0b10111001111000010111000110011111";
        ram[97] = "0b00111111000100001001001101010011";
        ram[98] = "0b00111110111011100011101011100010";
        ram[99] = "0b10111000000111110110001000110000";
        ram[100] = "0b00111111000111000001001110001000";
        ram[101] = "0b10111001110001001001101110100110";
        ram[102] = "0b00111111000100010111000000101110";
        ram[103] = "0b00111110001110100111100101111001";
        ram[104] = "0b00111111011000000110011011010011";
        ram[105] = "0b00111001101001000001101000100110";
        ram[106] = "0b00111110001101100000001001000011";
        ram[107] = "0b00111110111000101101101010011000";
        ram[108] = "0b00111001110101000101011000101110";
        ram[109] = "0b00111010001110000000011001101100";
        ram[110] = "0b00111000100001100011011110111101";
        ram[111] = "0b10111010000011110110010010001100";
        ram[112] = "0b00111110110101111100001011101100";
        ram[113] = "0b00111111001001001100000010101101";
        ram[114] = "0b00111001111100000001111110111000";
        ram[115] = "0b00111111011011000001010101011101";
        ram[116] = "0b00111111010100110011111010001010";
        ram[117] = "0b10111010100011010100101110101101";
        ram[118] = "0b00111000100110110011000001110011";
        ram[119] = "0b10111001110010001100110101100100";
        ram[120] = "0b00111000101101000101101011100110";
        ram[121] = "0b00111110010101001100011011100111";
        ram[122] = "0b00111110010100101000110111001010";
        ram[123] = "0b10111000001110001000110010100100";
        ram[124] = "0b10111010000011111010011110101000";
        ram[125] = "0b00111110110001110100001111101001";
        ram[126] = "0b10111010000001110000000100010001";
        ram[127] = "0b10111010100010001001001110111000";
        ram[128] = "0b00111000100010000101000010011100";
        ram[129] = "0b00111110011111010100000100110001";
        ram[130] = "0b00111001011010011101010100011011";
        ram[131] = "0b00111010010000011011100101110011";
        ram[132] = "0b00111110011110101101110011010011";
        ram[133] = "0b10111001110101110111101101111100";
        ram[134] = "0b00111110110101100111010011110011";
        ram[135] = "0b00111111000000110010100001010010";
        ram[136] = "0b00111110110011001101111011000010";
        ram[137] = "0b00111110111111101100010110110000";
        ram[138] = "0b00111111010010000111000101110001";
        ram[139] = "0b00111001100110000000101100100100";
        ram[140] = "0b10111010000001011111010010100001";
        ram[141] = "0b00111110100010100100110001100010";
        ram[142] = "0b00111110100110111010111011101111";
        ram[143] = "0b00111000111110011000111110100011";
        ram[144] = "0b00111010000101011010111100101001";
        ram[145] = "0b10111010000010101010110010010111";
        ram[146] = "0b00111110110011100000011100011100";
        ram[147] = "0b00111111001010100010111010010000";
        ram[148] = "0b00111001001101111000000000110100";
        ram[149] = "0b00111111001101101110101011101010";
        ram[150] = "0b00111111010011101111010100010010";
        ram[151] = "0b10111010000000000011000000111100";
        ram[152] = "0b00111110100001100000111100111101";
        ram[153] = "0b00111111001101000101110100010000";
        ram[154] = "0b00111110110111101001111100100111";
        ram[155] = "0b00111110101100110110010101100111";
        ram[156] = "0b00111111000111010000111011101101";
        ram[157] = "0b10111000110010110110110001111010";
        ram[158] = "0b00111000100011001000001001011010";
        ram[159] = "0b10111000110101011110100011010101";
        ram[160] = "0b00111111001010001000111010111101";
        ram[161] = "0b00111001001010001101001000011100";
        ram[162] = "0b10111001100100111101100101100110";
        ram[163] = "0b00111000111110011000111110100011";
        ram[164] = "0b10111001101011101001011010000001";
        ram[165] = "0b10110110100001100011011110111101";
        ram[166] = "0b10111001110101110111101101111100";
        ram[167] = "0b00111001110001110011101010111101";
        ram[168] = "0b00111110111010111111100100011110";
        ram[169] = "0b00111001010100111100111111110110";
        ram[170] = "0b00111010001111111010000010010100";
        ram[171] = "0b00111111000001100111001000110010";
        ram[172] = "0b10111001000111010100100101010010";
        ram[173] = "0b10111001011011001111101001101010";
        ram[174] = "0b10111001111111101100110111010001";
        ram[175] = "0b10111001101001011010110011001101";
        ram[176] = "0b00111000101011100001000001001001";
        ram[177] = "0b00110110010010010101001110011100";
        ram[178] = "0b00111001011110111010100010000010";
        for (unsigned i = 179; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_bqm) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_bqm_ram* meminst;


SC_CTOR(predict_ensemble_bqm) {
meminst = new predict_ensemble_bqm_ram("predict_ensemble_bqm_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_bqm() {
    delete meminst;
}


};//endmodule
#endif
