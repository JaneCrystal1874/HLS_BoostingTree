// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_ibs_H__
#define __predict_ensemble_ibs_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_ibs_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_ibs_ram) {
        ram[0] = "0b00111110101110011101100100101011";
        ram[1] = "0b00111110111011000110010110100101";
        ram[2] = "0b00111110111101011010011001000000";
        ram[3] = "0b00111111000001000001100100111011";
        ram[4] = "0b00111110000100110110001110110010";
        ram[5] = "0b00111111011100010110110101001100";
        ram[6] = "0b00111101100001111001011001111101";
        ram[7] = "0b00111110101010110110110010111110";
        ram[8] = "0b00111110110101001001111000000010";
        ram[9] = "0b10111101111001011001101001110100";
        ram[10] = "0b10111011000010011100000110110101";
        ram[11] = "0b00111111000010001111001110011001";
        ram[12] = "0b00111101111111111110010111001001";
        ram[13] = "0b00111101001000010001101010010111";
        ram[14] = "0b00111101101010010101000110000011";
        ram[15] = "0b00111101111001110001010110000011";
        ram[16] = "0b00111110100010001100111011010101";
        ram[17] = "0b00111110111111101000001110100001";
        ram[18] = "0b10111101110010110100011101000001";
        ram[19] = "0b00111110110001011100010001000100";
        ram[20] = "0b10111101100000000010011001000110";
        ram[21] = "0b10111101110110111101110101110110";
        ram[22] = "0b00111111000000000110001100010111";
        ram[23] = "0b10111100101110101000100000100111";
        ram[24] = "0b00111101111001001100010010001011";
        ram[25] = "0b00111100110010011010010101100101";
        ram[26] = "0b00111110100100001111100110110001";
        ram[27] = "0b00111110010101100110101111101000";
        ram[28] = "0b00111110100111011100110011101010";
        ram[29] = "0b00111111000000000111110111010100";
        ram[30] = "0b00111110110011111001101111111110";
        ram[31] = "0b10111101001000100111000101111010";
        ram[32] = "0b00111101111101011100001000001001";
        ram[33] = "0b00111101001111100110100100100111";
        ram[34] = "0b00111110111110001100000000100111";
        ram[35] = "0b10111101010111110101000001011101";
        ram[36] = "0b00111110111011010100100001000101";
        ram[37] = "0b10111100101111100101101110000101";
        ram[38] = "0b00111110110110101111011111110101";
        ram[39] = "0b00111110100010101110001100111111";
        ram[40] = "0b10111101101000110100001000100100";
        ram[41] = "0b00111110110111010000100100111001";
        ram[42] = "0b00111101011000101101100000111100";
        ram[43] = "0b00111101110111001000010010110110";
        ram[44] = "0b00111100111010111011001101000010";
        ram[45] = "0b00111111010011010001011001010101";
        ram[46] = "0b00111110000010001100010101000011";
        ram[47] = "0b00111110010010010100100011011100";
        ram[48] = "0b10111100110000001111111011001110";
        ram[49] = "0b00111111001000101110100011000000";
        ram[50] = "0b10111101000001101011100010110111";
        ram[51] = "0b00111101010011001001010000101101";
        ram[52] = "0b00111110011011001111111100100010";
        ram[53] = "0b00111101101110110010011100000011";
        ram[54] = "0b00111101000000110101101011001001";
        ram[55] = "0b10111100110110000110100001110111";
        ram[56] = "0b00111110111100111110110100110001";
        ram[57] = "0b10111101100101100101110000101101";
        ram[58] = "0b00111111011110111100000110001011";
        ram[59] = "0b00111101100111000111101000111010";
        ram[60] = "0b00111110000110111101111110001111";
        ram[61] = "0b00111110100110110110111011111000";
        ram[62] = "0b00111110010110001101100101110011";
        ram[63] = "0b00111100111001011010000101000101";
        ram[64] = "0b00111110110010111010011111011011";
        ram[65] = "0b00111100111011111111001110101110";
        ram[66] = "0b10111100000000011110110011010101";
        ram[67] = "0b00111011101000111001110001010010";
        ram[68] = "0b10111101011100011111100110101101";
        ram[69] = "0b00111011100110101001100101110100";
        ram[70] = "0b00111101000010000101010011001110";
        ram[71] = "0b00111111010011100011000100101111";
        ram[72] = "0b10111100111100101111100110000111";
        ram[73] = "0b10111101010111010110001001111100";
        ram[74] = "0b00111110010101110100010110111111";
        ram[75] = "0b00111100001111100000100110111011";
        ram[76] = "0b00111101011011011010101010010011";
        ram[77] = "0b10111100110111110111110001100111";
        ram[78] = "0b00111110001101010001110110101100";
        ram[79] = "0b00111100000010000011111111010101";
        ram[80] = "0b10111101000110110000101010110011";
        ram[81] = "0b10111011100101110010100010100110";
        ram[82] = "0b00111100110000001011000100110110";
        ram[83] = "0b00111110111110101111111100101010";
        ram[84] = "0b00111101111101011111111101100001";
        ram[85] = "0b00111110110101001011111101101110";
        ram[86] = "0b00111110100011011000010001101111";
        ram[87] = "0b00111101101100011010111010110100";
        ram[88] = "0b00111110111010100101010011100111";
        ram[89] = "0b00111111001001010010100000111001";
        ram[90] = "0b00111110101001100110101001110111";
        ram[91] = "0b00111110101110110001001100010110";
        ram[92] = "0b00111011101101111101010000010111";
        ram[93] = "0b00111110110110100000001110000010";
        ram[94] = "0b00111110101100000011000110001100";
        ram[95] = "0b00111101010110001000111101000011";
        ram[96] = "0b00111111000101101001010000100101";
        ram[97] = "0b00111101011110100100111001111011";
        ram[98] = "0b00111010110101000101011000101110";
        ram[99] = "0b00111111001100111010100111100011";
        ram[100] = "0b00111110111101110100010111100001";
        ram[101] = "0b00111101010111110001001001111111";
        ram[102] = "0b00111100110010110011001111011011";
        ram[103] = "0b00111110101000110100000011010101";
        ram[104] = "0b00111101000100001110111111011101";
        ram[105] = "0b00111111000101011101000101110000";
        ram[106] = "0b00111100011100100010011111010000";
        ram[107] = "0b10111100101000101101001011111110";
        ram[108] = "0b00111100101011101000100111101100";
        ram[109] = "0b00111111000110100101100100111010";
        ram[110] = "0b00111111001110001100000010101101";
        ram[111] = "0b00111111000101011110111110000101";
        ram[112] = "0b00111110111000111010000011000111";
        ram[113] = "0b00111111000011001010000101001001";
        ram[114] = "0b00111100011001001100100101000011";
        ram[115] = "0b10111100101010011100011101111010";
        ram[116] = "0b00111110100000101111111010100100";
        ram[117] = "0b00111011110000110000100011111111";
        ram[118] = "0b00111111001100000111000100011101";
        ram[119] = "0b10111100110110010111000010110101";
        ram[120] = "0b00111111010110011001010010011111";
        ram[121] = "0b00111110111100101000000011110001";
        ram[122] = "0b00111110110000101110100011000000";
        ram[123] = "0b00111100110010000001001010111110";
        ram[124] = "0b00111111000011011111000001011111";
        ram[125] = "0b00111010011101000101000101110110";
        ram[126] = "0b10111100001011011111011100011111";
        ram[127] = "0b00111100001001101010110010101000";
        ram[128] = "0b10111100100000011000100000101011";
        ram[129] = "0b00111101010101101111011001010001";
        ram[130] = "0b00111100101100110110110111101100";
        ram[131] = "0b00111101000010111001011001101100";
        ram[132] = "0b10111011110000010110110111110100";
        ram[133] = "0b00111110110100110000001101011100";
        ram[134] = "0b10111100010011011100000000010010";
        ram[135] = "0b00111110110001011001111111010011";
        ram[136] = "0b00111111000001101000111000101110";
        ram[137] = "0b00111110111000011100011011010010";
        ram[138] = "0b00111111010000100111000111001110";
        ram[139] = "0b10111011101100111110010101110101";
        ram[140] = "0b00111101000010010011011101001100";
        ram[141] = "0b00111111000100101100010101101101";
        ram[142] = "0b00111111001000111011111011011011";
        ram[143] = "0b10111100101100100100010000100000";
        ram[144] = "0b00111111000111011000111110010011";
        ram[145] = "0b10111100110000100001100111101011";
        ram[146] = "0b00111110111001101010000000010010";
        ram[147] = "0b00111110100011001000111000000100";
        ram[148] = "0b00111111010011101010110001100100";
        ram[149] = "0b10111100100110100111110000011000";
        ram[150] = "0b00111100100010001101111100110111";
        ram[151] = "0b10111100001111010010011100111101";
        ram[152] = "0b10111101000100010100111000111100";
        ram[153] = "0b10111101011001010001110000011001";
        ram[154] = "0b10111101000010101001000101010011";
        ram[155] = "0b00111111000110010110111100000000";
        ram[156] = "0b00111110001110101001011111100001";
        ram[157] = "0b00111111000110001101011111100000";
        ram[158] = "0b10111100101010010111101111111010";
        ram[159] = "0b00111101000100001010111011011010";
        ram[160] = "0b00111100010100001011111110100001";
        ram[161] = "0b00111100110111001011100110101010";
        ram[162] = "0b00111011100110011011011011110110";
        ram[163] = "0b00111111000001000110011001001101";
        ram[164] = "0b00111110111110100100010100101100";
        ram[165] = "0b00111100101000111100001000010010";
        ram[166] = "0b10111011010101001000100010000011";
        ram[167] = "0b10111100001111011101001100110101";
        ram[168] = "0b10111100110111011000100101001000";
        ram[169] = "0b00111110111111000011101000000000";
        ram[170] = "0b00111111001001101000101110100000";
        ram[171] = "0b10111011101110111110110010101011";
        ram[172] = "0b10111100100010111111111000111011";
        ram[173] = "0b00111110111001101100001110011000";
        ram[174] = "0b00111100010111100000010100000011";
        ram[175] = "0b10111100000000111111110101010000";
        ram[176] = "0b00111111010000101101011000010011";
        ram[177] = "0b00111100000011000101000000000101";
        ram[178] = "0b10111011101001110101100010011111";
        for (unsigned i = 179; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_ibs) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_ibs_ram* meminst;


SC_CTOR(predict_ensemble_ibs) {
meminst = new predict_ensemble_ibs_ram("predict_ensemble_ibs_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_ibs() {
    delete meminst;
}


};//endmodule
#endif
