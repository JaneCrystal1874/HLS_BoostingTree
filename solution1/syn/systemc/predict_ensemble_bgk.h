// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_bgk_H__
#define __predict_ensemble_bgk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_bgk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_bgk_ram) {
        ram[0] = "0b00111111011010101011110000011111";
        ram[1] = "0b00111101000011100110110100010110";
        ram[2] = "0b00111101110000110000000100100001";
        ram[3] = "0b00111100000001101001010000000011";
        ram[4] = "0b00111101111101110011001000010110";
        ram[5] = "0b10111100000001010110000111010100";
        ram[6] = "0b00111001011001011010001101011101";
        ram[7] = "0b10111011100010101101111011101100";
        ram[8] = "0b00111101011110101001000110010111";
        ram[9] = "0b00111110101011001001001111001001";
        ram[10] = "0b00111101101000111110111110101110";
        ram[11] = "0b00111011011100010101111001111101";
        ram[12] = "0b00111101010110000010000000011101";
        ram[13] = "0b00111111000011010101110010000101";
        ram[14] = "0b00111101110000111101011100001010";
        ram[15] = "0b10111011001000111000001100100111";
        ram[16] = "0b00111010111101100010011100111001";
        ram[17] = "0b10111011111011110000001010000010";
        ram[18] = "0b00111010110011000101011101011100";
        ram[19] = "0b00111011010100110100100110111111";
        ram[20] = "0b00111101111000001100000111111101";
        ram[21] = "0b00111110111001111000001010110010";
        ram[22] = "0b00111110001100010001000000011011";
        ram[23] = "0b10111011011001000011001001000100";
        ram[24] = "0b00111001100010011110001101000011";
        ram[25] = "0b00111110001010000111110010100110";
        ram[26] = "0b00111110010010111101100111001011";
        ram[27] = "0b00111110100100010000011010001010";
        ram[28] = "0b10111011010011110011100110001111";
        ram[29] = "0b00111111010011010001011101000000";
        ram[30] = "0b00111111011000000001100011100111";
        ram[31] = "0b00111110100101010100000111011001";
        ram[32] = "0b00111010010101010001111110000010";
        ram[33] = "0b00111011001001101010100001110110";
        ram[34] = "0b00111001101100110100111001110111";
        ram[35] = "0b00111110100101000001001110011000";
        ram[36] = "0b10111010101101100011000010101001";
        ram[37] = "0b10111010100000100000010111111111";
        ram[38] = "0b00111110100010001000111111001001";
        ram[39] = "0b00111111000101010100110001100110";
        ram[40] = "0b00111111011010000010011111111010";
        ram[41] = "0b10111001100110110011000001110011";
        ram[42] = "0b00111010000100101100110011110111";
        ram[43] = "0b00111101110111001111011001111011";
        ram[44] = "0b10111011000101001101010100001111";
        ram[45] = "0b00111111011101010111011111101010";
        ram[46] = "0b00111011000001110110010110111010";
        ram[47] = "0b00111010111101101000101111100011";
        ram[48] = "0b00111110001110101100100011100111";
        ram[49] = "0b00111110100111011101100000001110";
        ram[50] = "0b00111010100100000100111101101110";
        ram[51] = "0b10111010110111100110110111011111";
        ram[52] = "0b00111110101101001011010010101111";
        ram[53] = "0b00111110111101010000001011101111";
        ram[54] = "0b00111110011100001111000011101001";
        ram[55] = "0b00111010001111111010000010010100";
        ram[56] = "0b00111110100011101101111001110110";
        ram[57] = "0b00111010101110000100100110001000";
        ram[58] = "0b00111111001111101000101110100000";
        ram[59] = "0b10111010111001101000111000111111";
        ram[60] = "0b00111110010111010110101010011100";
        ram[61] = "0b00111110100101101011101101010110";
        ram[62] = "0b10111010101000100010001011010101";
        ram[63] = "0b10111001100111010100100101010010";
        ram[64] = "0b00111010001011100001000001001001";
        ram[65] = "0b00111010111100110100010100000111";
        ram[66] = "0b00111110100001100000100101111000";
        ram[67] = "0b00111010010000110000100011111111";
        ram[68] = "0b00111111001110001011101000110000";
        ram[69] = "0b00111110111100110101010101000111";
        ram[70] = "0b00111110011010100011000010011000";
        ram[71] = "0b00111110101100111000011001101110";
        ram[72] = "0b10111010011100111100101100111110";
        ram[73] = "0b10111010110000110010101010001101";
        ram[74] = "0b00111001100011010000100010010010";
        ram[75] = "0b00111010111001010001110100100110";
        ram[76] = "0b00111110100110100001111101101101";
        ram[77] = "0b00111110101011011000101001110110";
        ram[78] = "0b00111110101011011110010110110000";
        ram[79] = "0b00111110110110011111011000100011";
        ram[80] = "0b00111111001001101100111001101000";
        ram[81] = "0b10110110010010010101001110011100";
        ram[82] = "0b00111010011010010000101111001000";
        ram[83] = "0b00111110011111110101100000111010";
        ram[84] = "0b00111111001101100110011111111001";
        ram[85] = "0b00110111111000100111111000001111";
        ram[86] = "0b10111010100001101101111110000011";
        ram[87] = "0b00111111001000111011001110010110";
        ram[88] = "0b00111111011011101111111101111110";
        ram[89] = "0b10111001100100010011101001010000";
        ram[90] = "0b10111010110000000000010100111110";
        ram[91] = "0b10111001100001110100010000101100";
        ram[92] = "0b00111010010100011111101000110011";
        ram[93] = "0b00111110000000010010110001101011";
        ram[94] = "0b00111111010001000101110111011001";
        ram[95] = "0b00111110111111011011111111001111";
        ram[96] = "0b10111011010110110100100010010001";
        ram[97] = "0b00111101111110001001101001000110";
        ram[98] = "0b00111110111011101101101100101111";
        ram[99] = "0b00111010010000101100010111100011";
        ram[100] = "0b00111011000001110101010011110011";
        ram[101] = "0b00111111011001100010001110011110";
        ram[102] = "0b00111111000001110111100000100101";
        ram[103] = "0b10111001111100111100101100111110";
        ram[104] = "0b00111011000100101101110110111110";
        ram[105] = "0b00111110110011100001000000101000";
        ram[106] = "0b00111110111110001000111101000011";
        ram[107] = "0b00111111010001111000110101100001";
        ram[108] = "0b00111001101001111100010110101100";
        ram[109] = "0b00111010011010001100100010101100";
        ram[110] = "0b00111111011000000110011011010011";
        ram[111] = "0b00111110111011101101001111011000";
        ram[112] = "0b00111110110110010100100100011111";
        ram[113] = "0b00111111000110011011111011100100";
        ram[114] = "0b00111111000111100010111100100111";
        ram[115] = "0b00111110110111110000101010100010";
        ram[116] = "0b00111110110011100100011000000110";
        ram[117] = "0b00111111010010011100000110100100";
        ram[118] = "0b00111010001000000110111010100000";
        ram[119] = "0b00111110111011000111110001010010";
        ram[120] = "0b10111010011000110100011101100011";
        ram[121] = "0b00111110110011010100101101101010";
        ram[122] = "0b00111001100000101000110000110111";
        ram[123] = "0b00111110110000001001101000100100";
        ram[124] = "0b00111110110101000110100110010100";
        ram[125] = "0b00111111000010111011101100110000";
        ram[126] = "0b00111111001001011001011001010011";
        ram[127] = "0b00111010001010001000111100000000";
        ram[128] = "0b00111111010010100010001101001011";
        ram[129] = "0b10111010101011000101110000010100";
        ram[130] = "0b00111111000000010111010001100000";
        ram[131] = "0b00111111001110110000101101111100";
        ram[132] = "0b10111010000100010011101001010000";
        ram[133] = "0b00111110100011110101111110010001";
        ram[134] = "0b00111110111000000011101001010100";
        ram[135] = "0b00111010000110000000101100100100";
        ram[136] = "0b00111010110001111100000011110100";
        ram[137] = "0b00111001110100010011000011100000";
        ram[138] = "0b00111111000000010011011011100111";
        ram[139] = "0b00111111000010011001000111111111";
        ram[140] = "0b00111110110101111110101010100011";
        ram[141] = "0b00111111000000111001100111110110";
        ram[142] = "0b00111111000011001011000000111010";
        ram[143] = "0b10111010100010001011010101000110";
        ram[144] = "0b00111111000111001110000111000110";
        ram[145] = "0b00111111001001100101100111100010";
        ram[146] = "0b00111010000001111000011101001000";
        ram[147] = "0b10111001001110101010010110000011";
        ram[148] = "0b10111010000110101010101000111011";
        ram[149] = "0b00111111001001011000111010101000";
        ram[150] = "0b00111010001100010011010110011000";
        ram[151] = "0b10111000100001100011011110111101";
        ram[152] = "0b00111010100100100100011010111111";
        ram[153] = "0b00111001111001100010100110010101";
        ram[154] = "0b00111110101100101011100001100011";
        ram[155] = "0b10111001110100100011110101001111";
        ram[156] = "0b00110111100001100011011110111101";
        ram[157] = "0b10111010101011111010001011110000";
        ram[158] = "0b10111001110111001011100110101010";
        ram[159] = "0b10111010000000110001001001101111";
        ram[160] = "0b00111001010101011110100011010101";
        ram[161] = "0b00111111010111011001111010000100";
        ram[162] = "0b00111111000011110111110100100000";
        ram[163] = "0b00111001000000110001001001101111";
        ram[164] = "0b00111111010000000100101010000100";
        ram[165] = "0b00111111001000011000110001011101";
        ram[166] = "0b00111001111100100011100010010111";
        ram[167] = "0b10111001100111110110001000110000";
        ram[168] = "0b10111010010111011000001011111101";
        ram[169] = "0b10111001100110000000101100100100";
        ram[170] = "0b00111001001000000110111010100000";
        ram[171] = "0b10111010000101011111001001000101";
        ram[172] = "0b10111000100011101001101100111001";
        ram[173] = "0b00111110111011011101111110000111";
        ram[174] = "0b10111001011110101001110000010011";
        ram[175] = "0b10110111010110100001101010010011";
        ram[176] = "0b10111010100011111010011110101000";
        ram[177] = "0b00111010100011001010001111101000";
        ram[178] = "0b00111010000100111101100101100110";
        ram[179] = "0b00111001001000000110111010100000";
        ram[180] = "0b10111010001011010000001111011010";
        ram[181] = "0b00111110110111001011001001110100";
        ram[182] = "0b00111111000101100010101101001001";
        ram[183] = "0b00111001110011111001111000111000";
        ram[184] = "0b10111001001100010011010110011000";
        ram[185] = "0b00111001101100110100111001110111";
        ram[186] = "0b00111010011001111111111101011000";
        for (unsigned i = 187; i < 195 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_bgk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_bgk_ram* meminst;


SC_CTOR(predict_ensemble_bgk) {
meminst = new predict_ensemble_bgk_ram("predict_ensemble_bgk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_bgk() {
    delete meminst;
}


};//endmodule
#endif
