// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __predict_ensemble_Hfu_H__
#define __predict_ensemble_Hfu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct predict_ensemble_Hfu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 195;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(predict_ensemble_Hfu_ram) {
        ram[0] = "0b00111111000011111111011000101011";
        ram[1] = "0b00111111011100011010101101111110";
        ram[2] = "0b00111101110110000100011001100011";
        ram[3] = "0b00111100111101011001000000111010";
        ram[4] = "0b00111110111011001010001001110111";
        ram[5] = "0b00111101011111000111001011100010";
        ram[6] = "0b00111110000011010111110010110011";
        ram[7] = "0b10111100100010100110000100010111";
        ram[8] = "0b00111101000010110010011101000110";
        ram[9] = "0b00111101001010001001011101100011";
        ram[10] = "0b00111111000110001101001001011111";
        ram[11] = "0b10111011010100110000011010100011";
        ram[12] = "0b10111101001011011111001111111001";
        ram[13] = "0b00111110101010010000001101100100";
        ram[14] = "0b00111110111111011111010001011110";
        ram[15] = "0b00111100011110010100100001010110";
        ram[16] = "0b00111110010000101101001111001000";
        ram[17] = "0b10111100101100011000100101111010";
        ram[18] = "0b00111111001011101010110100101110";
        ram[19] = "0b10111100100000101111011100101011";
        ram[20] = "0b00111110110101001000110010110101";
        ram[21] = "0b00111110111010101111111111110011";
        ram[22] = "0b00111111001100101011110101111111";
        ram[23] = "0b00111110011000110100101000000010";
        ram[24] = "0b00111111010110001011101000110000";
        ram[25] = "0b00111100110000000100010000101000";
        ram[26] = "0b00111101111010011100100000000000";
        ram[27] = "0b00111011110000001010110100000100";
        ram[28] = "0b10111100000110100001101110100000";
        ram[29] = "0b00111110111100010010100110001001";
        ram[30] = "0b00111110000010001100101100001000";
        ram[31] = "0b00111110111111100011001111110000";
        ram[32] = "0b00111111010010100111111110110010";
        ram[33] = "0b10111100101100000000001101101000";
        ram[34] = "0b00111111000001101110100000101001";
        ram[35] = "0b00111101110101011101001111011101";
        ram[36] = "0b00111111011000010111010001100000";
        ram[37] = "0b10111011111111011110101101010011";
        ram[38] = "0b00111111000111000011000010110001";
        ram[39] = "0b00111100010000100101100011010110";
        ram[40] = "0b00111010101011111110011000001100";
        ram[41] = "0b10111011010100110011100011111000";
        ram[42] = "0b00111011001100111010001001011001";
        ram[43] = "0b00111111010111001011111100011010";
        ram[44] = "0b00111110111001010011100001101001";
        ram[45] = "0b00111111000111000101011110001110";
        ram[46] = "0b10111011010110000001001001111011";
        ram[47] = "0b00111110100111100110110101011001";
        ram[48] = "0b00111011111110011101001010111111";
        ram[49] = "0b00111110110100001110111100010011";
        ram[50] = "0b00111111010111110100001001010111";
        ram[51] = "0b10111100100100111011000110001110";
        ram[52] = "0b00111111011010001011101000110000";
        ram[53] = "0b00111011100111001100101101111101";
        ram[54] = "0b00111000000010100110100101111011";
        ram[55] = "0b10111011001010100011001001101110";
        ram[56] = "0b00111011100001011011100111101001";
        ram[57] = "0b10111100011010011000000100111000";
        ram[58] = "0b00111111000110001001011010001001";
        ram[59] = "0b00111111001100001011011011001000";
        ram[60] = "0b00111100001011001101100111101000";
        ram[61] = "0b00111110100010001000111111001001";
        ram[62] = "0b10111100001011100101111111111010";
        ram[63] = "0b00111101000000001001001111011001";
        ram[64] = "0b00111010010100000010010001110000";
        ram[65] = "0b00111111011110000111011001111101";
        ram[66] = "0b00111100001110010100100101100010";
        ram[67] = "0b00111100000000000010110000001010";
        ram[68] = "0b10111010001011101101100110011101";
        ram[69] = "0b10111011111100111010100110110000";
        ram[70] = "0b00111010010011101001000111001001";
        ram[71] = "0b10111011101001100100110000110000";
        ram[72] = "0b00111011000010110101010001011100";
        ram[73] = "0b00111010101001100101010010010011";
        ram[74] = "0b00111110001011101011111000010110";
        ram[75] = "0b00111101111111010000101101110100";
        ram[76] = "0b00111100000111111010010101001100";
        ram[77] = "0b10111100000110001000000010010101";
        ram[78] = "0b10111010101011000101110000010100";
        ram[79] = "0b10111011111100010100010101010010";
        ram[80] = "0b00111110000001001110011111101111";
        ram[81] = "0b00111100100011011111000101011010";
        ram[82] = "0b00111110101111110110010010001100";
        ram[83] = "0b00111110010001000111001100000100";
        ram[84] = "0b00111110110011001000001000111000";
        ram[85] = "0b00111110001011100110011100001110";
        ram[86] = "0b00111110100110110100100110011101";
        ram[87] = "0b10111100001001110100011111011000";
        ram[88] = "0b00111110011000111101101010110110";
        ram[89] = "0b00111010100100100110100001001101";
        ram[90] = "0b00111100000110101000010001111011";
        ram[91] = "0b00111110111101111101000010101111";
        ram[92] = "0b00111111010101101000000011010000";
        ram[93] = "0b00111011110110011111000010100010";
        ram[94] = "0b00111111000000101010110000010001";
        ram[95] = "0b00111010001100110100111001110111";
        ram[96] = "0b10111011101110011100001100000101";
        ram[97] = "0b00111111010110100111110101100111";
        ram[98] = "0b10111010101111110001101001011101";
        ram[99] = "0b00111111000111100100110111000010";
        ram[100] = "0b00111111001101100101000010110101";
        ram[101] = "0b00111110010010111010001100000001";
        ram[102] = "0b10110111010110100001101010010011";
        ram[103] = "0b00111111000000001001100010110011";
        ram[104] = "0b00111011100110101101110010010000";
        ram[105] = "0b00111111010110110111100110110111";
        ram[106] = "0b00111110110110111011101001110111";
        ram[107] = "0b00111100010100101000010010011101";
        ram[108] = "0b00111111000110100111111100111101";
        ram[109] = "0b00111110011111100001001000011111";
        ram[110] = "0b10111100000001100110101000010010";
        ram[111] = "0b00111110111000001110100100101101";
        ram[112] = "0b00111110110000101011101110101010";
        ram[113] = "0b10111011101011001010111111110111";
        ram[114] = "0b00111110001111001111001110011001";
        ram[115] = "0b00111011110100101011101100100011";
        ram[116] = "0b00111001110101101111010101000101";
        ram[117] = "0b00111110011111000111110000001111";
        ram[118] = "0b00111110100010101111111101001100";
        ram[119] = "0b00111100000001001110110001100011";
        ram[120] = "0b00111110101100010111010001100000";
        ram[121] = "0b00111011000100101111111101001100";
        ram[122] = "0b10111011110010110111010011011110";
        ram[123] = "0b00111110001100010011111011000100";
        ram[124] = "0b00111111001101100010100001000110";
        ram[125] = "0b10111011010101011000010000101011";
        ram[126] = "0b00111111000010111011101001100111";
        ram[127] = "0b00111111000001001101101110001100";
        ram[128] = "0b00111110111010010110011110001000";
        ram[129] = "0b10111011000100100010010100110001";
        ram[130] = "0b00111111001010000000001010001110";
        ram[131] = "0b00111010010101000101011000101110";
        ram[132] = "0b10111011100111111100111100111110";
        ram[133] = "0b00111111001111011010101111010010";
        ram[134] = "0b00111111000001000011110111101110";
        ram[135] = "0b00111111000100101110100011000000";
        ram[136] = "0b10111001100101111000010011101100";
        ram[137] = "0b10111100010010101001111011110101";
        ram[138] = "0b10111011000101001011001110000001";
        ram[139] = "0b00111110111001100001001100001010";
        ram[140] = "0b00111110111011100010000111111011";
        ram[141] = "0b00111110011110011001001111010101";
        ram[142] = "0b00111011111010001110000111010110";
        ram[143] = "0b00111001100010001101011011010100";
        ram[144] = "0b00111011101001100000100100010100";
        ram[145] = "0b10111011001000101111110011110000";
        ram[146] = "0b00111001100111111110100001101000";
        ram[147] = "0b00111011110011010000111111101001";
        ram[148] = "0b00111110100011010110001110001000";
        ram[149] = "0b00111110111000111011011110010101";
        ram[150] = "0b00111110111100001001001101110101";
        ram[151] = "0b10111100011001000001110101001011";
        ram[152] = "0b00111110110111101101001101110100";
        ram[153] = "0b00111111001011010001011101000000";
        ram[154] = "0b00111110001010001011110001011010";
        ram[155] = "0b00111011101011110101111111010100";
        ram[156] = "0b00111000011111111101101001000000";
        ram[157] = "0b00111111000011001111011100010010";
        ram[158] = "0b00111011111100010101111001111101";
        ram[159] = "0b10111011101001100100110000110000";
        ram[160] = "0b00111010010010111111001010110010";
        ram[161] = "0b00111110110001100100011110011001";
        ram[162] = "0b00111111000000000000000000000000";
        ram[163] = "0b00111100000001010100000001000110";
        ram[164] = "0b00111111001100000000000000000000";
        ram[165] = "0b00111011100010011111010000001010";
        ram[166] = "0b10111011000000000100000100000011";
        ram[167] = "0b00111111001100101110100011000000";
        ram[168] = "0b00111011100110101001100101110100";
        ram[169] = "0b00111110101001101001110101010010";
        ram[170] = "0b10111011111111011100000101100001";
        ram[171] = "0b00111111001101111110101101111101";
        ram[172] = "0b10111011101000000101010101110101";
        ram[173] = "0b10111010000101111100100000001000";
        ram[174] = "0b00111011101101000011100101011000";
        ram[175] = "0b10111011010111111000101100010101";
        ram[176] = "0b00111110100011101001011011000100";
        ram[177] = "0b00111001011100100011100010010111";
        ram[178] = "0b10111011001111111100001000100010";
        ram[179] = "0b00111111010001100010111100000110";
        ram[180] = "0b00111111011000111100101110100011";
        ram[181] = "0b00111001100001111100101001100100";
        ram[182] = "0b00111011100101010011100110111001";
        ram[183] = "0b00111110110011011111000011010100";
        ram[184] = "0b00111111001111100101011010011011";
        ram[185] = "0b00111110100101001010101010111001";
        ram[186] = "0b10111011110101111110100010001010";
        ram[187] = "0b00111011100010001000001011110001";
        ram[188] = "0b10111011001010011011110011111101";
        ram[189] = "0b00111011111001000101001111010010";
        ram[190] = "0b00111011000000011101001110101010";
        ram[191] = "0b00111010110100110000011010100011";
        ram[192] = "0b10111011000111110000111001001110";
        ram[193] = "0b00000000000000000000000000000000";
        ram[194] = "0b00000000000000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(predict_ensemble_Hfu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 195;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


predict_ensemble_Hfu_ram* meminst;


SC_CTOR(predict_ensemble_Hfu) {
meminst = new predict_ensemble_Hfu_ram("predict_ensemble_Hfu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~predict_ensemble_Hfu() {
    delete meminst;
}


};//endmodule
#endif
